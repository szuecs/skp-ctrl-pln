apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    metacontroller.k8s.io/last-applied-configuration: '{"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"zalando.org/aws-load-balancer-ssl-policy":"ELBSecurityPolicy-FS-2018-06","zalando.org/skipper-filter":"oauthTokeninfoAnyKV(\"realm\",
      \"/services\", \"realm\", \"/employees\") -\u003e enableAccessLog(2, 4, 5) -\u003e
      unverifiedAuditLog(\"https://identity.zalando.com/managed-id\") -\u003e oauthTokeninfoAllScope(\"uid\")
      -\u003e flowId(\"reuse\") -\u003e forwardToken(\"X-TokenInfo-Forward\", \"uid\",
      \"scope\", \"realm\")","zalando.org/skipper-predicate":"Weight(5) \u0026\u0026
      Path(\"/api/media\") \u0026\u0026 Method(\"GET\") \u0026\u0026 JWTPayloadAllKV(\"https://identity.zalando.com/realm\",
      \"users\") \u0026\u0026 JWTPayloadAnyKV(\"https://identity.zalando.com/managed-id\",
      \"kanli\", \"https://identity.zalando.com/managed-id\", \"bmooney\", \"https://identity.zalando.com/managed-id\",
      \"egalligan\", \"https://identity.zalando.com/managed-id\", \"rlagarferrei\",
      \"https://identity.zalando.com/managed-id\", \"dgordon\") \u0026\u0026 Header(\"X-Forwarded-Proto\",
      \"https\")"},"labels":{"controller-uid":"9936f518-b27d-4026-8b40-19228e2474b0","deployment-id":"d-obwi5hseno4by2atnnq3bsppj","pipeline-id":"l-2h6c8pup1xcoztczupk4ssdby"},"name":"spp-perf-test-brand-service-get-api-media-admins","namespace":"default"},"spec":{"rules":[{"host":"spp-perf-test-brand-service.smart-product-platform-test.zalan.do","http":{"paths":[{"backend":{"serviceName":"spp-perf-test-brand-service","servicePort":"http"},"pathType":"ImplementationSpecific"}]}}]}}'
    zalando.org/aws-load-balancer-ssl-policy: ELBSecurityPolicy-FS-2018-06
    zalando.org/skipper-filter: oauthTokeninfoAnyKV("realm", "/services", "realm",
      "/employees") -> enableAccessLog(2, 4, 5) -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
      -> oauthTokeninfoAllScope("uid") -> flowId("reuse") -> forwardToken("X-TokenInfo-Forward",
      "uid", "scope", "realm")
    zalando.org/skipper-predicate: Weight(5) && Path("/api/media") && Method("GET")
      && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id",
      "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id",
      "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id",
      "dgordon") && Header("X-Forwarded-Proto", "https")
  creationTimestamp: "2020-03-10T16:04:33Z"
  generation: 2
  labels:
    controller-uid: 9936f518-b27d-4026-8b40-19228e2474b0
    deployment-id: d-obwi5hseno4by2atnnq3bsppj
    pipeline-id: l-2h6c8pup1xcoztczupk4ssdby
  name: spp-perf-test-brand-service-get-api-media-admins
  namespace: default
  ownerReferences:
  - apiVersion: zalando.org/v1
    blockOwnerDeletion: true
    controller: true
    kind: FabricGateway
    name: spp-perf-test-brand-service
    uid: 9936f518-b27d-4026-8b40-19228e2474b0
  resourceVersion: "1357489263"
  uid: 22a75bb6-260d-4a0d-81a4-c979a2b3412f
spec:
  rules:
  - host: spp-perf-test-brand-service.smart-product-platform-test.zalan.do
    http:
      paths:
      - backend:
          service:
            name: spp-perf-test-brand-service
            port:
              name: http
        pathType: ImplementationSpecific
status:
  loadBalancer:
    ingress:
    - hostname: kube-ing-lb-vejw9uwox1cj-898356825914b821.elb.eu-central-1.amazonaws.com
