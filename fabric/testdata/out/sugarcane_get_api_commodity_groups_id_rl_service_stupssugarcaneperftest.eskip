kube_default__sugarcane_get_api_commodity_groups_id_rl_service_stupssugarcaneperftest__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_GET_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_id_rl_service_stupssugarcaneperftest__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_GET_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;