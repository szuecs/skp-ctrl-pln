kube__healthz: Path("/kube-system/healthz") && SourceFromLast("10.0.0.0/8", "192.168.0.0/16", "172.16.0.0/12", "127.0.0.1/8", "fd00::/8", "::1/128")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(200)
  -> disableAccessLog(200)
  -> <shunt>;

kube__redirect: Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_api_infrastructure__api_monitoring_controller__api_monitoring_controller_smart_product_platform_test_zalan_do____api_monitoring_controller: Host(/^(api-monitoring-controller[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-2ky1u4218hm21x7xf47mxa6zg8:0", "2021-11-08T16:02:23Z")
  -> apiUsageMonitoring("{\"api_id\":\"32223a09-c857-49d1-8965-b3d849f012f7\",\"application_id\":\"api-monitoring-controller\",\"path_templates\":[\"/configuration\",\"/job-statistics/latest\"]}")
  -> oauthTokeninfoAnyScope("uid", "tkrop", "uid", "gzeitlinger")
  -> "http://10.2.79.138:4040";

kube_api_infrastructure__api_monitoring_controller__api_monitoring_controller_smart_product_platform_test_zalan_do____api_monitoring_controller_https_redirect: Host(/^(api-monitoring-controller[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_enrichments_frontend__enrichments_buffalo_staging_zalan_do____spp_enrichments_frontend_master_293: Host(/^(enrichments[.]buffalo-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"enrichment-service\",\"application_id\":\"spp-enrichments\",\"path_templates\":[\"/api/enrichments\",\"/api/enrichments/{enrichment_id}\"]}")
  -> modPath("^/+", "/")
  -> <roundRobin, "http://10.2.66.10:9000", "http://10.2.88.160:9000">;

kube_buffalo__spp_enrichments_frontend__enrichments_buffalo_staging_zalan_do____spp_enrichments_frontend_master_293_https_redirect: Host(/^(enrichments[.]buffalo-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_enrichments_frontend__spp_enrichments_smart_product_platform_test_zalan_do____spp_enrichments_frontend_master_293: Host(/^(spp-enrichments[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"enrichment-service\",\"application_id\":\"spp-enrichments\",\"path_templates\":[\"/api/enrichments\",\"/api/enrichments/{enrichment_id}\"]}")
  -> modPath("^/+", "/")
  -> <roundRobin, "http://10.2.66.10:9000", "http://10.2.88.160:9000">;

kube_buffalo__spp_enrichments_frontend__spp_enrichments_smart_product_platform_test_zalan_do____spp_enrichments_frontend_master_293_https_redirect: Host(/^(spp-enrichments[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_enrichments_frontend__spp_enrichments_test_zalandoapis_com____spp_enrichments_frontend_master_293: Host(/^(spp-enrichments-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"enrichment-service\",\"application_id\":\"spp-enrichments\",\"path_templates\":[\"/api/enrichments\",\"/api/enrichments/{enrichment_id}\"]}")
  -> modPath("^/+", "/")
  -> <roundRobin, "http://10.2.66.10:9000", "http://10.2.88.160:9000">;

kube_buffalo__spp_enrichments_frontend__spp_enrichments_test_zalandoapis_com____spp_enrichments_frontend_master_293_https_redirect: Host(/^(spp-enrichments-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_enrichments_frontend_master_288__spp_enrichments_frontend_master_288_smart_product_platform_test_zalan_do____spp_enrichments_frontend_master_288: Host(/^(spp-enrichments-frontend-master-288[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_enrichments_frontend_master_288__spp_enrichments_frontend_master_288_smart_product_platform_test_zalan_do____spp_enrichments_frontend_master_288_https_redirect: Host(/^(spp-enrichments-frontend-master-288[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_enrichments_frontend_master_289__spp_enrichments_frontend_master_289_smart_product_platform_test_zalan_do____spp_enrichments_frontend_master_289: Host(/^(spp-enrichments-frontend-master-289[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_enrichments_frontend_master_289__spp_enrichments_frontend_master_289_smart_product_platform_test_zalan_do____spp_enrichments_frontend_master_289_https_redirect: Host(/^(spp-enrichments-frontend-master-289[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_enrichments_frontend_master_290__spp_enrichments_frontend_master_290_smart_product_platform_test_zalan_do____spp_enrichments_frontend_master_290: Host(/^(spp-enrichments-frontend-master-290[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_enrichments_frontend_master_290__spp_enrichments_frontend_master_290_smart_product_platform_test_zalan_do____spp_enrichments_frontend_master_290_https_redirect: Host(/^(spp-enrichments-frontend-master-290[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_enrichments_frontend_master_291__spp_enrichments_frontend_master_291_smart_product_platform_test_zalan_do____spp_enrichments_frontend_master_291: Host(/^(spp-enrichments-frontend-master-291[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_enrichments_frontend_master_291__spp_enrichments_frontend_master_291_smart_product_platform_test_zalan_do____spp_enrichments_frontend_master_291_https_redirect: Host(/^(spp-enrichments-frontend-master-291[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_enrichments_frontend_master_292__spp_enrichments_frontend_master_292_smart_product_platform_test_zalan_do____spp_enrichments_frontend_master_292: Host(/^(spp-enrichments-frontend-master-292[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_enrichments_frontend_master_292__spp_enrichments_frontend_master_292_smart_product_platform_test_zalan_do____spp_enrichments_frontend_master_292_https_redirect: Host(/^(spp-enrichments-frontend-master-292[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_enrichments_frontend_master_293__spp_enrichments_frontend_master_293_smart_product_platform_test_zalan_do____spp_enrichments_frontend_master_293: Host(/^(spp-enrichments-frontend-master-293[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"enrichment-service\",\"application_id\":\"spp-enrichments\",\"path_templates\":[\"/api/enrichments\",\"/api/enrichments/{enrichment_id}\"]}")
  -> modPath("^/+", "/")
  -> <roundRobin, "http://10.2.66.10:9000", "http://10.2.88.160:9000">;

kube_buffalo__spp_enrichments_frontend_master_293__spp_enrichments_frontend_master_293_smart_product_platform_test_zalan_do____spp_enrichments_frontend_master_293_https_redirect: Host(/^(spp-enrichments-frontend-master-293[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_master_attributes__master_attributes_buffalo_staging_zalan_do____spp_master_attributes_master_267: Host(/^(master-attributes[.]buffalo-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"sps-master-attributes-service\",\"application_id\":\"spp-master-attributes\",\"path_templates\":[\"/api/business-models\",\"/api/business-models/{business_model_label}/versions\",\"/api/business-models/{business_model_label}/versions/{business_model_version}\",\"/api/classifications\",\"/api/classifications/{classification_label}\",\"/api/enrichment-types\",\"/api/enrichment-types/{enrichment_type_label}/versions\",\"/api/enrichment-types/{enrichment_type_label}/versions/{enrichment_type_version}\",\"/api/foreign-entities\",\"/api/foreign-entities/{foreign_entity_label}\",\"/api/outlines\",\"/api/outlines/{outline_label}/versions\",\"/api/outlines/{outline_label}/versions/{outline_version}\",\"/api/relation-types\",\"/api/relation-types/{relation_type_label}/versions\",\"/api/relation-types/{relation_type_label}/versions/{relation_type_version}\",\"/api/types\",\"/api/types/{variant_type_label}\",\"/api/types/{variant_type_label}/attributes\",\"/api/types/{variant_type_label}/attributes/{attribute_label}\",\"/api/types/{variant_type_label}/versions\",\"/api/types/{variant_type_label}/versions/{type_version}\",\"/api/types/{variant_type_label}/versions/{type_version}/attributes\",\"/api/types/{variant_type_label}/versions/{type_version}/attributes/{attribute_label}\"]}")
  -> modPath("^/+", "/")
  -> <roundRobin, "http://10.2.66.7:9000", "http://10.2.88.162:9000">;

kube_buffalo__spp_master_attributes__master_attributes_buffalo_staging_zalan_do____spp_master_attributes_master_267_https_redirect: Host(/^(master-attributes[.]buffalo-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_master_attributes__spp_master_attributes_smart_product_platform_test_zalan_do____spp_master_attributes_master_267: Host(/^(spp-master-attributes[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"sps-master-attributes-service\",\"application_id\":\"spp-master-attributes\",\"path_templates\":[\"/api/business-models\",\"/api/business-models/{business_model_label}/versions\",\"/api/business-models/{business_model_label}/versions/{business_model_version}\",\"/api/classifications\",\"/api/classifications/{classification_label}\",\"/api/enrichment-types\",\"/api/enrichment-types/{enrichment_type_label}/versions\",\"/api/enrichment-types/{enrichment_type_label}/versions/{enrichment_type_version}\",\"/api/foreign-entities\",\"/api/foreign-entities/{foreign_entity_label}\",\"/api/outlines\",\"/api/outlines/{outline_label}/versions\",\"/api/outlines/{outline_label}/versions/{outline_version}\",\"/api/relation-types\",\"/api/relation-types/{relation_type_label}/versions\",\"/api/relation-types/{relation_type_label}/versions/{relation_type_version}\",\"/api/types\",\"/api/types/{variant_type_label}\",\"/api/types/{variant_type_label}/attributes\",\"/api/types/{variant_type_label}/attributes/{attribute_label}\",\"/api/types/{variant_type_label}/versions\",\"/api/types/{variant_type_label}/versions/{type_version}\",\"/api/types/{variant_type_label}/versions/{type_version}/attributes\",\"/api/types/{variant_type_label}/versions/{type_version}/attributes/{attribute_label}\"]}")
  -> modPath("^/+", "/")
  -> <roundRobin, "http://10.2.66.7:9000", "http://10.2.88.162:9000">;

kube_buffalo__spp_master_attributes__spp_master_attributes_smart_product_platform_test_zalan_do____spp_master_attributes_master_267_https_redirect: Host(/^(spp-master-attributes[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_master_attributes__spp_master_attributes_test_zalandoapis_com____spp_master_attributes_master_267: Host(/^(spp-master-attributes-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"sps-master-attributes-service\",\"application_id\":\"spp-master-attributes\",\"path_templates\":[\"/api/business-models\",\"/api/business-models/{business_model_label}/versions\",\"/api/business-models/{business_model_label}/versions/{business_model_version}\",\"/api/classifications\",\"/api/classifications/{classification_label}\",\"/api/enrichment-types\",\"/api/enrichment-types/{enrichment_type_label}/versions\",\"/api/enrichment-types/{enrichment_type_label}/versions/{enrichment_type_version}\",\"/api/foreign-entities\",\"/api/foreign-entities/{foreign_entity_label}\",\"/api/outlines\",\"/api/outlines/{outline_label}/versions\",\"/api/outlines/{outline_label}/versions/{outline_version}\",\"/api/relation-types\",\"/api/relation-types/{relation_type_label}/versions\",\"/api/relation-types/{relation_type_label}/versions/{relation_type_version}\",\"/api/types\",\"/api/types/{variant_type_label}\",\"/api/types/{variant_type_label}/attributes\",\"/api/types/{variant_type_label}/attributes/{attribute_label}\",\"/api/types/{variant_type_label}/versions\",\"/api/types/{variant_type_label}/versions/{type_version}\",\"/api/types/{variant_type_label}/versions/{type_version}/attributes\",\"/api/types/{variant_type_label}/versions/{type_version}/attributes/{attribute_label}\"]}")
  -> modPath("^/+", "/")
  -> <roundRobin, "http://10.2.66.7:9000", "http://10.2.88.162:9000">;

kube_buffalo__spp_master_attributes__spp_master_attributes_test_zalandoapis_com____spp_master_attributes_master_267_https_redirect: Host(/^(spp-master-attributes-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_master_attributes_master_262__spp_master_attributes_master_262_smart_product_platform_test_zalan_do____spp_master_attributes_master_262: Host(/^(spp-master-attributes-master-262[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_master_attributes_master_262__spp_master_attributes_master_262_smart_product_platform_test_zalan_do____spp_master_attributes_master_262_https_redirect: Host(/^(spp-master-attributes-master-262[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_master_attributes_master_263__spp_master_attributes_master_263_smart_product_platform_test_zalan_do____spp_master_attributes_master_263: Host(/^(spp-master-attributes-master-263[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_master_attributes_master_263__spp_master_attributes_master_263_smart_product_platform_test_zalan_do____spp_master_attributes_master_263_https_redirect: Host(/^(spp-master-attributes-master-263[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_master_attributes_master_264__spp_master_attributes_master_264_smart_product_platform_test_zalan_do____spp_master_attributes_master_264: Host(/^(spp-master-attributes-master-264[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_master_attributes_master_264__spp_master_attributes_master_264_smart_product_platform_test_zalan_do____spp_master_attributes_master_264_https_redirect: Host(/^(spp-master-attributes-master-264[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_master_attributes_master_265__spp_master_attributes_master_265_smart_product_platform_test_zalan_do____spp_master_attributes_master_265: Host(/^(spp-master-attributes-master-265[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_master_attributes_master_265__spp_master_attributes_master_265_smart_product_platform_test_zalan_do____spp_master_attributes_master_265_https_redirect: Host(/^(spp-master-attributes-master-265[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_master_attributes_master_266__spp_master_attributes_master_266_smart_product_platform_test_zalan_do____spp_master_attributes_master_266: Host(/^(spp-master-attributes-master-266[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_master_attributes_master_266__spp_master_attributes_master_266_smart_product_platform_test_zalan_do____spp_master_attributes_master_266_https_redirect: Host(/^(spp-master-attributes-master-266[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_master_attributes_master_267__spp_master_attributes_master_267_smart_product_platform_test_zalan_do____spp_master_attributes_master_267: Host(/^(spp-master-attributes-master-267[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"sps-master-attributes-service\",\"application_id\":\"spp-master-attributes\",\"path_templates\":[\"/api/business-models\",\"/api/business-models/{business_model_label}/versions\",\"/api/business-models/{business_model_label}/versions/{business_model_version}\",\"/api/classifications\",\"/api/classifications/{classification_label}\",\"/api/enrichment-types\",\"/api/enrichment-types/{enrichment_type_label}/versions\",\"/api/enrichment-types/{enrichment_type_label}/versions/{enrichment_type_version}\",\"/api/foreign-entities\",\"/api/foreign-entities/{foreign_entity_label}\",\"/api/outlines\",\"/api/outlines/{outline_label}/versions\",\"/api/outlines/{outline_label}/versions/{outline_version}\",\"/api/relation-types\",\"/api/relation-types/{relation_type_label}/versions\",\"/api/relation-types/{relation_type_label}/versions/{relation_type_version}\",\"/api/types\",\"/api/types/{variant_type_label}\",\"/api/types/{variant_type_label}/attributes\",\"/api/types/{variant_type_label}/attributes/{attribute_label}\",\"/api/types/{variant_type_label}/versions\",\"/api/types/{variant_type_label}/versions/{type_version}\",\"/api/types/{variant_type_label}/versions/{type_version}/attributes\",\"/api/types/{variant_type_label}/versions/{type_version}/attributes/{attribute_label}\"]}")
  -> modPath("^/+", "/")
  -> <roundRobin, "http://10.2.66.7:9000", "http://10.2.88.162:9000">;

kube_buffalo__spp_master_attributes_master_267__spp_master_attributes_master_267_smart_product_platform_test_zalan_do____spp_master_attributes_master_267_https_redirect: Host(/^(spp-master-attributes-master-267[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_media__media_buffalo_staging_zalan_do____spp_media_master_304: Host(/^(media[.]buffalo-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"media-service\",\"application_id\":\"spp-media\",\"path_templates\":[\"/api/media-binaries/{media_content_id}\",\"/api/media-contents\",\"/api/media-contents/{media_content_id}\",\"/api/media-files/{media_content_id}/signed-url\"]}")
  -> modPath("^/+", "/")
  -> "http://10.2.66.5:9000";

kube_buffalo__spp_media__media_buffalo_staging_zalan_do____spp_media_master_304_https_redirect: Host(/^(media[.]buffalo-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_media__media_service_buffalo_staging_zalan_do____spp_media_master_304: Host(/^(media-service[.]buffalo-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"media-service\",\"application_id\":\"spp-media\",\"path_templates\":[\"/api/media-binaries/{media_content_id}\",\"/api/media-contents\",\"/api/media-contents/{media_content_id}\",\"/api/media-files/{media_content_id}/signed-url\"]}")
  -> modPath("^/+", "/")
  -> "http://10.2.66.5:9000";

kube_buffalo__spp_media__media_service_buffalo_staging_zalan_do____spp_media_master_304_https_redirect: Host(/^(media-service[.]buffalo-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_media__spp_media_smart_product_platform_test_zalan_do____spp_media_master_304: Host(/^(spp-media[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"media-service\",\"application_id\":\"spp-media\",\"path_templates\":[\"/api/media-binaries/{media_content_id}\",\"/api/media-contents\",\"/api/media-contents/{media_content_id}\",\"/api/media-files/{media_content_id}/signed-url\"]}")
  -> modPath("^/+", "/")
  -> "http://10.2.66.5:9000";

kube_buffalo__spp_media__spp_media_smart_product_platform_test_zalan_do____spp_media_master_304_https_redirect: Host(/^(spp-media[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_media__spp_media_test_zalandoapis_com____spp_media_master_304: Host(/^(spp-media-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"media-service\",\"application_id\":\"spp-media\",\"path_templates\":[\"/api/media-binaries/{media_content_id}\",\"/api/media-contents\",\"/api/media-contents/{media_content_id}\",\"/api/media-files/{media_content_id}/signed-url\"]}")
  -> modPath("^/+", "/")
  -> "http://10.2.66.5:9000";

kube_buffalo__spp_media__spp_media_test_zalandoapis_com____spp_media_master_304_https_redirect: Host(/^(spp-media-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_media_master_299__spp_media_master_299_smart_product_platform_test_zalan_do____spp_media_master_299: Host(/^(spp-media-master-299[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_media_master_299__spp_media_master_299_smart_product_platform_test_zalan_do____spp_media_master_299_https_redirect: Host(/^(spp-media-master-299[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_media_master_300__spp_media_master_300_smart_product_platform_test_zalan_do____spp_media_master_300: Host(/^(spp-media-master-300[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_media_master_300__spp_media_master_300_smart_product_platform_test_zalan_do____spp_media_master_300_https_redirect: Host(/^(spp-media-master-300[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_media_master_301__spp_media_master_301_smart_product_platform_test_zalan_do____spp_media_master_301: Host(/^(spp-media-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_media_master_301__spp_media_master_301_smart_product_platform_test_zalan_do____spp_media_master_301_https_redirect: Host(/^(spp-media-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_media_master_302__spp_media_master_302_smart_product_platform_test_zalan_do____spp_media_master_302: Host(/^(spp-media-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_media_master_302__spp_media_master_302_smart_product_platform_test_zalan_do____spp_media_master_302_https_redirect: Host(/^(spp-media-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_media_master_303__spp_media_master_303_smart_product_platform_test_zalan_do____spp_media_master_303: Host(/^(spp-media-master-303[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_media_master_303__spp_media_master_303_smart_product_platform_test_zalan_do____spp_media_master_303_https_redirect: Host(/^(spp-media-master-303[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_media_master_304__spp_media_master_304_smart_product_platform_test_zalan_do____spp_media_master_304: Host(/^(spp-media-master-304[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"media-service\",\"application_id\":\"spp-media\",\"path_templates\":[\"/api/media-binaries/{media_content_id}\",\"/api/media-contents\",\"/api/media-contents/{media_content_id}\",\"/api/media-files/{media_content_id}/signed-url\"]}")
  -> modPath("^/+", "/")
  -> "http://10.2.66.5:9000";

kube_buffalo__spp_media_master_304__spp_media_master_304_smart_product_platform_test_zalan_do____spp_media_master_304_https_redirect: Host(/^(spp-media-master-304[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_memento__spp_memento_smart_product_platform_test_zalan_do____spp_memento: Host(/^(spp-memento[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_memento__spp_memento_smart_product_platform_test_zalan_do____spp_memento_https_redirect: Host(/^(spp-memento[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_nakadi_product_checker__spp_nakadi_product_checker_smart_product_platform_test_zalan_do____spp_nakadi_product_checker_master_54: Host(/^(spp-nakadi-product-checker[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.80.13:9000";

kube_buffalo__spp_nakadi_product_checker__spp_nakadi_product_checker_smart_product_platform_test_zalan_do____spp_nakadi_product_checker_master_54_https_redirect: Host(/^(spp-nakadi-product-checker[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_nakadi_product_checker_master_49__spp_nakadi_product_checker_master_49_smart_product_platform_test_zalan_do____spp_nakadi_product_checker_master_49: Host(/^(spp-nakadi-product-checker-master-49[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_nakadi_product_checker_master_49__spp_nakadi_product_checker_master_49_smart_product_platform_test_zalan_do____spp_nakadi_product_checker_master_49_https_redirect: Host(/^(spp-nakadi-product-checker-master-49[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_nakadi_product_checker_master_50__spp_nakadi_product_checker_master_50_smart_product_platform_test_zalan_do____spp_nakadi_product_checker_master_50: Host(/^(spp-nakadi-product-checker-master-50[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_nakadi_product_checker_master_50__spp_nakadi_product_checker_master_50_smart_product_platform_test_zalan_do____spp_nakadi_product_checker_master_50_https_redirect: Host(/^(spp-nakadi-product-checker-master-50[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_nakadi_product_checker_master_51__spp_nakadi_product_checker_master_51_smart_product_platform_test_zalan_do____spp_nakadi_product_checker_master_51: Host(/^(spp-nakadi-product-checker-master-51[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_nakadi_product_checker_master_51__spp_nakadi_product_checker_master_51_smart_product_platform_test_zalan_do____spp_nakadi_product_checker_master_51_https_redirect: Host(/^(spp-nakadi-product-checker-master-51[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_nakadi_product_checker_master_52__spp_nakadi_product_checker_master_52_smart_product_platform_test_zalan_do____spp_nakadi_product_checker_master_52: Host(/^(spp-nakadi-product-checker-master-52[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_nakadi_product_checker_master_52__spp_nakadi_product_checker_master_52_smart_product_platform_test_zalan_do____spp_nakadi_product_checker_master_52_https_redirect: Host(/^(spp-nakadi-product-checker-master-52[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_nakadi_product_checker_master_53__spp_nakadi_product_checker_master_53_smart_product_platform_test_zalan_do____spp_nakadi_product_checker_master_53: Host(/^(spp-nakadi-product-checker-master-53[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_nakadi_product_checker_master_53__spp_nakadi_product_checker_master_53_smart_product_platform_test_zalan_do____spp_nakadi_product_checker_master_53_https_redirect: Host(/^(spp-nakadi-product-checker-master-53[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_nakadi_product_checker_master_54__spp_nakadi_product_checker_master_54_smart_product_platform_test_zalan_do____spp_nakadi_product_checker_master_54: Host(/^(spp-nakadi-product-checker-master-54[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.80.13:9000";

kube_buffalo__spp_nakadi_product_checker_master_54__spp_nakadi_product_checker_master_54_smart_product_platform_test_zalan_do____spp_nakadi_product_checker_master_54_https_redirect: Host(/^(spp-nakadi-product-checker-master-54[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_nakadi_product_checker_operbellini__spp_nakadi_product_checker_operbellini_smart_product_platform_test_zalan_do____spp_nakadi_product_checker_operbellini: Host(/^(spp-nakadi-product-checker-operbellini[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_nakadi_product_checker_operbellini__spp_nakadi_product_checker_operbellini_smart_product_platform_test_zalan_do____spp_nakadi_product_checker_operbellini_https_redirect: Host(/^(spp-nakadi-product-checker-operbellini[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_pdp_url_key_generator__spp_pdp_url_key_generator_smart_product_platform_test_zalan_do____spp_pdp_url_key_generator_master_68: Host(/^(spp-pdp-url-key-generator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.79.137:9000";

kube_buffalo__spp_pdp_url_key_generator__spp_pdp_url_key_generator_smart_product_platform_test_zalan_do____spp_pdp_url_key_generator_master_68_https_redirect: Host(/^(spp-pdp-url-key-generator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_pdp_url_key_generator_master_63__spp_pdp_url_key_generator_master_63_smart_product_platform_test_zalan_do____spp_pdp_url_key_generator_master_63: Host(/^(spp-pdp-url-key-generator-master-63[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_pdp_url_key_generator_master_63__spp_pdp_url_key_generator_master_63_smart_product_platform_test_zalan_do____spp_pdp_url_key_generator_master_63_https_redirect: Host(/^(spp-pdp-url-key-generator-master-63[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_pdp_url_key_generator_master_64__spp_pdp_url_key_generator_master_64_smart_product_platform_test_zalan_do____spp_pdp_url_key_generator_master_64: Host(/^(spp-pdp-url-key-generator-master-64[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_pdp_url_key_generator_master_64__spp_pdp_url_key_generator_master_64_smart_product_platform_test_zalan_do____spp_pdp_url_key_generator_master_64_https_redirect: Host(/^(spp-pdp-url-key-generator-master-64[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_pdp_url_key_generator_master_65__spp_pdp_url_key_generator_master_65_smart_product_platform_test_zalan_do____spp_pdp_url_key_generator_master_65: Host(/^(spp-pdp-url-key-generator-master-65[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_pdp_url_key_generator_master_65__spp_pdp_url_key_generator_master_65_smart_product_platform_test_zalan_do____spp_pdp_url_key_generator_master_65_https_redirect: Host(/^(spp-pdp-url-key-generator-master-65[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_pdp_url_key_generator_master_66__spp_pdp_url_key_generator_master_66_smart_product_platform_test_zalan_do____spp_pdp_url_key_generator_master_66: Host(/^(spp-pdp-url-key-generator-master-66[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_pdp_url_key_generator_master_66__spp_pdp_url_key_generator_master_66_smart_product_platform_test_zalan_do____spp_pdp_url_key_generator_master_66_https_redirect: Host(/^(spp-pdp-url-key-generator-master-66[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_pdp_url_key_generator_master_67__spp_pdp_url_key_generator_master_67_smart_product_platform_test_zalan_do____spp_pdp_url_key_generator_master_67: Host(/^(spp-pdp-url-key-generator-master-67[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_pdp_url_key_generator_master_67__spp_pdp_url_key_generator_master_67_smart_product_platform_test_zalan_do____spp_pdp_url_key_generator_master_67_https_redirect: Host(/^(spp-pdp-url-key-generator-master-67[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_pdp_url_key_generator_master_68__spp_pdp_url_key_generator_master_68_smart_product_platform_test_zalan_do____spp_pdp_url_key_generator_master_68: Host(/^(spp-pdp-url-key-generator-master-68[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.79.137:9000";

kube_buffalo__spp_pdp_url_key_generator_master_68__spp_pdp_url_key_generator_master_68_smart_product_platform_test_zalan_do____spp_pdp_url_key_generator_master_68_https_redirect: Host(/^(spp-pdp-url-key-generator-master-68[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_products__products_buffalo_staging_zalan_do____spp_products_master_303: Host(/^(products[.]buffalo-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"product-service\",\"application_id\":\"spp-products\",\"path_templates\":[\"/api/product-hierarchies/{product_path}\",\"/api/product-hierarchy-validation-requests/{product_path}\",\"/api/products/{product_id}\",\"/api/products/{product_id}/children\"]}")
  -> modPath("^/+", "/")
  -> <roundRobin, "http://10.2.66.6:9000", "http://10.2.88.10:9000">;

kube_buffalo__spp_products__products_buffalo_staging_zalan_do____spp_products_master_303_https_redirect: Host(/^(products[.]buffalo-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_products__spp_products_smart_product_platform_test_zalan_do____spp_products_master_303: Host(/^(spp-products[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"product-service\",\"application_id\":\"spp-products\",\"path_templates\":[\"/api/product-hierarchies/{product_path}\",\"/api/product-hierarchy-validation-requests/{product_path}\",\"/api/products/{product_id}\",\"/api/products/{product_id}/children\"]}")
  -> modPath("^/+", "/")
  -> <roundRobin, "http://10.2.66.6:9000", "http://10.2.88.10:9000">;

kube_buffalo__spp_products__spp_products_smart_product_platform_test_zalan_do____spp_products_master_303_https_redirect: Host(/^(spp-products[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_products__spp_products_test_zalandoapis_com____spp_products_master_303: Host(/^(spp-products-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"product-service\",\"application_id\":\"spp-products\",\"path_templates\":[\"/api/product-hierarchies/{product_path}\",\"/api/product-hierarchy-validation-requests/{product_path}\",\"/api/products/{product_id}\",\"/api/products/{product_id}/children\"]}")
  -> modPath("^/+", "/")
  -> <roundRobin, "http://10.2.66.6:9000", "http://10.2.88.10:9000">;

kube_buffalo__spp_products__spp_products_test_zalandoapis_com____spp_products_master_303_https_redirect: Host(/^(spp-products-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_products_master_298__spp_products_master_298_smart_product_platform_test_zalan_do____spp_products_master_298: Host(/^(spp-products-master-298[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_products_master_298__spp_products_master_298_smart_product_platform_test_zalan_do____spp_products_master_298_https_redirect: Host(/^(spp-products-master-298[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_products_master_299__spp_products_master_299_smart_product_platform_test_zalan_do____spp_products_master_299: Host(/^(spp-products-master-299[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_products_master_299__spp_products_master_299_smart_product_platform_test_zalan_do____spp_products_master_299_https_redirect: Host(/^(spp-products-master-299[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_products_master_300__spp_products_master_300_smart_product_platform_test_zalan_do____spp_products_master_300: Host(/^(spp-products-master-300[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_products_master_300__spp_products_master_300_smart_product_platform_test_zalan_do____spp_products_master_300_https_redirect: Host(/^(spp-products-master-300[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_products_master_301__spp_products_master_301_smart_product_platform_test_zalan_do____spp_products_master_301: Host(/^(spp-products-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_products_master_301__spp_products_master_301_smart_product_platform_test_zalan_do____spp_products_master_301_https_redirect: Host(/^(spp-products-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_products_master_302__spp_products_master_302_smart_product_platform_test_zalan_do____spp_products_master_302: Host(/^(spp-products-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_products_master_302__spp_products_master_302_smart_product_platform_test_zalan_do____spp_products_master_302_https_redirect: Host(/^(spp-products-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_products_master_303__spp_products_master_303_smart_product_platform_test_zalan_do____spp_products_master_303: Host(/^(spp-products-master-303[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"product-service\",\"application_id\":\"spp-products\",\"path_templates\":[\"/api/product-hierarchies/{product_path}\",\"/api/product-hierarchy-validation-requests/{product_path}\",\"/api/products/{product_id}\",\"/api/products/{product_id}/children\"]}")
  -> modPath("^/+", "/")
  -> <roundRobin, "http://10.2.66.6:9000", "http://10.2.88.10:9000">;

kube_buffalo__spp_products_master_303__spp_products_master_303_smart_product_platform_test_zalan_do____spp_products_master_303_https_redirect: Host(/^(spp-products-master-303[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_relations__relations_buffalo_staging_zalan_do____spp_relations_master_112: Host(/^(relations[.]buffalo-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"ce3f9f77-e237-4388-a237-a02df81d4165\",\"application_id\":\"spp-relations\",\"path_templates\":[\"/api/relations\",\"/api/relations/{relation_id}\",\"/api/relations/{relation_id}/members/{member_id}\"]}")
  -> modPath("^/+", "/")
  -> <roundRobin, "http://10.2.79.139:9000", "http://10.2.88.5:9000">;

kube_buffalo__spp_relations__relations_buffalo_staging_zalan_do____spp_relations_master_112_https_redirect: Host(/^(relations[.]buffalo-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_relations__spp_relations_smart_product_platform_test_zalan_do____spp_relations_master_112: Host(/^(spp-relations[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"ce3f9f77-e237-4388-a237-a02df81d4165\",\"application_id\":\"spp-relations\",\"path_templates\":[\"/api/relations\",\"/api/relations/{relation_id}\",\"/api/relations/{relation_id}/members/{member_id}\"]}")
  -> modPath("^/+", "/")
  -> <roundRobin, "http://10.2.79.139:9000", "http://10.2.88.5:9000">;

kube_buffalo__spp_relations__spp_relations_smart_product_platform_test_zalan_do____spp_relations_master_112_https_redirect: Host(/^(spp-relations[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_relations__spp_relations_test_zalandoapis_com____spp_relations_master_112: Host(/^(spp-relations-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"ce3f9f77-e237-4388-a237-a02df81d4165\",\"application_id\":\"spp-relations\",\"path_templates\":[\"/api/relations\",\"/api/relations/{relation_id}\",\"/api/relations/{relation_id}/members/{member_id}\"]}")
  -> modPath("^/+", "/")
  -> <roundRobin, "http://10.2.79.139:9000", "http://10.2.88.5:9000">;

kube_buffalo__spp_relations__spp_relations_test_zalandoapis_com____spp_relations_master_112_https_redirect: Host(/^(spp-relations-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_relations_master_106__spp_relations_master_106_smart_product_platform_test_zalan_do____spp_relations_master_106: Host(/^(spp-relations-master-106[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_relations_master_106__spp_relations_master_106_smart_product_platform_test_zalan_do____spp_relations_master_106_https_redirect: Host(/^(spp-relations-master-106[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_relations_master_108__spp_relations_master_108_smart_product_platform_test_zalan_do____spp_relations_master_108: Host(/^(spp-relations-master-108[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_relations_master_108__spp_relations_master_108_smart_product_platform_test_zalan_do____spp_relations_master_108_https_redirect: Host(/^(spp-relations-master-108[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_relations_master_109__spp_relations_master_109_smart_product_platform_test_zalan_do____spp_relations_master_109: Host(/^(spp-relations-master-109[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_relations_master_109__spp_relations_master_109_smart_product_platform_test_zalan_do____spp_relations_master_109_https_redirect: Host(/^(spp-relations-master-109[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_relations_master_110__spp_relations_master_110_smart_product_platform_test_zalan_do____spp_relations_master_110: Host(/^(spp-relations-master-110[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_relations_master_110__spp_relations_master_110_smart_product_platform_test_zalan_do____spp_relations_master_110_https_redirect: Host(/^(spp-relations-master-110[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_relations_master_111__spp_relations_master_111_smart_product_platform_test_zalan_do____spp_relations_master_111: Host(/^(spp-relations-master-111[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_relations_master_111__spp_relations_master_111_smart_product_platform_test_zalan_do____spp_relations_master_111_https_redirect: Host(/^(spp-relations-master-111[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_relations_master_112__spp_relations_master_112_smart_product_platform_test_zalan_do____spp_relations_master_112: Host(/^(spp-relations-master-112[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"ce3f9f77-e237-4388-a237-a02df81d4165\",\"application_id\":\"spp-relations\",\"path_templates\":[\"/api/relations\",\"/api/relations/{relation_id}\",\"/api/relations/{relation_id}/members/{member_id}\"]}")
  -> modPath("^/+", "/")
  -> <roundRobin, "http://10.2.79.139:9000", "http://10.2.88.5:9000">;

kube_buffalo__spp_relations_master_112__spp_relations_master_112_smart_product_platform_test_zalan_do____spp_relations_master_112_https_redirect: Host(/^(spp-relations-master-112[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_remora__spp_remora_smart_product_platform_test_zalan_do____spp_remora_bluegreen_master_17: Host(/^(spp-remora[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyScope("uid")
  -> "http://10.2.91.162:9000";

kube_buffalo__spp_remora__spp_remora_smart_product_platform_test_zalan_do____spp_remora_bluegreen_master_17_https_redirect: Host(/^(spp-remora[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_remora_bluegreen_master_16__spp_remora_bluegreen_master_16_smart_product_platform_test_zalan_do____spp_remora_bluegreen_master_16: Host(/^(spp-remora-bluegreen-master-16[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyScope("uid")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__spp_remora_bluegreen_master_16__spp_remora_bluegreen_master_16_smart_product_platform_test_zalan_do____spp_remora_bluegreen_master_16_https_redirect: Host(/^(spp-remora-bluegreen-master-16[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__spp_remora_bluegreen_master_17__spp_remora_bluegreen_master_17_smart_product_platform_test_zalan_do____spp_remora_bluegreen_master_17: Host(/^(spp-remora-bluegreen-master-17[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyScope("uid")
  -> "http://10.2.91.162:9000";

kube_buffalo__spp_remora_bluegreen_master_17__spp_remora_bluegreen_master_17_smart_product_platform_test_zalan_do____spp_remora_bluegreen_master_17_https_redirect: Host(/^(spp-remora-bluegreen-master-17[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__sps_doctor_jones__sps_doctor_jones_smart_product_platform_test_zalan_do____sps_doctor_jones_master_39: Host(/^(sps-doctor-jones[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.14.160:9000";

kube_buffalo__sps_doctor_jones__sps_doctor_jones_smart_product_platform_test_zalan_do____sps_doctor_jones_master_39_https_redirect: Host(/^(sps-doctor-jones[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__sps_doctor_jones_master_34__sps_doctor_jones_master_34_smart_product_platform_test_zalan_do____sps_doctor_jones_master_34: Host(/^(sps-doctor-jones-master-34[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__sps_doctor_jones_master_34__sps_doctor_jones_master_34_smart_product_platform_test_zalan_do____sps_doctor_jones_master_34_https_redirect: Host(/^(sps-doctor-jones-master-34[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__sps_doctor_jones_master_35__sps_doctor_jones_master_35_smart_product_platform_test_zalan_do____sps_doctor_jones_master_35: Host(/^(sps-doctor-jones-master-35[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__sps_doctor_jones_master_35__sps_doctor_jones_master_35_smart_product_platform_test_zalan_do____sps_doctor_jones_master_35_https_redirect: Host(/^(sps-doctor-jones-master-35[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__sps_doctor_jones_master_36__sps_doctor_jones_master_36_smart_product_platform_test_zalan_do____sps_doctor_jones_master_36: Host(/^(sps-doctor-jones-master-36[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__sps_doctor_jones_master_36__sps_doctor_jones_master_36_smart_product_platform_test_zalan_do____sps_doctor_jones_master_36_https_redirect: Host(/^(sps-doctor-jones-master-36[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__sps_doctor_jones_master_37__sps_doctor_jones_master_37_smart_product_platform_test_zalan_do____sps_doctor_jones_master_37: Host(/^(sps-doctor-jones-master-37[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__sps_doctor_jones_master_37__sps_doctor_jones_master_37_smart_product_platform_test_zalan_do____sps_doctor_jones_master_37_https_redirect: Host(/^(sps-doctor-jones-master-37[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__sps_doctor_jones_master_38__sps_doctor_jones_master_38_smart_product_platform_test_zalan_do____sps_doctor_jones_master_38: Host(/^(sps-doctor-jones-master-38[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_buffalo__sps_doctor_jones_master_38__sps_doctor_jones_master_38_smart_product_platform_test_zalan_do____sps_doctor_jones_master_38_https_redirect: Host(/^(sps-doctor-jones-master-38[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_buffalo__sps_doctor_jones_master_39__sps_doctor_jones_master_39_smart_product_platform_test_zalan_do____sps_doctor_jones_master_39: Host(/^(sps-doctor-jones-master-39[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.14.160:9000";

kube_buffalo__sps_doctor_jones_master_39__sps_doctor_jones_master_39_smart_product_platform_test_zalan_do____sps_doctor_jones_master_39_https_redirect: Host(/^(sps-doctor-jones-master-39[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__brand_service_ui__brand_service_ui_smart_product_platform_test_zalan_do____brand_service_ui_master_51: Host(/^(brand-service-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.35.134:8080";

kube_default__brand_service_ui__brand_service_ui_smart_product_platform_test_zalan_do____brand_service_ui_master_51_https_redirect: Host(/^(brand-service-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__brand_service_ui_canary__brand_service_ui_smart_product_platform_test_zalan_do____brand_service_ui_master_50: Host(/^(brand-service-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true") && Header("x-zalando-coldbrew-canary", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__brand_service_ui_canary__brand_service_ui_smart_product_platform_test_zalan_do____brand_service_ui_master_50_https_redirect: Host(/^(brand-service-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Header("x-zalando-coldbrew-canary", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__brand_service_ui_master_50__brand_service_ui_master_50_smart_product_platform_test_zalan_do____brand_service_ui_master_50: Host(/^(brand-service-ui-master-50[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__brand_service_ui_master_50__brand_service_ui_master_50_smart_product_platform_test_zalan_do____brand_service_ui_master_50_https_redirect: Host(/^(brand-service-ui-master-50[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__brand_service_ui_master_51__brand_service_ui_master_51_smart_product_platform_test_zalan_do____brand_service_ui_master_51: Host(/^(brand-service-ui-master-51[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.35.134:8080";

kube_default__brand_service_ui_master_51__brand_service_ui_master_51_smart_product_platform_test_zalan_do____brand_service_ui_master_51_https_redirect: Host(/^(brand-service-ui-master-51[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__brexit_indexer_test_brcullen_statsd_exporter_default_404_route__0__brexit_indexer_test_brcullen_statsd_exporter_smart_product_platform_test_zalan_do____: Host(/^(brexit-indexer-test-brcullen-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__brexit_indexer_test_brcullen_statsd_exporter_default_404_route__brexit_indexer_test_brcullen_statsd_exporter_smart_product_platform_test_zalan_do____brexit_indexer_test_brcullen_statsd_exporter: Host(/^(brexit-indexer-test-brcullen-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.19.205:9102";

kube_default__brexit_indexer_test_brcullen_statsd_exporter_default_404_route__brexit_indexer_test_brcullen_statsd_exporter_smart_product_platform_test_zalan_do____brexit_indexer_test_brcullen_statsd_exporter_https_redirect: Host(/^(brexit-indexer-test-brcullen-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__brexit_indexer_test_brcullen_statsd_exporter_get_metrics_admins__brexit_indexer_test_brcullen_statsd_exporter_smart_product_platform_test_zalan_do____brexit_indexer_test_brcullen_statsd_exporter: Host(/^(brexit-indexer-test-brcullen-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.205:9102";

kube_default__brexit_indexer_test_brcullen_statsd_exporter_get_metrics_all__brexit_indexer_test_brcullen_statsd_exporter_smart_product_platform_test_zalan_do____brexit_indexer_test_brcullen_statsd_exporter: Host(/^(brexit-indexer-test-brcullen-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.205:9102";

kube_default__brexit_indexer_test_brcullen_statsd_exporter_reject_http_route__0__brexit_indexer_test_brcullen_statsd_exporter_smart_product_platform_test_zalan_do____: Host(/^(brexit-indexer-test-brcullen-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__brexit_indexer_test_brcullen_statsd_exporter_reject_http_route__brexit_indexer_test_brcullen_statsd_exporter_smart_product_platform_test_zalan_do____brexit_indexer_test_brcullen_statsd_exporter: Host(/^(brexit-indexer-test-brcullen-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.19.205:9102";

kube_default__brexit_indexer_test_dagordon_statsd_exporter_default_404_route__0__brexit_indexer_test_dagordon_statsd_exporter_smart_product_platform_test_zalan_do____: Host(/^(brexit-indexer-test-dagordon-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__brexit_indexer_test_dagordon_statsd_exporter_default_404_route__brexit_indexer_test_dagordon_statsd_exporter_smart_product_platform_test_zalan_do____brexit_indexer_test_dagordon_statsd_exporter: Host(/^(brexit-indexer-test-dagordon-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.19.207:9102";

kube_default__brexit_indexer_test_dagordon_statsd_exporter_default_404_route__brexit_indexer_test_dagordon_statsd_exporter_smart_product_platform_test_zalan_do____brexit_indexer_test_dagordon_statsd_exporter_https_redirect: Host(/^(brexit-indexer-test-dagordon-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__brexit_indexer_test_dagordon_statsd_exporter_get_metrics_admins__brexit_indexer_test_dagordon_statsd_exporter_smart_product_platform_test_zalan_do____brexit_indexer_test_dagordon_statsd_exporter: Host(/^(brexit-indexer-test-dagordon-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.207:9102";

kube_default__brexit_indexer_test_dagordon_statsd_exporter_get_metrics_all__brexit_indexer_test_dagordon_statsd_exporter_smart_product_platform_test_zalan_do____brexit_indexer_test_dagordon_statsd_exporter: Host(/^(brexit-indexer-test-dagordon-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.207:9102";

kube_default__brexit_indexer_test_dagordon_statsd_exporter_reject_http_route__0__brexit_indexer_test_dagordon_statsd_exporter_smart_product_platform_test_zalan_do____: Host(/^(brexit-indexer-test-dagordon-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__brexit_indexer_test_dagordon_statsd_exporter_reject_http_route__brexit_indexer_test_dagordon_statsd_exporter_smart_product_platform_test_zalan_do____brexit_indexer_test_dagordon_statsd_exporter: Host(/^(brexit-indexer-test-dagordon-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.19.207:9102";

kube_default__brexit_indexer_test_ralmeida_statsd_exporter_default_404_route__0__brexit_indexer_test_ralmeida_statsd_exporter_smart_product_platform_test_zalan_do____: Host(/^(brexit-indexer-test-ralmeida-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__brexit_indexer_test_ralmeida_statsd_exporter_default_404_route__brexit_indexer_test_ralmeida_statsd_exporter_smart_product_platform_test_zalan_do____brexit_indexer_test_ralmeida_statsd_exporter: Host(/^(brexit-indexer-test-ralmeida-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.19.210:9102";

kube_default__brexit_indexer_test_ralmeida_statsd_exporter_default_404_route__brexit_indexer_test_ralmeida_statsd_exporter_smart_product_platform_test_zalan_do____brexit_indexer_test_ralmeida_statsd_exporter_https_redirect: Host(/^(brexit-indexer-test-ralmeida-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__brexit_indexer_test_ralmeida_statsd_exporter_get_metrics_admins__brexit_indexer_test_ralmeida_statsd_exporter_smart_product_platform_test_zalan_do____brexit_indexer_test_ralmeida_statsd_exporter: Host(/^(brexit-indexer-test-ralmeida-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.210:9102";

kube_default__brexit_indexer_test_ralmeida_statsd_exporter_get_metrics_all__brexit_indexer_test_ralmeida_statsd_exporter_smart_product_platform_test_zalan_do____brexit_indexer_test_ralmeida_statsd_exporter: Host(/^(brexit-indexer-test-ralmeida-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.210:9102";

kube_default__brexit_indexer_test_ralmeida_statsd_exporter_reject_http_route__0__brexit_indexer_test_ralmeida_statsd_exporter_smart_product_platform_test_zalan_do____: Host(/^(brexit-indexer-test-ralmeida-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__brexit_indexer_test_ralmeida_statsd_exporter_reject_http_route__brexit_indexer_test_ralmeida_statsd_exporter_smart_product_platform_test_zalan_do____brexit_indexer_test_ralmeida_statsd_exporter: Host(/^(brexit-indexer-test-ralmeida-statsd-exporter[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.19.210:9102";

kube_default__brexit_mgmt_test_brcullen_default_404_route__0__brexit_mgmt_test_brcullen_smart_product_platform_test_zalan_do____: Host(/^(brexit-mgmt-test-brcullen[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__brexit_mgmt_test_brcullen_default_404_route__brexit_mgmt_test_brcullen_smart_product_platform_test_zalan_do____brexit_mgmt_test_brcullen: Host(/^(brexit-mgmt-test-brcullen[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> "http://10.2.19.213:8080";

kube_default__brexit_mgmt_test_brcullen_default_404_route__brexit_mgmt_test_brcullen_smart_product_platform_test_zalan_do____brexit_mgmt_test_brcullen_https_redirect: Host(/^(brexit-mgmt-test-brcullen[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__brexit_mgmt_test_brcullen_get_api_classification_status_admins__brexit_mgmt_test_brcullen_smart_product_platform_test_zalan_do____brexit_mgmt_test_brcullen: Host(/^(brexit-mgmt-test-brcullen[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/classification-status") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.213:8080";

kube_default__brexit_mgmt_test_brcullen_get_api_classification_status_rl_all__brexit_mgmt_test_brcullen_smart_product_platform_test_zalan_do____brexit_mgmt_test_brcullen: Host(/^(brexit-mgmt-test-brcullen[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/classification-status")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brexit-mgmt.read")
  -> clusterClientRatelimit("brexit-mgmt-test-brcullen_api-classification-status_GET", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.213:8080";

kube_default__brexit_mgmt_test_brcullen_get_classification_metrics_admins__brexit_mgmt_test_brcullen_smart_product_platform_test_zalan_do____brexit_mgmt_test_brcullen: Host(/^(brexit-mgmt-test-brcullen[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/classification-metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.213:8080";

kube_default__brexit_mgmt_test_brcullen_get_classification_metrics_all__brexit_mgmt_test_brcullen_smart_product_platform_test_zalan_do____brexit_mgmt_test_brcullen: Host(/^(brexit-mgmt-test-brcullen[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/classification-metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.213:8080";

kube_default__brexit_mgmt_test_brcullen_post_api_actions_export_products_admins__brexit_mgmt_test_brcullen_smart_product_platform_test_zalan_do____brexit_mgmt_test_brcullen: Host(/^(brexit-mgmt-test-brcullen[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/actions/export-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.213:8080";

kube_default__brexit_mgmt_test_brcullen_post_api_actions_export_products_rl_all__brexit_mgmt_test_brcullen_smart_product_platform_test_zalan_do____brexit_mgmt_test_brcullen: Host(/^(brexit-mgmt-test-brcullen[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/actions/export-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brexit-mgmt.write")
  -> clusterClientRatelimit("brexit-mgmt-test-brcullen_api-actions-export-products_POST", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.213:8080";

kube_default__brexit_mgmt_test_brcullen_reject_http_route__0__brexit_mgmt_test_brcullen_smart_product_platform_test_zalan_do____: Host(/^(brexit-mgmt-test-brcullen[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__brexit_mgmt_test_brcullen_reject_http_route__brexit_mgmt_test_brcullen_smart_product_platform_test_zalan_do____brexit_mgmt_test_brcullen: Host(/^(brexit-mgmt-test-brcullen[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> "http://10.2.19.213:8080";

kube_default__brexit_mgmt_test_dagordon_default_404_route__0__brexit_mgmt_test_dagordon_smart_product_platform_test_zalan_do____: Host(/^(brexit-mgmt-test-dagordon[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__brexit_mgmt_test_dagordon_default_404_route__brexit_mgmt_test_dagordon_smart_product_platform_test_zalan_do____brexit_mgmt_test_dagordon: Host(/^(brexit-mgmt-test-dagordon[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> "http://10.2.19.211:8080";

kube_default__brexit_mgmt_test_dagordon_default_404_route__brexit_mgmt_test_dagordon_smart_product_platform_test_zalan_do____brexit_mgmt_test_dagordon_https_redirect: Host(/^(brexit-mgmt-test-dagordon[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__brexit_mgmt_test_dagordon_get_api_classification_status_admins__brexit_mgmt_test_dagordon_smart_product_platform_test_zalan_do____brexit_mgmt_test_dagordon: Host(/^(brexit-mgmt-test-dagordon[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/classification-status") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.211:8080";

kube_default__brexit_mgmt_test_dagordon_get_api_classification_status_rl_all__brexit_mgmt_test_dagordon_smart_product_platform_test_zalan_do____brexit_mgmt_test_dagordon: Host(/^(brexit-mgmt-test-dagordon[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/classification-status")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brexit-mgmt.read")
  -> clusterClientRatelimit("brexit-mgmt-test-dagordon_api-classification-status_GET", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.211:8080";

kube_default__brexit_mgmt_test_dagordon_get_classification_metrics_admins__brexit_mgmt_test_dagordon_smart_product_platform_test_zalan_do____brexit_mgmt_test_dagordon: Host(/^(brexit-mgmt-test-dagordon[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/classification-metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.211:8080";

kube_default__brexit_mgmt_test_dagordon_get_classification_metrics_all__brexit_mgmt_test_dagordon_smart_product_platform_test_zalan_do____brexit_mgmt_test_dagordon: Host(/^(brexit-mgmt-test-dagordon[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/classification-metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.211:8080";

kube_default__brexit_mgmt_test_dagordon_post_api_actions_export_products_admins__brexit_mgmt_test_dagordon_smart_product_platform_test_zalan_do____brexit_mgmt_test_dagordon: Host(/^(brexit-mgmt-test-dagordon[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/actions/export-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.211:8080";

kube_default__brexit_mgmt_test_dagordon_post_api_actions_export_products_rl_all__brexit_mgmt_test_dagordon_smart_product_platform_test_zalan_do____brexit_mgmt_test_dagordon: Host(/^(brexit-mgmt-test-dagordon[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/actions/export-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brexit-mgmt.write")
  -> clusterClientRatelimit("brexit-mgmt-test-dagordon_api-actions-export-products_POST", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.211:8080";

kube_default__brexit_mgmt_test_dagordon_reject_http_route__0__brexit_mgmt_test_dagordon_smart_product_platform_test_zalan_do____: Host(/^(brexit-mgmt-test-dagordon[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__brexit_mgmt_test_dagordon_reject_http_route__brexit_mgmt_test_dagordon_smart_product_platform_test_zalan_do____brexit_mgmt_test_dagordon: Host(/^(brexit-mgmt-test-dagordon[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> "http://10.2.19.211:8080";

kube_default__brexit_mgmt_test_ralmeida_default_404_route__0__brexit_mgmt_test_ralmeida_smart_product_platform_test_zalan_do____: Host(/^(brexit-mgmt-test-ralmeida[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__brexit_mgmt_test_ralmeida_default_404_route__brexit_mgmt_test_ralmeida_smart_product_platform_test_zalan_do____brexit_mgmt_test_ralmeida: Host(/^(brexit-mgmt-test-ralmeida[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> "http://10.2.19.212:8080";

kube_default__brexit_mgmt_test_ralmeida_default_404_route__brexit_mgmt_test_ralmeida_smart_product_platform_test_zalan_do____brexit_mgmt_test_ralmeida_https_redirect: Host(/^(brexit-mgmt-test-ralmeida[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__brexit_mgmt_test_ralmeida_get_api_classification_status_admins__brexit_mgmt_test_ralmeida_smart_product_platform_test_zalan_do____brexit_mgmt_test_ralmeida: Host(/^(brexit-mgmt-test-ralmeida[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/classification-status") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.212:8080";

kube_default__brexit_mgmt_test_ralmeida_get_api_classification_status_rl_all__brexit_mgmt_test_ralmeida_smart_product_platform_test_zalan_do____brexit_mgmt_test_ralmeida: Host(/^(brexit-mgmt-test-ralmeida[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/classification-status")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brexit-mgmt.read")
  -> clusterClientRatelimit("brexit-mgmt-test-ralmeida_api-classification-status_GET", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.212:8080";

kube_default__brexit_mgmt_test_ralmeida_get_classification_metrics_admins__brexit_mgmt_test_ralmeida_smart_product_platform_test_zalan_do____brexit_mgmt_test_ralmeida: Host(/^(brexit-mgmt-test-ralmeida[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/classification-metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.212:8080";

kube_default__brexit_mgmt_test_ralmeida_get_classification_metrics_all__brexit_mgmt_test_ralmeida_smart_product_platform_test_zalan_do____brexit_mgmt_test_ralmeida: Host(/^(brexit-mgmt-test-ralmeida[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/classification-metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.212:8080";

kube_default__brexit_mgmt_test_ralmeida_post_api_actions_export_products_admins__brexit_mgmt_test_ralmeida_smart_product_platform_test_zalan_do____brexit_mgmt_test_ralmeida: Host(/^(brexit-mgmt-test-ralmeida[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/actions/export-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.212:8080";

kube_default__brexit_mgmt_test_ralmeida_post_api_actions_export_products_rl_all__brexit_mgmt_test_ralmeida_smart_product_platform_test_zalan_do____brexit_mgmt_test_ralmeida: Host(/^(brexit-mgmt-test-ralmeida[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/actions/export-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brexit-mgmt.write")
  -> clusterClientRatelimit("brexit-mgmt-test-ralmeida_api-actions-export-products_POST", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.19.212:8080";

kube_default__brexit_mgmt_test_ralmeida_reject_http_route__0__brexit_mgmt_test_ralmeida_smart_product_platform_test_zalan_do____: Host(/^(brexit-mgmt-test-ralmeida[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__brexit_mgmt_test_ralmeida_reject_http_route__brexit_mgmt_test_ralmeida_smart_product_platform_test_zalan_do____brexit_mgmt_test_ralmeida: Host(/^(brexit-mgmt-test-ralmeida[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d9a04d71-ab1d-47cc-b492-ea2e8250bdee\",\"application_id\":\"brexit\",\"path_templates\":[\"/actions/export-products\",\"/classification-status\"]}")
  -> "http://10.2.19.212:8080";

kube_default__brownie_default_404_route__0__brownie_smart_product_platform_test_zalan_do____: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__brownie_default_404_route__0__spp_logistics_data_test_zalandoapis_com____: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__brownie_default_404_route__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_default_404_route__brownie_smart_product_platform_test_zalan_do____brownie_https_redirect: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__brownie_default_404_route__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_default_404_route__spp_logistics_data_test_zalandoapis_com____brownie_https_redirect: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__brownie_get_api_logistics_products_admins__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_admins__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_id_admins__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_id_admins__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_id_rl_all__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_id_rl_all__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_id_rl_service_stupsbrownieperftest__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_GET_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_id_rl_service_stupsbrownieperftest__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_GET_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_id_rl_service_stupsbuyingarticlesrelease__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_GET_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_id_rl_service_stupsbuyingarticlesrelease__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_GET_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_id_rl_service_stupsplanetexpresslocaltokenretriever__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_GET_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_id_rl_service_stupsplanetexpresslocaltokenretriever__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_GET_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_id_rl_service_stupsplatformminuetrelease__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_GET_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_id_rl_service_stupsplatformminuetrelease__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_GET_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_id_rl_service_stupsspporchestrator__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_GET_stups_spp-orchestrator", 11200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_id_rl_service_stupsspporchestrator__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_GET_stups_spp-orchestrator", 11200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_id_rl_users_all__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "melsharkawy", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_id_rl_users_all__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "melsharkawy", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_rl_all__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_rl_all__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_rl_service_stupsbrownieperftest__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products_GET_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_rl_service_stupsbrownieperftest__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products_GET_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_rl_service_stupsbuyingarticlesrelease__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products_GET_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_rl_service_stupsbuyingarticlesrelease__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products_GET_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_rl_service_stupslogisticsarticleinterface__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products_GET_stups_logistics-article-interface", 10800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_rl_service_stupslogisticsarticleinterface__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products_GET_stups_logistics-article-interface", 10800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_rl_service_stupsplanetexpresslocaltokenretriever__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products_GET_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_rl_service_stupsplanetexpresslocaltokenretriever__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products_GET_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_rl_service_stupsplatformminuetrelease__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products_GET_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_rl_service_stupsplatformminuetrelease__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products_GET_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_rl_service_stupsspporchestrator__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products_GET_stups_spp-orchestrator", 11200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_rl_service_stupsspporchestrator__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products_GET_stups_spp-orchestrator", 11200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_rl_users_all__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "melsharkawy", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie_api-logistics-products_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_logistics_products_rl_users_all__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "melsharkawy", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie_api-logistics-products_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_periods_admins__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/periods") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_periods_admins__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/periods") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_periods_all__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/periods")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_periods_all__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/periods")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_periods_id_admins__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/periods/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_periods_id_admins__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/periods/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_periods_id_all__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/periods/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_api_periods_id_all__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/periods/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_health_admins__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_health_admins__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_health_all__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_get_health_all__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_head_api_logistics_products_id_admins__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_head_api_logistics_products_id_admins__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_head_api_logistics_products_id_rl_all__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_HEAD", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_head_api_logistics_products_id_rl_all__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_HEAD", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_head_api_logistics_products_id_rl_service_stupsbrownieperftest__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_HEAD_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_head_api_logistics_products_id_rl_service_stupsbrownieperftest__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_HEAD_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_head_api_logistics_products_id_rl_service_stupsbuyingarticlesrelease__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_HEAD_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_head_api_logistics_products_id_rl_service_stupsbuyingarticlesrelease__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_HEAD_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_head_api_logistics_products_id_rl_service_stupsplanetexpresslocaltokenretriever__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_HEAD_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_head_api_logistics_products_id_rl_service_stupsplanetexpresslocaltokenretriever__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_HEAD_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_head_api_logistics_products_id_rl_service_stupsplatformminuetrelease__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_HEAD_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_head_api_logistics_products_id_rl_service_stupsplatformminuetrelease__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_HEAD_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_head_api_logistics_products_id_rl_service_stupsspporchestrator__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_HEAD_stups_spp-orchestrator", 11200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_head_api_logistics_products_id_rl_service_stupsspporchestrator__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_HEAD_stups_spp-orchestrator", 11200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_head_api_logistics_products_id_rl_users_all__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "melsharkawy", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_HEAD_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_head_api_logistics_products_id_rl_users_all__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "melsharkawy", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_HEAD_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_perf_test__brownie_perf_test_smart_product_platform_test_zalan_do____brownie_perf_test: Host(/^(brownie-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.249.49:8089";

kube_default__brownie_perf_test__brownie_perf_test_smart_product_platform_test_zalan_do____brownie_perf_test_https_redirect: Host(/^(brownie-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__brownie_post_api_internal_events_admins__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/events") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_post_api_internal_events_admins__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/events") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_post_api_internal_events_all__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/events")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_post_api_internal_events_all__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/events")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_post_api_logistics_products_admins__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_post_api_logistics_products_admins__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_post_api_logistics_products_rl_all__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products_POST", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_post_api_logistics_products_rl_all__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products_POST", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_post_api_logistics_products_rl_service_stupsbrexit__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_brexit")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products_POST_stups_brexit", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_post_api_logistics_products_rl_service_stupsbrexit__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_brexit")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products_POST_stups_brexit", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_post_api_logistics_products_rl_service_stupsbrownieperftest__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products_POST_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_post_api_logistics_products_rl_service_stupsbrownieperftest__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products_POST_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_post_api_logistics_products_rl_service_stupsbuyingarticlesrelease__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products_POST_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_post_api_logistics_products_rl_service_stupsbuyingarticlesrelease__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products_POST_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_post_api_logistics_products_rl_service_stupsplanetexpresslocaltokenretriever__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products_POST_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_post_api_logistics_products_rl_service_stupsplanetexpresslocaltokenretriever__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products_POST_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_post_api_logistics_products_rl_service_stupsplatformminuetrelease__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products_POST_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_post_api_logistics_products_rl_service_stupsplatformminuetrelease__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products_POST_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_post_api_logistics_products_rl_users_all__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie_api-logistics-products_POST_users", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_post_api_logistics_products_rl_users_all__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie_api-logistics-products_POST_users", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_admins__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_admins__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_preferential_countries_admins__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_preferential_countries_admins__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_preferential_countries_non_whitelisted__0__brownie_smart_product_platform_test_zalan_do____: Path("/api/logistics-products/:id/preferential-countries") && Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__brownie_put_api_logistics_products_id_preferential_countries_non_whitelisted__0__spp_logistics_data_test_zalandoapis_com____: Path("/api/logistics-products/:id/preferential-countries") && Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__brownie_put_api_logistics_products_id_preferential_countries_non_whitelisted__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_preferential_countries_non_whitelisted__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_preferential_countries_rl_service_stupsartworks__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("sub", "stups_artworks")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.preferential")
  -> clusterClientRatelimit("brownie_api-logistics-products-id-preferential-countries_PUT_stups_artworks", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_preferential_countries_rl_service_stupsartworks__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("sub", "stups_artworks")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.preferential")
  -> clusterClientRatelimit("brownie_api-logistics-products-id-preferential-countries_PUT_stups_artworks", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_preferential_countries_rl_service_stupsartworksrelease__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("sub", "stups_artworks-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.preferential")
  -> clusterClientRatelimit("brownie_api-logistics-products-id-preferential-countries_PUT_stups_artworks-release", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_preferential_countries_rl_service_stupsartworksrelease__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("sub", "stups_artworks-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.preferential")
  -> clusterClientRatelimit("brownie_api-logistics-products-id-preferential-countries_PUT_stups_artworks-release", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_preferential_countries_rl_service_stupsplanetexpresslocaltokenretriever__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.preferential")
  -> clusterClientRatelimit("brownie_api-logistics-products-id-preferential-countries_PUT_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_preferential_countries_rl_service_stupsplanetexpresslocaltokenretriever__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.preferential")
  -> clusterClientRatelimit("brownie_api-logistics-products-id-preferential-countries_PUT_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_preferential_countries_rl_service_stupssppbulkupdater__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("sub", "stups_spp-bulk-updater")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.preferential")
  -> clusterClientRatelimit("brownie_api-logistics-products-id-preferential-countries_PUT_stups_spp-bulk-updater", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_preferential_countries_rl_service_stupssppbulkupdater__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("sub", "stups_spp-bulk-updater")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.preferential")
  -> clusterClientRatelimit("brownie_api-logistics-products-id-preferential-countries_PUT_stups_spp-bulk-updater", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_rl_all__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_PUT", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_rl_all__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_PUT", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_rl_service_stupsbrexit__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_brexit")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_PUT_stups_brexit", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_rl_service_stupsbrexit__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_brexit")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_PUT_stups_brexit", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_rl_service_stupsbrownieperftest__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_PUT_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_rl_service_stupsbrownieperftest__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_PUT_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_rl_service_stupsbuyingarticlesrelease__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_PUT_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_rl_service_stupsbuyingarticlesrelease__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_PUT_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_rl_service_stupsplanetexpresslocaltokenretriever__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_PUT_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_rl_service_stupsplanetexpresslocaltokenretriever__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_PUT_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_rl_service_stupsplatformminuetrelease__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_PUT_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_rl_service_stupsplatformminuetrelease__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_PUT_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_rl_service_stupsspporchestrator__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_PUT_stups_spp-orchestrator", 11200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_rl_service_stupsspporchestrator__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_PUT_stups_spp-orchestrator", 11200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_rl_users_all__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_PUT_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_put_api_logistics_products_id_rl_users_all__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie_api-logistics-products-id_PUT_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_reject_http_route__0__brownie_smart_product_platform_test_zalan_do____: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__brownie_reject_http_route__0__spp_logistics_data_test_zalandoapis_com____: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__brownie_reject_http_route__brownie_smart_product_platform_test_zalan_do____brownie: Host(/^(brownie[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_reject_http_route__spp_logistics_data_test_zalandoapis_com____brownie: Host(/^(spp-logistics-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie\",\"path_templates\":[\"/api/logistics-products\",\"/api/logistics-products/{id}\",\"/api/logistics-products/{id}/preferential-countries\",\"/api/periods\",\"/api/periods/{id}\"]}")
  -> <roundRobin, "http://10.2.88.13:8080", "http://10.2.99.101:8080">;

kube_default__brownie_test_pr_310_default_404_route__0__brownie_test_pr_310_smart_product_platform_test_zalan_do____: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__brownie_test_pr_310_default_404_route__0__spp_logistics_data_test_pr_310_zalandoapis_com____: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__brownie_test_pr_310_default_404_route__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_default_404_route__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310_https_redirect: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__brownie_test_pr_310_default_404_route__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_default_404_route__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310_https_redirect: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__brownie_test_pr_310_get_api_logistics_products_admins__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_admins__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_id_admins__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_id_admins__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_id_rl_all__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_id_rl_all__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_id_rl_service_stupsbrownieperftest__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_GET_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_id_rl_service_stupsbrownieperftest__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_GET_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_id_rl_service_stupsbuyingarticlesrelease__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_GET_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_id_rl_service_stupsbuyingarticlesrelease__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_GET_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_id_rl_service_stupsplanetexpresslocaltokenretriever__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_GET_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_id_rl_service_stupsplanetexpresslocaltokenretriever__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_GET_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_id_rl_service_stupsplatformminuetrelease__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_GET_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_id_rl_service_stupsplatformminuetrelease__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_GET_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_id_rl_service_stupsspporchestrator__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_GET_stups_spp-orchestrator", 11200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_id_rl_service_stupsspporchestrator__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_GET_stups_spp-orchestrator", 11200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_id_rl_users_all__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "melsharkawy", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_id_rl_users_all__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "melsharkawy", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_rl_all__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_rl_all__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_rl_service_stupsbrownieperftest__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_GET_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_rl_service_stupsbrownieperftest__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_GET_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_rl_service_stupsbuyingarticlesrelease__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_GET_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_rl_service_stupsbuyingarticlesrelease__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_GET_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_rl_service_stupslogisticsarticleinterface__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_GET_stups_logistics-article-interface", 10800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_rl_service_stupslogisticsarticleinterface__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_GET_stups_logistics-article-interface", 10800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_rl_service_stupsplanetexpresslocaltokenretriever__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_GET_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_rl_service_stupsplanetexpresslocaltokenretriever__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_GET_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_rl_service_stupsplatformminuetrelease__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_GET_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_rl_service_stupsplatformminuetrelease__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_GET_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_rl_service_stupsspporchestrator__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_GET_stups_spp-orchestrator", 11200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_rl_service_stupsspporchestrator__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_GET_stups_spp-orchestrator", 11200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_rl_users_all__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "melsharkawy", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_logistics_products_rl_users_all__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "melsharkawy", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_periods_admins__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/periods") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_periods_admins__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/periods") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_periods_all__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/periods")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_periods_all__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/periods")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_periods_id_admins__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/periods/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_periods_id_admins__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/periods/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_periods_id_all__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/periods/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_api_periods_id_all__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/periods/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_health_admins__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_health_admins__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_health_all__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_get_health_all__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_head_api_logistics_products_id_admins__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_head_api_logistics_products_id_admins__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_head_api_logistics_products_id_rl_all__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_HEAD", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_head_api_logistics_products_id_rl_all__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_HEAD", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_head_api_logistics_products_id_rl_service_stupsbrownieperftest__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_HEAD_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_head_api_logistics_products_id_rl_service_stupsbrownieperftest__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_HEAD_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_head_api_logistics_products_id_rl_service_stupsbuyingarticlesrelease__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_HEAD_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_head_api_logistics_products_id_rl_service_stupsbuyingarticlesrelease__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_HEAD_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_head_api_logistics_products_id_rl_service_stupsplanetexpresslocaltokenretriever__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_HEAD_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_head_api_logistics_products_id_rl_service_stupsplanetexpresslocaltokenretriever__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_HEAD_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_head_api_logistics_products_id_rl_service_stupsplatformminuetrelease__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_HEAD_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_head_api_logistics_products_id_rl_service_stupsplatformminuetrelease__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_HEAD_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_head_api_logistics_products_id_rl_service_stupsspporchestrator__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_HEAD_stups_spp-orchestrator", 11200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_head_api_logistics_products_id_rl_service_stupsspporchestrator__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.read")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_HEAD_stups_spp-orchestrator", 11200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_head_api_logistics_products_id_rl_users_all__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "melsharkawy", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_HEAD_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_head_api_logistics_products_id_rl_users_all__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "melsharkawy", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_HEAD_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_internal_events_admins__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/events") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_internal_events_admins__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/events") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_internal_events_all__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/events")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_internal_events_all__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/events")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_logistics_products_admins__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_logistics_products_admins__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_logistics_products_rl_all__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_POST", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_logistics_products_rl_all__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_POST", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_logistics_products_rl_service_stupsbrexit__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_brexit")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_POST_stups_brexit", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_logistics_products_rl_service_stupsbrexit__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_brexit")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_POST_stups_brexit", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_logistics_products_rl_service_stupsbrownieperftest__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_POST_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_logistics_products_rl_service_stupsbrownieperftest__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_POST_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_logistics_products_rl_service_stupsbuyingarticlesrelease__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_POST_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_logistics_products_rl_service_stupsbuyingarticlesrelease__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_POST_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_logistics_products_rl_service_stupsplanetexpresslocaltokenretriever__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_POST_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_logistics_products_rl_service_stupsplanetexpresslocaltokenretriever__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_POST_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_logistics_products_rl_service_stupsplatformminuetrelease__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_POST_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_logistics_products_rl_service_stupsplatformminuetrelease__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_POST_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_logistics_products_rl_users_all__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_POST_users", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_post_api_logistics_products_rl_users_all__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products_POST_users", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_admins__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_admins__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_preferential_countries_admins__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_preferential_countries_admins__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_preferential_countries_non_whitelisted__0__brownie_test_pr_310_smart_product_platform_test_zalan_do____: Path("/api/logistics-products/:id/preferential-countries") && Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__brownie_test_pr_310_put_api_logistics_products_id_preferential_countries_non_whitelisted__0__spp_logistics_data_test_pr_310_zalandoapis_com____: Path("/api/logistics-products/:id/preferential-countries") && Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__brownie_test_pr_310_put_api_logistics_products_id_preferential_countries_non_whitelisted__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_preferential_countries_non_whitelisted__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_preferential_countries_rl_service_stupsartworks__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("sub", "stups_artworks")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.preferential")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id-preferential-countries_PUT_stups_artworks", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_preferential_countries_rl_service_stupsartworks__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("sub", "stups_artworks")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.preferential")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id-preferential-countries_PUT_stups_artworks", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_preferential_countries_rl_service_stupsartworksrelease__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("sub", "stups_artworks-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.preferential")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id-preferential-countries_PUT_stups_artworks-release", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_preferential_countries_rl_service_stupsartworksrelease__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("sub", "stups_artworks-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.preferential")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id-preferential-countries_PUT_stups_artworks-release", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_preferential_countries_rl_service_stupsplanetexpresslocaltokenretriever__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.preferential")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id-preferential-countries_PUT_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_preferential_countries_rl_service_stupsplanetexpresslocaltokenretriever__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.preferential")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id-preferential-countries_PUT_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_preferential_countries_rl_service_stupssppbulkupdater__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("sub", "stups_spp-bulk-updater")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.preferential")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id-preferential-countries_PUT_stups_spp-bulk-updater", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_preferential_countries_rl_service_stupssppbulkupdater__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id/preferential-countries") && JWTPayloadAllKV("sub", "stups_spp-bulk-updater")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.preferential")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id-preferential-countries_PUT_stups_spp-bulk-updater", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_rl_all__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_PUT", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_rl_all__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/logistics-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_PUT", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_rl_service_stupsbrexit__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_brexit")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_PUT_stups_brexit", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_rl_service_stupsbrexit__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_brexit")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_PUT_stups_brexit", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_rl_service_stupsbrownieperftest__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_PUT_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_rl_service_stupsbrownieperftest__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_brownie-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_PUT_stups_brownie-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_rl_service_stupsbuyingarticlesrelease__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_PUT_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_rl_service_stupsbuyingarticlesrelease__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_PUT_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_rl_service_stupsplanetexpresslocaltokenretriever__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_PUT_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_rl_service_stupsplanetexpresslocaltokenretriever__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_PUT_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_rl_service_stupsplatformminuetrelease__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_PUT_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_rl_service_stupsplatformminuetrelease__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_PUT_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_rl_service_stupsspporchestrator__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_PUT_stups_spp-orchestrator", 11200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_rl_service_stupsspporchestrator__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "brownie.write")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_PUT_stups_spp-orchestrator", 11200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_rl_users_all__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_PUT_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_put_api_logistics_products_id_rl_users_all__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/logistics-products/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "spramanick")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("brownie-test-pr-310_api-logistics-products-id_PUT_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_reject_http_route__0__brownie_test_pr_310_smart_product_platform_test_zalan_do____: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__brownie_test_pr_310_reject_http_route__0__spp_logistics_data_test_pr_310_zalandoapis_com____: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__brownie_test_pr_310_reject_http_route__brownie_test_pr_310_smart_product_platform_test_zalan_do____brownie_test_pr_310: Host(/^(brownie-test-pr-310[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> "http://10.2.87.183:8080";

kube_default__brownie_test_pr_310_reject_http_route__spp_logistics_data_test_pr_310_zalandoapis_com____brownie_test_pr_310: Host(/^(spp-logistics-data-test-pr-310[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"d17901f3-884e-49d3-9a2c-9549951e802c\",\"application_id\":\"brownie-test-pr-310\",\"path_templates\":[\"/logistics-products\",\"/logistics-products/{id}\",\"/logistics-products/{id}/preferential-countries\",\"/periods\",\"/periods/{id}\"]}")
  -> "http://10.2.87.183:8080";

kube_default__category_tree_ui_current__category_tree_ui_smart_product_platform_test_zalan_do____category_tree_ui_current_pr_814_9: Host(/^(category-tree-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.91.152:8080";

kube_default__category_tree_ui_current__category_tree_ui_smart_product_platform_test_zalan_do____category_tree_ui_current_pr_814_9_https_redirect: Host(/^(category-tree-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__category_tree_ui_current_pr_814_9__category_tree_ui_current_pr_814_9_smart_product_platform_test_zalan_do____category_tree_ui_current_pr_814_9: Host(/^(category-tree-ui-current-pr-814-9[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.91.152:8080";

kube_default__category_tree_ui_current_pr_814_9__category_tree_ui_current_pr_814_9_smart_product_platform_test_zalan_do____category_tree_ui_current_pr_814_9_https_redirect: Host(/^(category-tree-ui-current-pr-814-9[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__category_tree_ui_current_pr_817_4__category_tree_ui_current_pr_817_4_smart_product_platform_test_zalan_do____category_tree_ui_current_pr_817_4: Host(/^(category-tree-ui-current-pr-817-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__category_tree_ui_current_pr_817_4__category_tree_ui_current_pr_817_4_smart_product_platform_test_zalan_do____category_tree_ui_current_pr_817_4_https_redirect: Host(/^(category-tree-ui-current-pr-817-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__category_tree_ui_current_pr_820_1__category_tree_ui_current_pr_820_1_smart_product_platform_test_zalan_do____category_tree_ui_current_pr_820_1: Host(/^(category-tree-ui-current-pr-820-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.91.192:8080";

kube_default__category_tree_ui_current_pr_820_1__category_tree_ui_current_pr_820_1_smart_product_platform_test_zalan_do____category_tree_ui_current_pr_820_1_https_redirect: Host(/^(category-tree-ui-current-pr-820-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__category_tree_ui_new__category_tree_ui_smart_product_platform_test_zalan_do____category_tree_ui_new_pr_814_9: Host(/^(category-tree-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true") && Header("is_variant_new", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.91.146:8080";

kube_default__category_tree_ui_new__category_tree_ui_smart_product_platform_test_zalan_do____category_tree_ui_new_pr_814_9_https_redirect: Host(/^(category-tree-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Header("is_variant_new", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__category_tree_ui_new_api_path_1__category_tree_ui_smart_product_platform_test_zalan_do____: Host(/^(category-tree-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("x-zalando-coldbrew-is-new", "true") && PathSubtree("/api/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> dropRequestHeader("x-zalando-coldbrew-is-new")
  -> setRequestHeader("is_variant_new", "true")
  -> <loopback>;

kube_default__category_tree_ui_new_not_valid_2__category_tree_ui_smart_product_platform_test_zalan_do____: Host(/^(category-tree-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(404)
  -> <shunt>;

kube_default__category_tree_ui_new_pr_814_9__category_tree_ui_new_pr_814_9_smart_product_platform_test_zalan_do____category_tree_ui_new_pr_814_9: Host(/^(category-tree-ui-new-pr-814-9[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true") && Header("is_variant_new", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.91.146:8080";

kube_default__category_tree_ui_new_pr_814_9__category_tree_ui_new_pr_814_9_smart_product_platform_test_zalan_do____category_tree_ui_new_pr_814_9_https_redirect: Host(/^(category-tree-ui-new-pr-814-9[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_variant_new", "true") && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__category_tree_ui_new_pr_814_9_api_path_1__category_tree_ui_new_pr_814_9_smart_product_platform_test_zalan_do____: Host(/^(category-tree-ui-new-pr-814-9[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("x-zalando-coldbrew-is-new", "true") && PathSubtree("/api/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> dropRequestHeader("x-zalando-coldbrew-is-new")
  -> setRequestHeader("is_variant_new", "true")
  -> <loopback>;

kube_default__category_tree_ui_new_pr_814_9_not_valid_2__category_tree_ui_new_pr_814_9_smart_product_platform_test_zalan_do____: Host(/^(category-tree-ui-new-pr-814-9[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(404)
  -> <shunt>;

kube_default__category_tree_ui_new_pr_814_9_render_path_0__category_tree_ui_new_pr_814_9_smart_product_platform_test_zalan_do____: Host(/^(category-tree-ui-new-pr-814-9[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("x-zalando-coldbrew-is-new", "true") && HeaderRegexp("x-zalando-coldbrew-appRoute", /^(\/|(\/tree.*))$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> dropRequestHeader("x-zalando-coldbrew-is-new")
  -> setRequestHeader("is_variant_new", "true")
  -> <loopback>;

kube_default__category_tree_ui_new_pr_817_4__category_tree_ui_new_pr_817_4_smart_product_platform_test_zalan_do____category_tree_ui_new_pr_817_4: Host(/^(category-tree-ui-new-pr-817-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true") && Header("is_variant_new", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__category_tree_ui_new_pr_817_4__category_tree_ui_new_pr_817_4_smart_product_platform_test_zalan_do____category_tree_ui_new_pr_817_4_https_redirect: Host(/^(category-tree-ui-new-pr-817-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Header("is_variant_new", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__category_tree_ui_new_pr_817_4_api_path_1__category_tree_ui_new_pr_817_4_smart_product_platform_test_zalan_do____: Host(/^(category-tree-ui-new-pr-817-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("x-zalando-coldbrew-is-new", "true") && PathSubtree("/api/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> dropRequestHeader("x-zalando-coldbrew-is-new")
  -> setRequestHeader("is_variant_new", "true")
  -> <loopback>;

kube_default__category_tree_ui_new_pr_817_4_not_valid_2__category_tree_ui_new_pr_817_4_smart_product_platform_test_zalan_do____: Host(/^(category-tree-ui-new-pr-817-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(404)
  -> <shunt>;

kube_default__category_tree_ui_new_pr_817_4_render_path_0__category_tree_ui_new_pr_817_4_smart_product_platform_test_zalan_do____: Host(/^(category-tree-ui-new-pr-817-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("x-zalando-coldbrew-is-new", "true") && HeaderRegexp("x-zalando-coldbrew-appRoute", /^(\/|(\/tree.*))$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> dropRequestHeader("x-zalando-coldbrew-is-new")
  -> setRequestHeader("is_variant_new", "true")
  -> <loopback>;

kube_default__category_tree_ui_new_pr_820_1__category_tree_ui_new_pr_820_1_smart_product_platform_test_zalan_do____category_tree_ui_new_pr_820_1: Host(/^(category-tree-ui-new-pr-820-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true") && Header("is_variant_new", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.80.57:8080";

kube_default__category_tree_ui_new_pr_820_1__category_tree_ui_new_pr_820_1_smart_product_platform_test_zalan_do____category_tree_ui_new_pr_820_1_https_redirect: Host(/^(category-tree-ui-new-pr-820-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_variant_new", "true") && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__category_tree_ui_new_pr_820_1_api_path_1__category_tree_ui_new_pr_820_1_smart_product_platform_test_zalan_do____: Host(/^(category-tree-ui-new-pr-820-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("x-zalando-coldbrew-is-new", "true") && PathSubtree("/api/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> dropRequestHeader("x-zalando-coldbrew-is-new")
  -> setRequestHeader("is_variant_new", "true")
  -> <loopback>;

kube_default__category_tree_ui_new_pr_820_1_not_valid_2__category_tree_ui_new_pr_820_1_smart_product_platform_test_zalan_do____: Host(/^(category-tree-ui-new-pr-820-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(404)
  -> <shunt>;

kube_default__category_tree_ui_new_pr_820_1_render_path_0__category_tree_ui_new_pr_820_1_smart_product_platform_test_zalan_do____: Host(/^(category-tree-ui-new-pr-820-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("x-zalando-coldbrew-is-new", "true") && HeaderRegexp("x-zalando-coldbrew-appRoute", /^(\/|(\/tree.*))$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> dropRequestHeader("x-zalando-coldbrew-is-new")
  -> setRequestHeader("is_variant_new", "true")
  -> <loopback>;

kube_default__category_tree_ui_new_render_path_0__category_tree_ui_smart_product_platform_test_zalan_do____: Host(/^(category-tree-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("x-zalando-coldbrew-is-new", "true") && HeaderRegexp("x-zalando-coldbrew-appRoute", /^(\/|(\/tree.*))$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> dropRequestHeader("x-zalando-coldbrew-is-new")
  -> setRequestHeader("is_variant_new", "true")
  -> <loopback>;

kube_default__donut_default_404_route__0__donut_smart_product_platform_test_zalan_do____: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__donut_default_404_route__0__spp_accounting_data_test_zalandoapis_com____: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__donut_default_404_route__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_default_404_route__donut_smart_product_platform_test_zalan_do____donut_https_redirect: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__donut_default_404_route__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_default_404_route__spp_accounting_data_test_zalandoapis_com____donut_https_redirect: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__donut_get_api_accounting_products_wildcard_admins__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/accounting-products/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_admins__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/accounting-products/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_all__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/accounting-products/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_all__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/accounting-products/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsbuyingarticlesrelease__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsbuyingarticlesrelease__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsdonutperftest__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsdonutperftest__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsplanetexpresslocaltokenretriever__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsplanetexpresslocaltokenretriever__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsplatformminuetrelease__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsplatformminuetrelease__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsspporchestrator__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_spp-orchestrator", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsspporchestrator__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_spp-orchestrator", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_users_all__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_users_all__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_health_admins__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_health_admins__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_health_all__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_health_all__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_admins__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/accounting-products/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_admins__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/accounting-products/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_all__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/accounting-products/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD", 240, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_all__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/accounting-products/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD", 240, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsbuyingarticlesrelease__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsbuyingarticlesrelease__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsdonutperftest__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsdonutperftest__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsplanetexpresslocaltokenretriever__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsplanetexpresslocaltokenretriever__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsplatformminuetrelease__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsplatformminuetrelease__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsspporchestrator__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_spp-orchestrator", 2400, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsspporchestrator__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_spp-orchestrator", 2400, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_users_all__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_users", 240, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_users_all__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_users", 240, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_patch_api_accounting_products_wildcard_admins__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/accounting-products/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_patch_api_accounting_products_wildcard_admins__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/accounting-products/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_patch_api_accounting_products_wildcard_rl_all__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/accounting-products/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PATCH", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_patch_api_accounting_products_wildcard_rl_all__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/accounting-products/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PATCH", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_patch_api_accounting_products_wildcard_rl_service_stupsdonutperftest__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PATCH_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_patch_api_accounting_products_wildcard_rl_service_stupsdonutperftest__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PATCH_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_perf_test__donut_perf_test_smart_product_platform_test_zalan_do____donut_perf_test: Host(/^(donut-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.249.52:8089";

kube_default__donut_perf_test__donut_perf_test_smart_product_platform_test_zalan_do____donut_perf_test_https_redirect: Host(/^(donut-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__donut_post_api_accounting_products_admins__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/accounting-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_accounting_products_admins__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/accounting-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_accounting_products_rl_all__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/accounting-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_accounting_products_rl_all__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/accounting-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_accounting_products_rl_service_stupsbuyingarticlesrelease__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_accounting_products_rl_service_stupsbuyingarticlesrelease__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_accounting_products_rl_service_stupsdonutperftest__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products") && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_accounting_products_rl_service_stupsdonutperftest__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products") && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_accounting_products_rl_service_stupsplanetexpresslocaltokenretriever__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_accounting_products_rl_service_stupsplanetexpresslocaltokenretriever__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_accounting_products_rl_service_stupsplatformminuetrelease__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_accounting_products_rl_service_stupsplatformminuetrelease__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_internal_events_admins__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/events") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_internal_events_admins__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/events") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_internal_events_all__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/events")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_internal_events_all__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/events")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_put_api_accounting_products_wildcard_admins__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/accounting-products/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_put_api_accounting_products_wildcard_admins__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/accounting-products/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_put_api_accounting_products_wildcard_rl_all__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/accounting-products/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_put_api_accounting_products_wildcard_rl_all__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/accounting-products/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_put_api_accounting_products_wildcard_rl_service_stupsbuyingarticlesrelease__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_put_api_accounting_products_wildcard_rl_service_stupsbuyingarticlesrelease__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_put_api_accounting_products_wildcard_rl_service_stupsdonutperftest__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_put_api_accounting_products_wildcard_rl_service_stupsdonutperftest__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_put_api_accounting_products_wildcard_rl_service_stupsplanetexpresslocaltokenretriever__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_put_api_accounting_products_wildcard_rl_service_stupsplanetexpresslocaltokenretriever__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_put_api_accounting_products_wildcard_rl_service_stupsplatformminuetrelease__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_put_api_accounting_products_wildcard_rl_service_stupsplatformminuetrelease__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/accounting-products/**") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_reject_http_route__0__donut_smart_product_platform_test_zalan_do____: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__donut_reject_http_route__0__spp_accounting_data_test_zalandoapis_com____: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__donut_reject_http_route__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_reject_http_route__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__echo_ingress_0__0__echo_test_smart_product_platform_test_zalan_do____: Host(/^(echo-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(401)
  -> <shunt>;

kube_default__echo_ingress_0__echo_test_smart_product_platform_test_zalan_do____echo: Host(/^(echo-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.19.215:8080";

kube_default__echo_ingress_0__echo_test_smart_product_platform_test_zalan_do____echo_https_redirect: Host(/^(echo-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__echo_ingress_1__echo_test_smart_product_platform_test_zalan_do____echo: Host(/^(echo-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Path("/api/*")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid", "fabric-demo-app.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward")
  -> "http://10.2.19.215:8080";

kube_default__echo_ingress_1__echo_test_smart_product_platform_test_zalan_do____echo_https_redirect: Host(/^(echo-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "http") && Weight(1000) && Path("/api/*")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__echo_ingress_2__echo_test_smart_product_platform_test_zalan_do____echo: Host(/^(echo-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Path("/api/*")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid", "fabric-demo-app.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward")
  -> "http://10.2.19.215:8080";

kube_default__echo_ingress_2__echo_test_smart_product_platform_test_zalan_do____echo_https_redirect: Host(/^(echo-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "http") && Weight(1000) && Path("/api/*")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__echo_ingress_3__echo_test_smart_product_platform_test_zalan_do____echo: Host(/^(echo-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Path("/api/*")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward")
  -> "http://10.2.19.215:8080";

kube_default__echo_ingress_3__echo_test_smart_product_platform_test_zalan_do____echo_https_redirect: Host(/^(echo-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "http") && Weight(1000) && Path("/api/*")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__fabric_demo_app_default_404_route__0__fabric_demo_app_smart_product_platform_test_zalan_do____: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__fabric_demo_app_default_404_route__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_default_404_route__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app_https_redirect: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__fabric_demo_app_delete_api_organisations_parent_id_contributors_id_admins__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/organisations/:parent-id/contributors/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_delete_api_organisations_parent_id_contributors_id_rl_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/organisations/:parent-id/contributors/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> compress(0, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "some-app-id.write")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations-parent-id-contributors-id_DELETE", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_delete_api_organisations_parent_id_contributors_id_rl_users_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/organisations/:parent-id/contributors/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations-parent-id-contributors-id_DELETE_users", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_get_api_contributors_admins__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/contributors") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_get_api_contributors_id_admins__0__fabric_demo_app_smart_product_platform_test_zalan_do____: Path("/api/contributors/:id") && Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> setResponseHeader("Content-Type", "application/problem+json")
  -> setResponseHeader("X-Custom-Header", "Some value")
  -> status(503)
  -> inlineContent("{\n  \"title\": \"Service down for maintenance\",\n  \"status\": 503\n}")
  -> <shunt>;

kube_default__fabric_demo_app_get_api_contributors_id_admins__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_get_api_contributors_id_rl_all__0__fabric_demo_app_smart_product_platform_test_zalan_do____: Path("/api/contributors/:id") && Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> compress(0, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-demo-app.read")
  -> clusterClientRatelimit("fabric-demo-app_api-contributors-id_GET", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> setResponseHeader("Content-Type", "application/problem+json")
  -> setResponseHeader("X-Custom-Header", "Some value")
  -> status(503)
  -> inlineContent("{\n  \"title\": \"Service down for maintenance\",\n  \"status\": 503\n}")
  -> <shunt>;

kube_default__fabric_demo_app_get_api_contributors_id_rl_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_get_api_contributors_id_rl_users_all__0__fabric_demo_app_smart_product_platform_test_zalan_do____: Path("/api/contributors/:id") && Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("fabric-demo-app_api-contributors-id_GET_users", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> setResponseHeader("Content-Type", "application/problem+json")
  -> setResponseHeader("X-Custom-Header", "Some value")
  -> status(503)
  -> inlineContent("{\n  \"title\": \"Service down for maintenance\",\n  \"status\": 503\n}")
  -> <shunt>;

kube_default__fabric_demo_app_get_api_contributors_id_rl_users_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_get_api_contributors_rl_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/contributors")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> compress(0, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-demo-app.read")
  -> clusterClientRatelimit("fabric-demo-app_api-contributors_GET", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_get_api_contributors_rl_users_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/contributors") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("fabric-demo-app_api-contributors_GET_users", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_get_api_organisations_admins__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/organisations") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_get_api_organisations_id_admins__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/organisations/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_get_api_organisations_id_rl_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/organisations/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> compress(0, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-demo-app.read")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations-id_GET", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_get_api_organisations_id_rl_users_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/organisations/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations-id_GET_users", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_get_api_organisations_parent_id_contributors_admins__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/organisations/:parent-id/contributors") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_get_api_organisations_parent_id_contributors_id_admins__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/organisations/:parent-id/contributors/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_get_api_organisations_parent_id_contributors_id_rl_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/organisations/:parent-id/contributors/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> compress(0, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-demo-app.read")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations-parent-id-contributors-id_GET", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_get_api_organisations_parent_id_contributors_id_rl_users_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/organisations/:parent-id/contributors/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations-parent-id-contributors-id_GET_users", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_get_api_organisations_parent_id_contributors_rl_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/organisations/:parent-id/contributors")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> compress(0, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-demo-app.read")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations-parent-id-contributors_GET", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_get_api_organisations_parent_id_contributors_rl_users_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/organisations/:parent-id/contributors") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations-parent-id-contributors_GET_users", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_get_api_organisations_rl_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/organisations")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> compress(0, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-demo-app.read")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations_GET", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_get_api_organisations_rl_all_test__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Path("/api/organisations/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-demo-app.read")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations_GET", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_get_api_organisations_rl_users_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/organisations") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations_GET_users", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_head_api_contributors_id_admins__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/contributors/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_head_api_contributors_id_rl_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/contributors/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> compress(0, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-demo-app.read")
  -> clusterClientRatelimit("fabric-demo-app_api-contributors-id_HEAD", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_head_api_contributors_id_rl_users_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/contributors/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("fabric-demo-app_api-contributors-id_HEAD_users", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_head_api_organisations_id_admins__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/organisations/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_head_api_organisations_id_rl_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/organisations/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> compress(0, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-demo-app.read")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations-id_HEAD", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_head_api_organisations_id_rl_users_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/organisations/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations-id_HEAD_users", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_head_api_organisations_parent_id_contributors_id_admins__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/organisations/:parent-id/contributors/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_head_api_organisations_parent_id_contributors_id_rl_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/organisations/:parent-id/contributors/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> compress(0, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-demo-app.read")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations-parent-id-contributors-id_HEAD", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_head_api_organisations_parent_id_contributors_id_rl_users_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/organisations/:parent-id/contributors/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations-parent-id-contributors-id_HEAD_users", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_post_api_contributors_admins__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/contributors") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_post_api_contributors_rl_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/contributors")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> compress(0, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-demo-app.write")
  -> clusterClientRatelimit("fabric-demo-app_api-contributors_POST", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_post_api_contributors_rl_users_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/contributors") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("fabric-demo-app_api-contributors_POST_users", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_post_api_internal_events_admins__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/events") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_post_api_internal_events_rl_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/events")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> compress(0, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> clusterClientRatelimit("fabric-demo-app_api-internal-events_POST", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_post_api_internal_events_rl_users_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/events") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("fabric-demo-app_api-internal-events_POST_users", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_post_api_organisations_admins__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/organisations") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_post_api_organisations_rl_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/organisations")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> compress(0, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-demo-app.write")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations_POST", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_post_api_organisations_rl_users_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/organisations") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations_POST_users", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_put_api_contributors_id_admins__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/contributors/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_put_api_contributors_id_rl_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/contributors/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> compress(0, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-demo-app.write")
  -> clusterClientRatelimit("fabric-demo-app_api-contributors-id_PUT", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_put_api_contributors_id_rl_users_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/contributors/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("fabric-demo-app_api-contributors-id_PUT_users", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_put_api_organisations_id_admins__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/organisations/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_put_api_organisations_id_rl_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/organisations/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> compress(0, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-demo-app.write")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations-id_PUT", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_put_api_organisations_id_rl_users_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/organisations/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations-id_PUT_users", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_put_api_organisations_parent_id_contributors_id_admins__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/organisations/:parent-id/contributors/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_put_api_organisations_parent_id_contributors_id_rl_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/organisations/:parent-id/contributors/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> compress(0, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-demo-app.write")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations-parent-id-contributors-id_PUT", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_put_api_organisations_parent_id_contributors_id_rl_users_all__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/organisations/:parent-id/contributors/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("fabric-demo-app_api-organisations-parent-id-contributors-id_PUT_users", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.14.155:8080";

kube_default__fabric_demo_app_reject_http_route__0__fabric_demo_app_smart_product_platform_test_zalan_do____: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__fabric_demo_app_reject_http_route__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> "http://10.2.14.155:8080";

kube_default__fabric_event_scheduler_gateway_default_404_route__0__fabric_event_streams_smart_product_platform_test_zalan_do____: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__fabric_event_scheduler_gateway_default_404_route__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_default_404_route__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler_https_redirect: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__fabric_event_scheduler_gateway_get_api_registered_applications_admins__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/registered-applications") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "cgallagher")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_get_api_registered_applications_all__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/registered-applications")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "restricted.to.admins")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_get_api_registered_applications_id_admins__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/registered-applications/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "cgallagher")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_get_api_registered_applications_id_all__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/registered-applications/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "restricted.to.admins")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_get_api_unsent_events_admins__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/unsent-events") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "cgallagher")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_get_api_unsent_events_all__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/unsent-events")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_get_api_unsent_events_id_admins__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/unsent-events/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "cgallagher")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_get_api_unsent_events_id_all__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/unsent-events/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_get_health_admins__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "cgallagher")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_get_health_all__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_get_liveness_admins__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/liveness") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "cgallagher")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_get_liveness_all__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/liveness")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_post_api_refeed_admins__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/refeed") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "cgallagher")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_post_api_refeed_all__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/refeed")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_post_api_registered_applications_admins__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/registered-applications") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "cgallagher")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_post_api_registered_applications_all__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/registered-applications")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "restricted.to.admins")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_put_api_cluster_cluster_name_namespace_namespace_resource_resource_name_admins__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/cluster/:cluster_name/namespace/:namespace/resource/:resource_name") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "cgallagher")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_put_api_cluster_cluster_name_namespace_namespace_resource_resource_name_all__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/cluster/:cluster_name/namespace/:namespace/resource/:resource_name")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_put_api_registered_applications_id_admins__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/registered-applications/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "cgallagher")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_put_api_registered_applications_id_all__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/registered-applications/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "restricted.to.admins")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_put_api_unsent_events_id_admins__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/unsent-events/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "cgallagher")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_put_api_unsent_events_id_all__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/unsent-events/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.1.237:8080";

kube_default__fabric_event_scheduler_gateway_reject_http_route__0__fabric_event_streams_smart_product_platform_test_zalan_do____: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__fabric_event_scheduler_gateway_reject_http_route__fabric_event_streams_smart_product_platform_test_zalan_do____fabric_event_scheduler: Host(/^(fabric-event-streams[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"32a1cd3e-0966-4178-b22d-0536f1354be0\",\"application_id\":\"fabric-event-scheduler\",\"path_templates\":[\"/api/refeed\",\"/api/unsent-events\",\"/api/unsent-events/{id}\"]}")
  -> "http://10.2.1.237:8080";

kube_default__fabric_spp_homer__fabric_spp_homer_smart_product_platform_test_zalan_do____fabric_spp_homer_service: Host(/^(fabric-spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__fabric_spp_homer__fabric_spp_homer_smart_product_platform_test_zalan_do____fabric_spp_homer_service_https_redirect: Host(/^(fabric-spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__fabric_test_ing__fabric_demo_app_smart_product_platform_test_zalan_do____fabric_demo_app: Host(/^(fabric-demo-app[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Test", "Blah") && Header("X-Forwarded-Proto", "https") && Weight(100) && Path("/api/organisations")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"f445d2f9-d7cd-481a-9784-8ed63c38d3da\",\"application_id\":\"fabric-demo-app\",\"path_templates\":[\"/api/contributors\",\"/api/contributors/{id}\",\"/api/organisations\",\"/api/organisations/{id}\",\"/api/organisations/{parent-id}/contributors\",\"/api/organisations/{parent-id}/contributors/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\":\"Rate limit exceeded\",\"status\":429}", "application/problem+json")
  -> ratelimit(1, "1m")
  -> "http://10.2.14.155:8080";

kube_default__gtin_management__gtin_management_smart_product_platform_test_zalan_do____gtin_management_master_199: Host(/^(gtin-management[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.83.191:8080";

kube_default__gtin_management__gtin_management_smart_product_platform_test_zalan_do____gtin_management_master_199_https_redirect: Host(/^(gtin-management[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__gtin_management_canary__gtin_management_smart_product_platform_test_zalan_do____gtin_management_master_199: Host(/^(gtin-management[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("x-zalando-coldbrew-canary", "true") && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.83.191:8080";

kube_default__gtin_management_canary__gtin_management_smart_product_platform_test_zalan_do____gtin_management_master_199_https_redirect: Host(/^(gtin-management[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("x-zalando-coldbrew-canary", "true") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__gtin_management_master_196__gtin_management_master_196_smart_product_platform_test_zalan_do____gtin_management_master_196: Host(/^(gtin-management-master-196[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__gtin_management_master_196__gtin_management_master_196_smart_product_platform_test_zalan_do____gtin_management_master_196_https_redirect: Host(/^(gtin-management-master-196[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__gtin_management_master_197__gtin_management_master_197_smart_product_platform_test_zalan_do____gtin_management_master_197: Host(/^(gtin-management-master-197[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__gtin_management_master_197__gtin_management_master_197_smart_product_platform_test_zalan_do____gtin_management_master_197_https_redirect: Host(/^(gtin-management-master-197[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__gtin_management_master_198__gtin_management_master_198_smart_product_platform_test_zalan_do____gtin_management_master_198: Host(/^(gtin-management-master-198[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__gtin_management_master_198__gtin_management_master_198_smart_product_platform_test_zalan_do____gtin_management_master_198_https_redirect: Host(/^(gtin-management-master-198[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__gtin_management_master_199__gtin_management_master_199_smart_product_platform_test_zalan_do____gtin_management_master_199: Host(/^(gtin-management-master-199[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.83.191:8080";

kube_default__gtin_management_master_199__gtin_management_master_199_smart_product_platform_test_zalan_do____gtin_management_master_199_https_redirect: Host(/^(gtin-management-master-199[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__gtin_management_pr_215_1__gtin_management_pr_215_1_smart_product_platform_test_zalan_do____gtin_management_pr_215_1: Host(/^(gtin-management-pr-215-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__gtin_management_pr_215_1__gtin_management_pr_215_1_smart_product_platform_test_zalan_do____gtin_management_pr_215_1_https_redirect: Host(/^(gtin-management-pr-215-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__gtin_management_pr_216_3__gtin_management_pr_216_3_smart_product_platform_test_zalan_do____gtin_management_pr_216_3: Host(/^(gtin-management-pr-216-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__gtin_management_pr_216_3__gtin_management_pr_216_3_smart_product_platform_test_zalan_do____gtin_management_pr_216_3_https_redirect: Host(/^(gtin-management-pr-216-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__master_attributes_ui__master_attributes_ui_smart_product_platform_test_zalan_do____master_attributes_ui_master_133: Host(/^(master-attributes-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.249.64:8080";

kube_default__master_attributes_ui__master_attributes_ui_smart_product_platform_test_zalan_do____master_attributes_ui_master_133_https_redirect: Host(/^(master-attributes-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__master_attributes_ui_canary__master_attributes_ui_smart_product_platform_test_zalan_do____master_attributes_ui_master_133: Host(/^(master-attributes-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("x-zalando-coldbrew-canary", "true") && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.249.64:8080";

kube_default__master_attributes_ui_canary__master_attributes_ui_smart_product_platform_test_zalan_do____master_attributes_ui_master_133_https_redirect: Host(/^(master-attributes-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("x-zalando-coldbrew-canary", "true") && Header("is_workbench", "true") && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__master_attributes_ui_master_133__master_attributes_ui_master_133_smart_product_platform_test_zalan_do____master_attributes_ui_master_133: Host(/^(master-attributes-ui-master-133[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.249.64:8080";

kube_default__master_attributes_ui_master_133__master_attributes_ui_master_133_smart_product_platform_test_zalan_do____master_attributes_ui_master_133_https_redirect: Host(/^(master-attributes-ui-master-133[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__master_attributes_ui_pr_397_2__master_attributes_ui_pr_397_2_smart_product_platform_test_zalan_do____master_attributes_ui_pr_397_2: Host(/^(master-attributes-ui-pr-397-2[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__master_attributes_ui_pr_397_2__master_attributes_ui_pr_397_2_smart_product_platform_test_zalan_do____master_attributes_ui_pr_397_2_https_redirect: Host(/^(master-attributes-ui-pr-397-2[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true") && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__onboarding_aortega__onboarding_aortega_smart_product_platform_test_zalan_do____onboarding_aortega_pr_1_11: Host(/^(onboarding-aortega[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.98.51:8080";

kube_default__onboarding_aortega__onboarding_aortega_smart_product_platform_test_zalan_do____onboarding_aortega_pr_1_11_https_redirect: Host(/^(onboarding-aortega[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__onboarding_aortega_canary__onboarding_aortega_smart_product_platform_test_zalan_do____onboarding_aortega_pr_1_11: Host(/^(onboarding-aortega[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("x-zalando-coldbrew-canary", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.98.51:8080";

kube_default__onboarding_aortega_canary__onboarding_aortega_smart_product_platform_test_zalan_do____onboarding_aortega_pr_1_11_https_redirect: Host(/^(onboarding-aortega[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("x-zalando-coldbrew-canary", "true") && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__onboarding_aortega_pr_1_11__onboarding_aortega_pr_1_11_smart_product_platform_test_zalan_do____onboarding_aortega_pr_1_11: Host(/^(onboarding-aortega-pr-1-11[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.98.51:8080";

kube_default__onboarding_aortega_pr_1_11__onboarding_aortega_pr_1_11_smart_product_platform_test_zalan_do____onboarding_aortega_pr_1_11_https_redirect: Host(/^(onboarding-aortega-pr-1-11[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__onboarding_aortega_pr_1_9__onboarding_aortega_pr_1_9_smart_product_platform_test_zalan_do____onboarding_aortega_pr_1_9: Host(/^(onboarding-aortega-pr-1-9[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__onboarding_aortega_pr_1_9__onboarding_aortega_pr_1_9_smart_product_platform_test_zalan_do____onboarding_aortega_pr_1_9_https_redirect: Host(/^(onboarding-aortega-pr-1-9[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__onboarding_marcus__onboarding_marcus_smart_product_platform_test_zalan_do____onboarding_marcus_pr_1_6: Host(/^(onboarding-marcus[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.1.240:8080";

kube_default__onboarding_marcus__onboarding_marcus_smart_product_platform_test_zalan_do____onboarding_marcus_pr_1_6_https_redirect: Host(/^(onboarding-marcus[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__onboarding_marcus_canary__onboarding_marcus_smart_product_platform_test_zalan_do____onboarding_marcus_pr_1_6: Host(/^(onboarding-marcus[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("x-zalando-coldbrew-canary", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.1.240:8080";

kube_default__onboarding_marcus_canary__onboarding_marcus_smart_product_platform_test_zalan_do____onboarding_marcus_pr_1_6_https_redirect: Host(/^(onboarding-marcus[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("x-zalando-coldbrew-canary", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__onboarding_marcus_pr_1_6__onboarding_marcus_pr_1_6_smart_product_platform_test_zalan_do____onboarding_marcus_pr_1_6: Host(/^(onboarding-marcus-pr-1-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.1.240:8080";

kube_default__onboarding_marcus_pr_1_6__onboarding_marcus_pr_1_6_smart_product_platform_test_zalan_do____onboarding_marcus_pr_1_6_https_redirect: Host(/^(onboarding-marcus-pr-1-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__pgview_web__pgview_smart_product_platform_test_zalan_do____pgview_web: Host(/^(pgview[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.69.50:8081";

kube_default__pgview_web__pgview_smart_product_platform_test_zalan_do____pgview_web_https_redirect: Host(/^(pgview[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__postgres_operator_ui__pgui_smart_product_platform_test_zalan_do____postgres_operator_ui: Host(/^(pgui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.232:8081";

kube_default__postgres_operator_ui__pgui_smart_product_platform_test_zalan_do____postgres_operator_ui_https_redirect: Host(/^(pgui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__product_search_ui__product_search_ui_smart_product_platform_test_zalan_do____product_search_ui_master_89: Host(/^(product-search-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.43.6:8080";

kube_default__product_search_ui__product_search_ui_smart_product_platform_test_zalan_do____product_search_ui_master_89_https_redirect: Host(/^(product-search-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__product_search_ui_master_89__product_search_ui_master_89_smart_product_platform_test_zalan_do____product_search_ui_master_89: Host(/^(product-search-ui-master-89[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.43.6:8080";

kube_default__product_search_ui_master_89__product_search_ui_master_89_smart_product_platform_test_zalan_do____product_search_ui_master_89_https_redirect: Host(/^(product-search-ui-master-89[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__product_search_ui_pr_94_4__product_search_ui_pr_94_4_smart_product_platform_test_zalan_do____product_search_ui_pr_94_4: Host(/^(product-search-ui-pr-94-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__product_search_ui_pr_94_4__product_search_ui_pr_94_4_smart_product_platform_test_zalan_do____product_search_ui_pr_94_4_https_redirect: Host(/^(product-search-ui-pr-94-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__sentiment_analysis_default_404_route__0__sentiment_analysis_smart_product_platform_test_zalan_do____: Host(/^(sentiment-analysis[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__sentiment_analysis_default_404_route__sentiment_analysis_smart_product_platform_test_zalan_do____sentiment_analysis: Host(/^(sentiment-analysis[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__sentiment_analysis_default_404_route__sentiment_analysis_smart_product_platform_test_zalan_do____sentiment_analysis_https_redirect: Host(/^(sentiment-analysis[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__sentiment_analysis_get__admins__sentiment_analysis_smart_product_platform_test_zalan_do____sentiment_analysis: Host(/^(sentiment-analysis[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pslowinski", "https://identity.zalando.com/managed-id", "rlagarferrei")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__sentiment_analysis_get__all__sentiment_analysis_smart_product_platform_test_zalan_do____sentiment_analysis: Host(/^(sentiment-analysis[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__sentiment_analysis_reject_http_route__0__sentiment_analysis_smart_product_platform_test_zalan_do____: Host(/^(sentiment-analysis[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__sentiment_analysis_reject_http_route__sentiment_analysis_smart_product_platform_test_zalan_do____sentiment_analysis: Host(/^(sentiment-analysis[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__setanta_categories_staging_default_404_route__0__categories_setanta_staging_zalan_do____: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__setanta_categories_staging_default_404_route__0__setanta_categories_staging_smart_product_platform_test_zalan_do____: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__setanta_categories_staging_default_404_route__0__spp_categories_test_zalandoapis_com____: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__setanta_categories_staging_default_404_route__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_default_404_route__categories_setanta_staging_zalan_do____setanta_categories_staging_https_redirect: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__setanta_categories_staging_default_404_route__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_default_404_route__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging_https_redirect: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__setanta_categories_staging_default_404_route__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_default_404_route__spp_categories_test_zalandoapis_com____setanta_categories_staging_https_redirect: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__setanta_categories_staging_delete_api_internal_categories_id_overrides_id_admins__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/categories/:id/overrides/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_delete_api_internal_categories_id_overrides_id_admins__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/categories/:id/overrides/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_delete_api_internal_categories_id_overrides_id_admins__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/categories/:id/overrides/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_delete_api_internal_categories_id_overrides_id_all__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/categories/:id/overrides/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.setanta_write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_delete_api_internal_categories_id_overrides_id_all__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/categories/:id/overrides/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.setanta_write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_delete_api_internal_categories_id_overrides_id_all__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/categories/:id/overrides/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.setanta_write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_categories_id_admins__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/categories/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_categories_id_admins__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/categories/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_categories_id_admins__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/categories/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_categories_id_rl_all__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/categories/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-categories-id_GET", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_categories_id_rl_all__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/categories/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-categories-id_GET", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_categories_id_rl_all__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/categories/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-categories-id_GET", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_categories_id_rl_service_catalogapi__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/categories/:id") && JWTPayloadAllKV("sub", "catalog-api")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-categories-id_GET_catalog-api", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_categories_id_rl_service_catalogapi__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/categories/:id") && JWTPayloadAllKV("sub", "catalog-api")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-categories-id_GET_catalog-api", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_categories_id_rl_service_catalogapi__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/categories/:id") && JWTPayloadAllKV("sub", "catalog-api")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-categories-id_GET_catalog-api", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_categories_id_rl_service_predator__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/categories/:id") && JWTPayloadAllKV("sub", "predator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-categories-id_GET_predator", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_categories_id_rl_service_predator__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/categories/:id") && JWTPayloadAllKV("sub", "predator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-categories-id_GET_predator", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_categories_id_rl_service_predator__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/categories/:id") && JWTPayloadAllKV("sub", "predator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-categories-id_GET_predator", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_internal_wildcard_admins__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_internal_wildcard_admins__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_internal_wildcard_admins__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_internal_wildcard_all__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_internal_wildcard_all__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_internal_wildcard_all__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_sales_channels_id_category_tree_admins__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/sales-channels/:id/category-tree") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_sales_channels_id_category_tree_admins__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/sales-channels/:id/category-tree") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_sales_channels_id_category_tree_admins__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/sales-channels/:id/category-tree") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_sales_channels_id_category_tree_rl_all__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/sales-channels/:id/category-tree")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-sales-channels-id-category-tree_GET", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_sales_channels_id_category_tree_rl_all__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/sales-channels/:id/category-tree")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-sales-channels-id-category-tree_GET", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_sales_channels_id_category_tree_rl_all__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/sales-channels/:id/category-tree")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-sales-channels-id-category-tree_GET", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_sales_channels_id_category_tree_rl_service_catalogapi__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sales-channels/:id/category-tree") && JWTPayloadAllKV("sub", "catalog-api")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-sales-channels-id-category-tree_GET_catalog-api", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_sales_channels_id_category_tree_rl_service_catalogapi__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sales-channels/:id/category-tree") && JWTPayloadAllKV("sub", "catalog-api")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-sales-channels-id-category-tree_GET_catalog-api", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_sales_channels_id_category_tree_rl_service_catalogapi__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sales-channels/:id/category-tree") && JWTPayloadAllKV("sub", "catalog-api")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-sales-channels-id-category-tree_GET_catalog-api", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_sales_channels_id_category_tree_rl_service_predator__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sales-channels/:id/category-tree") && JWTPayloadAllKV("sub", "predator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-sales-channels-id-category-tree_GET_predator", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_sales_channels_id_category_tree_rl_service_predator__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sales-channels/:id/category-tree") && JWTPayloadAllKV("sub", "predator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-sales-channels-id-category-tree_GET_predator", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_sales_channels_id_category_tree_rl_service_predator__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sales-channels/:id/category-tree") && JWTPayloadAllKV("sub", "predator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-sales-channels-id-category-tree_GET_predator", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_sales_channels_id_category_tree_rl_users_all__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sales-channels/:id/category-tree") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("setanta-categories-staging_api-sales-channels-id-category-tree_GET_users", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_sales_channels_id_category_tree_rl_users_all__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sales-channels/:id/category-tree") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("setanta-categories-staging_api-sales-channels-id-category-tree_GET_users", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_sales_channels_id_category_tree_rl_users_all__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sales-channels/:id/category-tree") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("setanta-categories-staging_api-sales-channels-id-category-tree_GET_users", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_admins__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/tree-details") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_admins__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/tree-details") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_admins__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/tree-details") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_id_admins__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/tree-details/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_id_admins__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/tree-details/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_id_admins__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/tree-details/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_id_rl_all__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/tree-details/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-tree-details-id_GET", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_id_rl_all__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/tree-details/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-tree-details-id_GET", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_id_rl_all__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/tree-details/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-tree-details-id_GET", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_id_rl_service_catalogapi__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/tree-details/:id") && JWTPayloadAllKV("sub", "catalog-api")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-tree-details-id_GET_catalog-api", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_id_rl_service_catalogapi__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/tree-details/:id") && JWTPayloadAllKV("sub", "catalog-api")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-tree-details-id_GET_catalog-api", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_id_rl_service_catalogapi__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/tree-details/:id") && JWTPayloadAllKV("sub", "catalog-api")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-tree-details-id_GET_catalog-api", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_id_rl_service_predator__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/tree-details/:id") && JWTPayloadAllKV("sub", "predator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-tree-details-id_GET_predator", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_id_rl_service_predator__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/tree-details/:id") && JWTPayloadAllKV("sub", "predator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-tree-details-id_GET_predator", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_id_rl_service_predator__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/tree-details/:id") && JWTPayloadAllKV("sub", "predator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-tree-details-id_GET_predator", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_rl_all__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/tree-details")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-tree-details_GET", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_rl_all__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/tree-details")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-tree-details_GET", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_rl_all__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/tree-details")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-tree-details_GET", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_rl_service_catalogapi__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/tree-details") && JWTPayloadAllKV("sub", "catalog-api")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-tree-details_GET_catalog-api", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_rl_service_catalogapi__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/tree-details") && JWTPayloadAllKV("sub", "catalog-api")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-tree-details_GET_catalog-api", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_rl_service_catalogapi__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/tree-details") && JWTPayloadAllKV("sub", "catalog-api")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-tree-details_GET_catalog-api", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_rl_service_predator__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/tree-details") && JWTPayloadAllKV("sub", "predator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-tree-details_GET_predator", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_rl_service_predator__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/tree-details") && JWTPayloadAllKV("sub", "predator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-tree-details_GET_predator", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_tree_details_rl_service_predator__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/tree-details") && JWTPayloadAllKV("sub", "predator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-tree-details_GET_predator", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_trees_id_category_tree_admins__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/trees/:id/category-tree") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_trees_id_category_tree_admins__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/trees/:id/category-tree") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_trees_id_category_tree_admins__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/trees/:id/category-tree") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_trees_id_category_tree_rl_all__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/trees/:id/category-tree")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-trees-id-category-tree_GET", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_trees_id_category_tree_rl_all__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/trees/:id/category-tree")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-trees-id-category-tree_GET", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_trees_id_category_tree_rl_all__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/trees/:id/category-tree")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-trees-id-category-tree_GET", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_trees_id_category_tree_rl_service_catalogapi__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/trees/:id/category-tree") && JWTPayloadAllKV("sub", "catalog-api")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-trees-id-category-tree_GET_catalog-api", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_trees_id_category_tree_rl_service_catalogapi__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/trees/:id/category-tree") && JWTPayloadAllKV("sub", "catalog-api")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-trees-id-category-tree_GET_catalog-api", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_trees_id_category_tree_rl_service_catalogapi__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/trees/:id/category-tree") && JWTPayloadAllKV("sub", "catalog-api")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-trees-id-category-tree_GET_catalog-api", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_trees_id_category_tree_rl_service_predator__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/trees/:id/category-tree") && JWTPayloadAllKV("sub", "predator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-trees-id-category-tree_GET_predator", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_trees_id_category_tree_rl_service_predator__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/trees/:id/category-tree") && JWTPayloadAllKV("sub", "predator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-trees-id-category-tree_GET_predator", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_api_trees_id_category_tree_rl_service_predator__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/trees/:id/category-tree") && JWTPayloadAllKV("sub", "predator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.category-trees.read")
  -> clusterClientRatelimit("setanta-categories-staging_api-trees-id-category-tree_GET_predator", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_health_admins__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_health_admins__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_health_admins__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_health_all__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_health_all__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_health_all__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_metrics_admins__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_metrics_admins__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_metrics_admins__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_metrics_all__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_metrics_all__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_get_metrics_all__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_patch_api_internal_wildcard_admins__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_patch_api_internal_wildcard_admins__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_patch_api_internal_wildcard_admins__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_patch_api_internal_wildcard_non_whitelisted__0__categories_setanta_staging_zalan_do____: Path("/api/internal/**") && Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_categories_staging_patch_api_internal_wildcard_non_whitelisted__0__setanta_categories_staging_smart_product_platform_test_zalan_do____: Path("/api/internal/**") && Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_categories_staging_patch_api_internal_wildcard_non_whitelisted__0__spp_categories_test_zalandoapis_com____: Path("/api/internal/**") && Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_categories_staging_patch_api_internal_wildcard_non_whitelisted__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_patch_api_internal_wildcard_non_whitelisted__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_patch_api_internal_wildcard_non_whitelisted__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_patch_api_internal_wildcard_service_stupscategorygatekeeper__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/**") && JWTPayloadAllKV("sub", "stups_category-gatekeeper")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_patch_api_internal_wildcard_service_stupscategorygatekeeper__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/**") && JWTPayloadAllKV("sub", "stups_category-gatekeeper")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_patch_api_internal_wildcard_service_stupscategorygatekeeper__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/**") && JWTPayloadAllKV("sub", "stups_category-gatekeeper")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_patch_api_internal_wildcard_service_stupscategorytreeui__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_patch_api_internal_wildcard_service_stupscategorytreeui__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_patch_api_internal_wildcard_service_stupscategorytreeui__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_post_api_internal_clone_admins__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/clone") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_post_api_internal_clone_admins__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/clone") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_post_api_internal_clone_admins__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/clone") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_post_api_internal_clone_all__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/clone")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.setanta_write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_post_api_internal_clone_all__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/clone")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.setanta_write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_post_api_internal_clone_all__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/clone")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.setanta_write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_post_api_internal_wildcard_admins__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_post_api_internal_wildcard_admins__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_post_api_internal_wildcard_admins__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_post_api_internal_wildcard_non_whitelisted__0__categories_setanta_staging_zalan_do____: Path("/api/internal/**") && Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_categories_staging_post_api_internal_wildcard_non_whitelisted__0__setanta_categories_staging_smart_product_platform_test_zalan_do____: Path("/api/internal/**") && Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_categories_staging_post_api_internal_wildcard_non_whitelisted__0__spp_categories_test_zalandoapis_com____: Path("/api/internal/**") && Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_categories_staging_post_api_internal_wildcard_non_whitelisted__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_post_api_internal_wildcard_non_whitelisted__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_post_api_internal_wildcard_non_whitelisted__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_post_api_internal_wildcard_service_stupscategorygatekeeper__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/**") && JWTPayloadAllKV("sub", "stups_category-gatekeeper")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_post_api_internal_wildcard_service_stupscategorygatekeeper__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/**") && JWTPayloadAllKV("sub", "stups_category-gatekeeper")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_post_api_internal_wildcard_service_stupscategorygatekeeper__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/**") && JWTPayloadAllKV("sub", "stups_category-gatekeeper")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_post_api_internal_wildcard_service_stupscategorytreeui__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_post_api_internal_wildcard_service_stupscategorytreeui__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_post_api_internal_wildcard_service_stupscategorytreeui__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_put_api_internal_categories_id_overrides_id_admins__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/categories/:id/overrides/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_put_api_internal_categories_id_overrides_id_admins__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/categories/:id/overrides/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_put_api_internal_categories_id_overrides_id_admins__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/categories/:id/overrides/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_put_api_internal_categories_id_overrides_id_all__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/categories/:id/overrides/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.setanta_write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_put_api_internal_categories_id_overrides_id_all__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/categories/:id/overrides/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.setanta_write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_put_api_internal_categories_id_overrides_id_all__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/categories/:id/overrides/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.setanta_write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_put_api_internal_wildcard_admins__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_put_api_internal_wildcard_admins__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_put_api_internal_wildcard_admins__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_put_api_internal_wildcard_non_whitelisted__0__categories_setanta_staging_zalan_do____: Path("/api/internal/**") && Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_categories_staging_put_api_internal_wildcard_non_whitelisted__0__setanta_categories_staging_smart_product_platform_test_zalan_do____: Path("/api/internal/**") && Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_categories_staging_put_api_internal_wildcard_non_whitelisted__0__spp_categories_test_zalandoapis_com____: Path("/api/internal/**") && Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_categories_staging_put_api_internal_wildcard_non_whitelisted__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_put_api_internal_wildcard_non_whitelisted__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_put_api_internal_wildcard_non_whitelisted__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_put_api_internal_wildcard_service_stupscategorygatekeeper__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/**") && JWTPayloadAllKV("sub", "stups_category-gatekeeper")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_put_api_internal_wildcard_service_stupscategorygatekeeper__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/**") && JWTPayloadAllKV("sub", "stups_category-gatekeeper")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_put_api_internal_wildcard_service_stupscategorygatekeeper__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/**") && JWTPayloadAllKV("sub", "stups_category-gatekeeper")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_put_api_internal_wildcard_service_stupscategorytreeui__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_put_api_internal_wildcard_service_stupscategorytreeui__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_put_api_internal_wildcard_service_stupscategorytreeui__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-service.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_reject_http_route__0__categories_setanta_staging_zalan_do____: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__setanta_categories_staging_reject_http_route__0__setanta_categories_staging_smart_product_platform_test_zalan_do____: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__setanta_categories_staging_reject_http_route__0__spp_categories_test_zalandoapis_com____: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__setanta_categories_staging_reject_http_route__categories_setanta_staging_zalan_do____setanta_categories_staging: Host(/^(categories[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_reject_http_route__setanta_categories_staging_smart_product_platform_test_zalan_do____setanta_categories_staging: Host(/^(setanta-categories-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_categories_staging_reject_http_route__spp_categories_test_zalandoapis_com____setanta_categories_staging: Host(/^(spp-categories-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"902817fb-e05e-4eff-ab39-ae80375a9bf0\",\"application_id\":\"setanta-categories\",\"path_templates\":[\"/api/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/category-tree\",\"/api/tree-details\",\"/api/tree-details/{tree_id}\",\"/api/trees/{tree_id}/category-tree\"]}")
  -> <roundRobin, "http://10.2.19.218:9000", "http://10.2.98.49:9000", "http://10.2.99.88:9000">;

kube_default__setanta_category_gatekeeper_default_404_route__0__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_default_404_route__0__spp_category_gatekeeper_test_pr_91_zalandoapis_com____: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_default_404_route__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_default_404_route__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_https_redirect: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_default_404_route__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_default_404_route__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_https_redirect: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_get_api_wildcard_admins__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_get_api_wildcard_admins__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_get_api_wildcard_all__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_get_api_wildcard_all__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_get_api_wildcard_users_all__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_get_api_wildcard_users_all__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_get_health_admins__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_get_health_admins__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_get_health_all__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_get_health_all__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_get_metrics_admins__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_get_metrics_admins__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_get_metrics_all__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_get_metrics_all__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_patch_api_wildcard_admins__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_patch_api_wildcard_admins__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_patch_api_wildcard_non_whitelisted__0__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____: Path("/api/**") && Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_patch_api_wildcard_non_whitelisted__0__spp_category_gatekeeper_test_pr_91_zalandoapis_com____: Path("/api/**") && Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_patch_api_wildcard_non_whitelisted__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_patch_api_wildcard_non_whitelisted__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_patch_api_wildcard_service_stupscategorytests__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_patch_api_wildcard_service_stupscategorytests__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_patch_api_wildcard_service_stupscategorytreeui__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_patch_api_wildcard_service_stupscategorytreeui__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_post_api_wildcard_admins__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_post_api_wildcard_admins__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_post_api_wildcard_non_whitelisted__0__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____: Path("/api/**") && Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_post_api_wildcard_non_whitelisted__0__spp_category_gatekeeper_test_pr_91_zalandoapis_com____: Path("/api/**") && Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_post_api_wildcard_non_whitelisted__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_post_api_wildcard_non_whitelisted__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_post_api_wildcard_service_stupscategorytests__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_post_api_wildcard_service_stupscategorytests__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_post_api_wildcard_service_stupscategorytreeui__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_post_api_wildcard_service_stupscategorytreeui__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_default_404_route__0__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_pr_91_default_404_route__0__spp_category_gatekeeper_test_pr_91_zalandoapis_com____: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_pr_91_default_404_route__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_default_404_route__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91_https_redirect: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_pr_91_default_404_route__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_default_404_route__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91_https_redirect: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_pr_91_get_api_wildcard_admins__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_get_api_wildcard_admins__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_get_api_wildcard_all__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_get_api_wildcard_all__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_get_api_wildcard_users_all__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_get_api_wildcard_users_all__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_get_health_admins__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_get_health_admins__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_get_health_all__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_get_health_all__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_get_metrics_admins__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_get_metrics_admins__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_get_metrics_all__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_get_metrics_all__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_patch_api_wildcard_admins__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_patch_api_wildcard_admins__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_patch_api_wildcard_non_whitelisted__0__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____: Path("/api/**") && Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_pr_91_patch_api_wildcard_non_whitelisted__0__spp_category_gatekeeper_test_pr_91_zalandoapis_com____: Path("/api/**") && Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_pr_91_patch_api_wildcard_non_whitelisted__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_patch_api_wildcard_non_whitelisted__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_patch_api_wildcard_service_stupscategorytests__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_patch_api_wildcard_service_stupscategorytests__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_patch_api_wildcard_service_stupscategorytreeui__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_patch_api_wildcard_service_stupscategorytreeui__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_post_api_wildcard_admins__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_post_api_wildcard_admins__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_post_api_wildcard_non_whitelisted__0__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____: Path("/api/**") && Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_pr_91_post_api_wildcard_non_whitelisted__0__spp_category_gatekeeper_test_pr_91_zalandoapis_com____: Path("/api/**") && Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_pr_91_post_api_wildcard_non_whitelisted__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_post_api_wildcard_non_whitelisted__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_post_api_wildcard_service_stupscategorytests__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_post_api_wildcard_service_stupscategorytests__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_post_api_wildcard_service_stupscategorytreeui__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_post_api_wildcard_service_stupscategorytreeui__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_put_api_wildcard_admins__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_put_api_wildcard_admins__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_put_api_wildcard_non_whitelisted__0__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____: Path("/api/**") && Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_pr_91_put_api_wildcard_non_whitelisted__0__spp_category_gatekeeper_test_pr_91_zalandoapis_com____: Path("/api/**") && Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_pr_91_put_api_wildcard_non_whitelisted__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_put_api_wildcard_non_whitelisted__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_put_api_wildcard_service_stupscategorytests__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_put_api_wildcard_service_stupscategorytests__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_put_api_wildcard_service_stupscategorytreeui__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_put_api_wildcard_service_stupscategorytreeui__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_reject_http_route__0__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_pr_91_reject_http_route__0__spp_category_gatekeeper_test_pr_91_zalandoapis_com____: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_pr_91_reject_http_route__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper_pr_91: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_pr_91_reject_http_route__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper_pr_91: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_put_api_wildcard_admins__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_put_api_wildcard_admins__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_put_api_wildcard_non_whitelisted__0__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____: Path("/api/**") && Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_put_api_wildcard_non_whitelisted__0__spp_category_gatekeeper_test_pr_91_zalandoapis_com____: Path("/api/**") && Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_put_api_wildcard_non_whitelisted__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_put_api_wildcard_non_whitelisted__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_put_api_wildcard_service_stupscategorytests__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_put_api_wildcard_service_stupscategorytests__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_put_api_wildcard_service_stupscategorytreeui__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_put_api_wildcard_service_stupscategorytreeui__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "category-gatekeeper.categories.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_reject_http_route__0__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_reject_http_route__0__spp_category_gatekeeper_test_pr_91_zalandoapis_com____: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__setanta_category_gatekeeper_reject_http_route__category_gatekeeper_pr_91_smart_product_platform_test_zalan_do____setanta_category_gatekeeper: Host(/^(category-gatekeeper-pr-91[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_category_gatekeeper_reject_http_route__spp_category_gatekeeper_test_pr_91_zalandoapis_com____setanta_category_gatekeeper: Host(/^(spp-category-gatekeeper-test-pr-91[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.213.233:9000";

kube_default__setanta_rules_staging_default_404_route__0__rules_setanta_staging_zalan_do____: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__setanta_rules_staging_default_404_route__0__setanta_rules_staging_smart_product_platform_test_zalan_do____: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__setanta_rules_staging_default_404_route__0__spp_rules_test_zalandoapis_com____: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__setanta_rules_staging_default_404_route__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_default_404_route__rules_setanta_staging_zalan_do____setanta_rules_staging_https_redirect: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__setanta_rules_staging_default_404_route__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_default_404_route__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging_https_redirect: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__setanta_rules_staging_default_404_route__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_default_404_route__spp_rules_test_zalandoapis_com____setanta_rules_staging_https_redirect: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__setanta_rules_staging_get_api_wildcard_admins__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_get_api_wildcard_admins__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_get_api_wildcard_admins__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_get_api_wildcard_all__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "enrichment-rules-store.rules.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_get_api_wildcard_all__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "enrichment-rules-store.rules.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_get_api_wildcard_all__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "enrichment-rules-store.rules.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_get_health_admins__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_get_health_admins__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_get_health_admins__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_get_health_all__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_get_health_all__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_get_health_all__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_get_metrics_admins__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_get_metrics_admins__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_get_metrics_admins__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_get_metrics_all__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_get_metrics_all__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_get_metrics_all__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_head_api_wildcard_admins__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_head_api_wildcard_admins__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_head_api_wildcard_admins__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_head_api_wildcard_all__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "enrichment-rules-store.rules.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_head_api_wildcard_all__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "enrichment-rules-store.rules.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_head_api_wildcard_all__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "enrichment-rules-store.rules.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_clone_admins__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/clone") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_clone_admins__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/clone") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_clone_admins__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/clone") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_clone_all__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/clone")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "enrichment-rules-store.rules.setanta_write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_clone_all__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/clone")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "enrichment-rules-store.rules.setanta_write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_clone_all__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/clone")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "enrichment-rules-store.rules.setanta_write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_internal_side_effect_migration_admins__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/side-effect-migration") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_internal_side_effect_migration_admins__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/side-effect-migration") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_internal_side_effect_migration_admins__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/side-effect-migration") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_internal_side_effect_migration_all__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/side-effect-migration")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "enrichment-rules-store.rules.setanta_write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_internal_side_effect_migration_all__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/side-effect-migration")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "enrichment-rules-store.rules.setanta_write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_internal_side_effect_migration_all__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/side-effect-migration")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "enrichment-rules-store.rules.setanta_write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_wildcard_admins__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_wildcard_admins__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_wildcard_admins__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_wildcard_non_whitelisted__0__rules_setanta_staging_zalan_do____: Path("/api/**") && Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_rules_staging_post_api_wildcard_non_whitelisted__0__setanta_rules_staging_smart_product_platform_test_zalan_do____: Path("/api/**") && Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_rules_staging_post_api_wildcard_non_whitelisted__0__spp_rules_test_zalandoapis_com____: Path("/api/**") && Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_rules_staging_post_api_wildcard_non_whitelisted__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_wildcard_non_whitelisted__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_wildcard_non_whitelisted__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_wildcard_service_stupscategorytreeui__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "enrichment-rules-store.rules.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_wildcard_service_stupscategorytreeui__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "enrichment-rules-store.rules.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_post_api_wildcard_service_stupscategorytreeui__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "enrichment-rules-store.rules.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_put_api_wildcard_admins__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_put_api_wildcard_admins__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_put_api_wildcard_admins__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_put_api_wildcard_non_whitelisted__0__rules_setanta_staging_zalan_do____: Path("/api/**") && Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_rules_staging_put_api_wildcard_non_whitelisted__0__setanta_rules_staging_smart_product_platform_test_zalan_do____: Path("/api/**") && Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_rules_staging_put_api_wildcard_non_whitelisted__0__spp_rules_test_zalandoapis_com____: Path("/api/**") && Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_rules_staging_put_api_wildcard_non_whitelisted__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_put_api_wildcard_non_whitelisted__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_put_api_wildcard_non_whitelisted__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_put_api_wildcard_service_stupscategorytreeui__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "enrichment-rules-store.rules.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_put_api_wildcard_service_stupscategorytreeui__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "enrichment-rules-store.rules.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_put_api_wildcard_service_stupscategorytreeui__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/**") && JWTPayloadAllKV("sub", "stups_category-tree-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "enrichment-rules-store.rules.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_reject_http_route__0__rules_setanta_staging_zalan_do____: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__setanta_rules_staging_reject_http_route__0__setanta_rules_staging_smart_product_platform_test_zalan_do____: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__setanta_rules_staging_reject_http_route__0__spp_rules_test_zalandoapis_com____: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__setanta_rules_staging_reject_http_route__rules_setanta_staging_zalan_do____setanta_rules_staging: Host(/^(rules[.]setanta-staging[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_reject_http_route__setanta_rules_staging_smart_product_platform_test_zalan_do____setanta_rules_staging: Host(/^(setanta-rules-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_rules_staging_reject_http_route__spp_rules_test_zalandoapis_com____setanta_rules_staging: Host(/^(spp-rules-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"8cdf7f38-1b18-11e8-accf-0ed5f89f718b\",\"application_id\":\"setanta-rules\",\"path_templates\":[\"/api/clone\",\"/api/rules\",\"/api/rules/{rule_id}\",\"/api/rules/{rule_id}/shared\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}\",\"/api/sales-channels/{sales_channel_id}/categories/{category_id}/flatten\",\"/api/sales-channels/{sales_channel_id}/rules\",\"/api/trees/{tree_id}/rules\"]}")
  -> <roundRobin, "http://10.2.249.54:9000", "http://10.2.64.47:9000", "http://10.2.83.237:9000">;

kube_default__setanta_spp_orchestrator_staging_default_404_route__0__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__setanta_spp_orchestrator_staging_default_404_route__0__spp_orchestrator_test_zalandoapis_com____: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__setanta_spp_orchestrator_staging_default_404_route__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_default_404_route__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging_https_redirect: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__setanta_spp_orchestrator_staging_default_404_route__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_default_404_route__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging_https_redirect: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_admins__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "lcrowe", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_admins__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "lcrowe", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_non_whitelisted__0__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____: Path("/.well-known/schema-discovery") && Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_non_whitelisted__0__spp_orchestrator_test_zalandoapis_com____: Path("/.well-known/schema-discovery") && Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_non_whitelisted__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_non_whitelisted__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupsbeatbackendlegacystaging__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupsbeatbackendlegacystaging__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupsbuyingarticlesrelease__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupsbuyingarticlesrelease__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupscatalogservice__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupscatalogservice__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupscatalogtests__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupscatalogtests__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupsdeploymentdiscovery__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupsdeploymentdiscovery__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupsplanetexpresslocaltokenretriever__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupsplanetexpresslocaltokenretriever__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupsplatformminuetrelease__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupsplatformminuetrelease__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupssetantadeploy__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupssetantadeploy__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupsspporchestrator__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupsspporchestrator__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupssppproductintegration__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_spp-product-integration")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get__well_known_schema_discovery_service_stupssppproductintegration__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_spp-product-integration")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_admins__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/products/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "lcrowe", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_admins__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/products/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "lcrowe", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_non_whitelisted__0__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____: Path("/products/**") && Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_non_whitelisted__0__spp_orchestrator_test_zalandoapis_com____: Path("/products/**") && Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_non_whitelisted__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_non_whitelisted__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupsbeatbackendlegacystaging__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupsbeatbackendlegacystaging__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupsbuyingarticlesrelease__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupsbuyingarticlesrelease__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupscatalogservice__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupscatalogservice__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupscatalogtests__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupscatalogtests__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupsdeploymentdiscovery__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupsdeploymentdiscovery__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupsplanetexpresslocaltokenretriever__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupsplanetexpresslocaltokenretriever__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupsplatformminuetrelease__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupsplatformminuetrelease__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupssetantadeploy__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupssetantadeploy__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupsspporchestrator__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupsspporchestrator__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupssppproductintegration__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_spp-product-integration")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_products_wildcard_service_stupssppproductintegration__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_spp-product-integration")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_admins__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/swagger.json") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "lcrowe", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_admins__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/swagger.json") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "lcrowe", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_non_whitelisted__0__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____: Path("/swagger.json") && Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_non_whitelisted__0__spp_orchestrator_test_zalandoapis_com____: Path("/swagger.json") && Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_non_whitelisted__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_non_whitelisted__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupsbeatbackendlegacystaging__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupsbeatbackendlegacystaging__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupsbuyingarticlesrelease__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupsbuyingarticlesrelease__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupscatalogservice__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupscatalogservice__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupscatalogtests__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupscatalogtests__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupsdeploymentdiscovery__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupsdeploymentdiscovery__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupsplanetexpresslocaltokenretriever__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupsplanetexpresslocaltokenretriever__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupsplatformminuetrelease__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupsplatformminuetrelease__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupssetantadeploy__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupssetantadeploy__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupsspporchestrator__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupsspporchestrator__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupssppproductintegration__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_spp-product-integration")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_json_service_stupssppproductintegration__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_spp-product-integration")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_admins__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/swagger.yaml") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "lcrowe", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_admins__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/swagger.yaml") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "lcrowe", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_non_whitelisted__0__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____: Path("/swagger.yaml") && Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_non_whitelisted__0__spp_orchestrator_test_zalandoapis_com____: Path("/swagger.yaml") && Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_non_whitelisted__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_non_whitelisted__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupsbeatbackendlegacystaging__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupsbeatbackendlegacystaging__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupsbuyingarticlesrelease__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupsbuyingarticlesrelease__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupscatalogservice__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupscatalogservice__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupscatalogtests__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupscatalogtests__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupsdeploymentdiscovery__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupsdeploymentdiscovery__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupsplanetexpresslocaltokenretriever__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupsplanetexpresslocaltokenretriever__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupsplatformminuetrelease__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupsplatformminuetrelease__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupssetantadeploy__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupssetantadeploy__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupsspporchestrator__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupsspporchestrator__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupssppproductintegration__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_spp-product-integration")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_get_swagger_yaml_service_stupssppproductintegration__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_spp-product-integration")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_admins__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/products/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "lcrowe", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_admins__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/products/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "lcrowe", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_non_whitelisted__0__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____: Path("/products/**") && Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_non_whitelisted__0__spp_orchestrator_test_zalandoapis_com____: Path("/products/**") && Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_non_whitelisted__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_non_whitelisted__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupsbeatbackendlegacystaging__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupsbeatbackendlegacystaging__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupsbuyingarticlesrelease__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupsbuyingarticlesrelease__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupscatalogservice__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupscatalogservice__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupscatalogtests__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupscatalogtests__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupsdeploymentdiscovery__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupsdeploymentdiscovery__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupsplanetexpresslocaltokenretriever__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupsplanetexpresslocaltokenretriever__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupsplatformminuetrelease__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupsplatformminuetrelease__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupssetantadeploy__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupssetantadeploy__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupsspporchestrator__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupsspporchestrator__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupssppproductintegration__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_spp-product-integration")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_post_products_wildcard_service_stupssppproductintegration__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_spp-product-integration")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_reject_http_route__0__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__setanta_spp_orchestrator_staging_reject_http_route__0__spp_orchestrator_test_zalandoapis_com____: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__setanta_spp_orchestrator_staging_reject_http_route__setanta_spp_orchestrator_staging_smart_product_platform_test_zalan_do____setanta_spp_orchestrator_staging: Host(/^(setanta-spp-orchestrator-staging[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__setanta_spp_orchestrator_staging_reject_http_route__spp_orchestrator_test_zalandoapis_com____setanta_spp_orchestrator_staging: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__skipper_perf_test_default_404_route__0__skipper_perf_test_smart_product_platform_test_zalan_do____: Host(/^(skipper-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__skipper_perf_test_default_404_route__skipper_perf_test_smart_product_platform_test_zalan_do____skipper_perf_test: Host(/^(skipper-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__skipper_perf_test_default_404_route__skipper_perf_test_smart_product_platform_test_zalan_do____skipper_perf_test_https_redirect: Host(/^(skipper-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__skipper_perf_test_get_resources_admins__skipper_perf_test_smart_product_platform_test_zalan_do____skipper_perf_test: Host(/^(skipper-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/resources") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "bmooney")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__skipper_perf_test_get_resources_all__skipper_perf_test_smart_product_platform_test_zalan_do____skipper_perf_test: Host(/^(skipper-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/resources")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__skipper_perf_test_reject_http_route__0__skipper_perf_test_smart_product_platform_test_zalan_do____: Host(/^(skipper-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__skipper_perf_test_reject_http_route__skipper_perf_test_smart_product_platform_test_zalan_do____skipper_perf_test: Host(/^(skipper-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__slow_backend__slow_backend_smart_product_platform_test_zalan_do____slow_backend: Host(/^(slow-backend[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__slow_backend__slow_backend_smart_product_platform_test_zalan_do____slow_backend_https_redirect: Host(/^(slow-backend[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_default_404_route__0__spp_product_details_smart_product_platform_test_zalan_do____: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_default_404_route__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_default_404_route__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test_https_redirect: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_delete_issues_id_admins__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/issues/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "assassins")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_delete_issues_id_non_whitelisted__0__spp_product_details_smart_product_platform_test_zalan_do____: Path("/issues/:id") && Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_delete_issues_id_non_whitelisted__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_delete_issues_id_service_stupssomeservicename__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/issues/:id") && JWTPayloadAllKV("sub", "stups_some-service-name")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "smart-product-platform-test.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_get_apps_id_admins__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/apps/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "assassins")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_get_apps_id_all__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/apps/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "smart-product-platform-test.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_get_hello_admins__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/hello") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "assassins")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_get_hello_all__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/hello")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_get_issues_id_admins__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/issues/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "assassins")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_get_issues_id_all__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/issues/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "smart-product-platform-test.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_get_issues_id_users_all__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/issues/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_post_issues_admins__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/issues") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "assassins")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_post_issues_rl_all__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/issues")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "smart-product-platform-test.write")
  -> clusterClientRatelimit("smart-product-platform-test-gateway_issues_POST", 10, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_post_issues_rl_service_stupssomeservicename__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/issues") && JWTPayloadAllKV("sub", "stups_some-service-name")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "smart-product-platform-test.write")
  -> clusterClientRatelimit("smart-product-platform-test-gateway_issues_POST_stups_some-service-name", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_put_issues_id_admins__0__spp_product_details_smart_product_platform_test_zalan_do____: Path("/issues/:id") && Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "assassins")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> setResponseHeader("Content-Type", "application/problem+json")
  -> status(501)
  -> inlineContent("{\"title\": \"Issues Updates Not Yet Supported\", \"status\": 501}")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_put_issues_id_admins__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_put_issues_id_all__0__spp_product_details_smart_product_platform_test_zalan_do____: Path("/issues/:id") && Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> setResponseHeader("Content-Type", "application/problem+json")
  -> status(501)
  -> inlineContent("{\"title\": \"Issues Updates Not Yet Supported\", \"status\": 501}")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_put_issues_id_all__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_reject_http_route__0__spp_product_details_smart_product_platform_test_zalan_do____: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_reject_http_route__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_brand_service_default_404_route__0__spp_brand_data_test_zalandoapis_com____: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_default_404_route__0__spp_brand_service_smart_product_platform_test_zalan_do____: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_default_404_route__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_default_404_route__spp_brand_data_test_zalandoapis_com____spp_brand_service_https_redirect: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_brand_service_default_404_route__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_default_404_route__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service_https_redirect: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_brand_service_delete_api_brand_assignments_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-assignments/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brand_assignments_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-assignments/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brand_assignments_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-assignments/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments-id_DELETE", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brand_assignments_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-assignments/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments-id_DELETE", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brand_assignments_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-assignments/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments-id_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brand_assignments_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-assignments/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments-id_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brand_families_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-families/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brand_families_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-families/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brand_families_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-families/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_DELETE", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brand_families_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-families/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_DELETE", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brand_families_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-families/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brand_families_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-families/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_media_default_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/default") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_media_default_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/default") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_media_default_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media/default")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_DELETE", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_media_default_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media/default")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_DELETE", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_media_default_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/default") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_media_default_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/default") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_media_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_media_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_media_id_non_whitelisted__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_delete_api_brands_id_media_id_non_whitelisted__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_delete_api_brands_id_media_id_non_whitelisted__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_media_id_non_whitelisted__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_media_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_media_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_non_whitelisted__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_delete_api_brands_id_non_whitelisted__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_delete_api_brands_id_non_whitelisted__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_non_whitelisted__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_assignments_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-assignments/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_assignments_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-assignments/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_assignments_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-assignments/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments-id_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_assignments_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-assignments/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments-id_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_assignments_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-assignments/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments-id_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_assignments_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-assignments/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments-id_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_families_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-families") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_families_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-families") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_families_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-families/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_families_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-families/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_families_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-families/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_families_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-families/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_families_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-families/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_families_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-families/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_families_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-families")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_families_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-families")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_families_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-families") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_families_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-families") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_default_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/default") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_default_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/default") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_default_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media/default")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_default_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media/default")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_default_rl_service_stupsbrandserviceui__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/default") && JWTPayloadAllKV("sub", "stups_brand-service-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_GET_stups_brand-service-ui", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_default_rl_service_stupsbrandserviceui__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/default") && JWTPayloadAllKV("sub", "stups_brand-service-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_GET_stups_brand-service-ui", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_default_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/default") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_default_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/default") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_id_content_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/:id/content") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_id_content_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/:id/content") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_id_content_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media/:id/content")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id-content_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_id_content_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media/:id/content")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id-content_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_id_content_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/:id/content") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id-content_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_id_content_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/:id/content") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id-content_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET", 600, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET", 600, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_rl_service_stupsbrandserviceui__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_brand-service-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_brand-service-ui", 800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_rl_service_stupsbrandserviceui__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_brand-service-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_brand-service-ui", 800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_rl_service_stupsspaceballsdabo__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_spaceballs-dabo")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_spaceballs-dabo", 800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_rl_service_stupsspaceballsdabo__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_spaceballs-dabo")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_spaceballs-dabo", 800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_rl_service_stupsspppdpurlkeygenerator__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_spp-pdp-url-key-generator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_spp-pdp-url-key-generator", 6000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_rl_service_stupsspppdpurlkeygenerator__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_spp-pdp-url-key-generator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_spp-pdp-url-key-generator", 6000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_rl_service_stupsuseraccountpreferences__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_user-account-preferences")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_user-account-preferences", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_rl_service_stupsuseraccountpreferences__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_user-account-preferences")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_user-account-preferences", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_media_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/media") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_media_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/media") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_media_categories_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/media-categories") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_media_categories_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/media-categories") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_media_categories_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/media-categories")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-media-categories_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_media_categories_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/media-categories")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-media-categories_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_media_categories_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/media-categories") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-media-categories_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_media_categories_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/media-categories") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-media-categories_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_media_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/media")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-media_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_media_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/media")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-media_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_media_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/media") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-media_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_media_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/media") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-media_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_health_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_health_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_health_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_health_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_metrics_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_metrics_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_metrics_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_metrics_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_head_api_brands_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_head_api_brands_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_head_api_brands_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_HEAD", 600, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_head_api_brands_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_HEAD", 600, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_head_api_brands_id_rl_service_stupsfrauddetectionbackend__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_fraud-detection-backend")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_HEAD_stups_fraud-detection-backend", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_head_api_brands_id_rl_service_stupsfrauddetectionbackend__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_fraud-detection-backend")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_HEAD_stups_fraud-detection-backend", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_head_api_brands_id_rl_service_stupszalos__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_zalos")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_HEAD_stups_zalos", 24000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_head_api_brands_id_rl_service_stupszalos__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_zalos")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_HEAD_stups_zalos", 24000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brand_assignments_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brand-assignments") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_assignments_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brand-assignments") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_assignments_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brand_assignments_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brand_assignments_id_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brand-assignments/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "DELETE, GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_assignments_id_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brand-assignments/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "DELETE, GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_assignments_id_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brand_assignments_id_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brand_collections_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brand-collections") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_collections_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brand-collections") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_collections_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brand_collections_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brand_families_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brand-families") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_families_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brand-families") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_families_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brand_families_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brand_families_id_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brand-families/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "PATCH, OPTIONS, PUT, GET, DELETE")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_families_id_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brand-families/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "PATCH, OPTIONS, PUT, GET, DELETE")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_families_id_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brand_families_id_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brand_family_collections_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brand-family-collections") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_family_collections_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brand-family-collections") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_family_collections_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brand_family_collections_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brands_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brands") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brands_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brands_id_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "PATCH, HEAD, OPTIONS, PUT, GET, DELETE")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "PATCH, HEAD, OPTIONS, PUT, GET, DELETE")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brands_id_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brands_id_media_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brands/:id/media") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_media_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands/:id/media") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_media_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brands_id_media_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brands_id_media_default_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "DELETE, GET, PUT, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_media_default_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "DELETE, GET, PUT, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_media_default_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brands_id_media_default_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brands_id_media_id_content_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brands/:id/media/:id/content") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_media_id_content_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands/:id/media/:id/content") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_media_id_content_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brands_id_media_id_content_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brands_id_media_id_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "PATCH, OPTIONS, PUT, GET, DELETE")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_media_id_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "PATCH, OPTIONS, PUT, GET, DELETE")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_media_id_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brands_id_media_id_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_media_categories_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/media-categories") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_media_categories_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/media-categories") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_media_categories_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_media_categories_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_media_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/media") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_media_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/media") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_media_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_media_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_cache_refresh_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/cache-refresh") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_cache_refresh_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/cache-refresh") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_cache_refresh_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_cache_refresh_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_health_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/health") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_health_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/health") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_health_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_health_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_metrics_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/metrics") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_metrics_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/metrics") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_metrics_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_metrics_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brand_families_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-families/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brand_families_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-families/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brand_families_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-families/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_PATCH", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brand_families_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-families/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_PATCH", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brand_families_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-families/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_PATCH_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brand_families_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-families/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_PATCH_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brands_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brands_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brands_id_media_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brands_id_media_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brands_id_media_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_PATCH", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brands_id_media_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_PATCH", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brands_id_media_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_PATCH_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brands_id_media_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_PATCH_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brands_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_PATCH", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brands_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_PATCH", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brands_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_PATCH_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brands_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_PATCH_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_assignments_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-assignments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_assignments_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-assignments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_assignments_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-assignments")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_assignments_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-assignments")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_assignments_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-assignments") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_assignments_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-assignments") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_collections_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-collections") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_collections_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-collections") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_collections_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-collections")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-collections_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_collections_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-collections")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-collections_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_collections_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-collections") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-collections_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_collections_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-collections") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-collections_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_families_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-families") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_families_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-families") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_families_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-families")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_families_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-families")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_families_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-families") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_families_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-families") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_family_collections_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-family-collections") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_family_collections_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-family-collections") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_family_collections_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-family-collections")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-family-collections_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_family_collections_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-family-collections")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-family-collections_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_family_collections_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-family-collections") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-family-collections_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_family_collections_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-family-collections") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-family-collections_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brands_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brands_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brands_id_media_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brands_id_media_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brands_id_media_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brands_id_media_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brands_id_media_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brands_id_media_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brands_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brands_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brands_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brands_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_cache_refresh_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/cache-refresh") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_cache_refresh_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/cache-refresh") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_cache_refresh_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/cache-refresh")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_cache_refresh_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/cache-refresh")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brand_families_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-families/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brand_families_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-families/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brand_families_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-families/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_PUT", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brand_families_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-families/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_PUT", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brand_families_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-families/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_PUT_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brand_families_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-families/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_PUT_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_default_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/default") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_default_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/default") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_default_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media/default")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_PUT", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_default_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media/default")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_PUT", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_default_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/default") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_PUT_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_default_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/default") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_PUT_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_default_rl_service_stupsuseraccountpreferences__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/default") && JWTPayloadAllKV("sub", "stups_user-account-preferences")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_PUT_stups_user-account-preferences", 90, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_default_rl_service_stupsuseraccountpreferences__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/default") && JWTPayloadAllKV("sub", "stups_user-account-preferences")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_PUT_stups_user-account-preferences", 90, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_id_non_whitelisted__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_put_api_brands_id_media_id_non_whitelisted__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_put_api_brands_id_media_id_non_whitelisted__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_id_non_whitelisted__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_PUT_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_PUT_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_PUT", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_PUT", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_PUT_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_PUT_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_reject_http_route__0__spp_brand_data_test_zalandoapis_com____: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_reject_http_route__0__spp_brand_service_smart_product_platform_test_zalan_do____: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_reject_http_route__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_reject_http_route__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_builk_updater_ui__spp_builk_updater_ui_smart_product_platform_test_zalan_do____spp_builk_updater_ui_pr_1_3: Host(/^(spp-builk-updater-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.19.224:8080";

kube_default__spp_builk_updater_ui__spp_builk_updater_ui_smart_product_platform_test_zalan_do____spp_builk_updater_ui_pr_1_3_https_redirect: Host(/^(spp-builk-updater-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_builk_updater_ui_pr_1_3__spp_builk_updater_ui_pr_1_3_smart_product_platform_test_zalan_do____spp_builk_updater_ui_pr_1_3: Host(/^(spp-builk-updater-ui-pr-1-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.19.224:8080";

kube_default__spp_builk_updater_ui_pr_1_3__spp_builk_updater_ui_pr_1_3_smart_product_platform_test_zalan_do____spp_builk_updater_ui_pr_1_3_https_redirect: Host(/^(spp-builk-updater-ui-pr-1-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_bulk_updater_default_404_route__0__spp_bulk_updater_smart_product_platform_test_zalan_do____: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_bulk_updater_default_404_route__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_default_404_route__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater_https_redirect: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_bulk_updater_delete_api_jobs_job_id_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/:job_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_delete_api_jobs_job_id_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/:job_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.admin-job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_delete_api_jobs_job_id_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/:job_id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_api_admin_jobs_state_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/admin/jobs/state") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_api_admin_jobs_state_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/admin/jobs/state")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.admin.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_api_admin_jobs_state_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/admin/jobs/state") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_api_jobs_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_api_jobs_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_api_jobs_job_id_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/:job_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_api_jobs_job_id_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/:job_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_api_jobs_job_id_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/:job_id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_api_jobs_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_api_reports_job_id_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/reports/:job_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_api_reports_job_id_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/reports/:job_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_api_reports_job_id_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/reports/:job_id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_api_request_payloads_job_id_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/request-payloads/:job_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_api_request_payloads_job_id_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/request-payloads/:job_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_api_request_payloads_job_id_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/request-payloads/:job_id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_api_templates_template_id_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/templates/:template_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_api_templates_template_id_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/templates/:template_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_api_templates_template_id_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/templates/:template_id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_job_details_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/job-details") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_job_details_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/job-details")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "restricted-to-admins")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_get_job_details_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/job-details") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_patch_api_admin_jobs_state_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/admin/jobs/state") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_patch_api_admin_jobs_state_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/admin/jobs/state")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.admin.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_patch_api_admin_jobs_state_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/admin/jobs/state") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_beauty_beauty_config_voc_updates_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/beauty/beauty-config-voc-updates") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_beauty_beauty_config_voc_updates_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/beauty/beauty-config-voc-updates")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_beauty_beauty_config_voc_updates_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/beauty/beauty-config-voc-updates") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_beauty_beauty_expiry_type_updates_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/beauty/beauty-expiry-type-updates") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_beauty_beauty_expiry_type_updates_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/beauty/beauty-expiry-type-updates")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_beauty_beauty_expiry_type_updates_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/beauty/beauty-expiry-type-updates") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_beauty_beauty_simple_voc_updates_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/beauty/beauty-simple-voc-updates") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_beauty_beauty_simple_voc_updates_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/beauty/beauty-simple-voc-updates")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_beauty_beauty_simple_voc_updates_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/beauty/beauty-simple-voc-updates") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_content_creations_attributes_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/content-creations/attributes") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_content_creations_attributes_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/content-creations/attributes")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_content_creations_attributes_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/content-creations/attributes") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_content_creations_retrieve_translations_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/content-creations/retrieve-translations") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_content_creations_retrieve_translations_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/content-creations/retrieve-translations")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_content_creations_retrieve_translations_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/content-creations/retrieve-translations") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_content_creations_translations_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/content-creations/translations") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_content_creations_translations_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/content-creations/translations")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_content_creations_translations_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/content-creations/translations") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_customs_country_of_origin_updates_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/customs/country-of-origin-updates") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_customs_country_of_origin_updates_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/customs/country-of-origin-updates")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_customs_country_of_origin_updates_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/customs/country-of-origin-updates") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_customs_ctn_updates_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/customs/ctn-updates") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_customs_ctn_updates_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/customs/ctn-updates")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_customs_ctn_updates_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/customs/ctn-updates") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_customs_preferential_countries_updates_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/customs/preferential-countries-updates") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_customs_preferential_countries_updates_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/customs/preferential-countries-updates")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_customs_preferential_countries_updates_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/customs/preferential-countries-updates") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_frontend_operations_article_updates_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/frontend-operations/article-updates") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_frontend_operations_article_updates_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/frontend-operations/article-updates")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_frontend_operations_article_updates_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/frontend-operations/article-updates") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_logistics_receive_blocked_updates_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/logistics/receive-blocked-updates") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_logistics_receive_blocked_updates_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/logistics/receive-blocked-updates")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_logistics_receive_blocked_updates_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/logistics/receive-blocked-updates") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_lounge_attributes_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/lounge/attributes") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_lounge_attributes_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/lounge/attributes")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_lounge_attributes_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/lounge/attributes") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_patches_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/patches") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_patches_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/patches")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.admin-job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_patches_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/patches") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_restricted_release_enrichment_updates_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/restricted-release/enrichment-updates") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_restricted_release_enrichment_updates_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/restricted-release/enrichment-updates")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_restricted_release_enrichment_updates_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/restricted-release/enrichment-updates") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_restricted_release_product_updates_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/restricted-release/product-updates") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_restricted_release_product_updates_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/restricted-release/product-updates")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_restricted_release_product_updates_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/restricted-release/product-updates") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_retail_operations_support_attributes_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/retail-operations-support/attributes") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_retail_operations_support_attributes_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/retail-operations-support/attributes")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_retail_operations_support_attributes_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/retail-operations-support/attributes") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_retail_operations_support_initial_season_code_updates_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/retail-operations-support/initial-season-code-updates") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_retail_operations_support_initial_season_code_updates_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/retail-operations-support/initial-season-code-updates")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_retail_operations_support_initial_season_code_updates_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/retail-operations-support/initial-season-code-updates") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_retail_operations_support_product_status_updates_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/retail-operations-support/product-status-updates") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_retail_operations_support_product_status_updates_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/retail-operations-support/product-status-updates")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_retail_operations_support_product_status_updates_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/retail-operations-support/product-status-updates") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_sizing_migration_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/sizing/migration") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_sizing_migration_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/sizing/migration")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_sizing_migration_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/sizing/migration") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_steering_exclusive_flag_updates_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/steering/exclusive-flag-updates") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_steering_exclusive_flag_updates_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/steering/exclusive-flag-updates")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_steering_exclusive_flag_updates_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/steering/exclusive-flag-updates") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_sustainability_article_updates_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/sustainability/article-updates") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_sustainability_article_updates_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/sustainability/article-updates")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_sustainability_article_updates_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/sustainability/article-updates") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_taskforce_article_config_color_updates_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/taskforce/article-config-color-updates") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_taskforce_article_config_color_updates_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/taskforce/article-config-color-updates")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_taskforce_article_config_color_updates_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/taskforce/article-config-color-updates") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_taskforce_article_simple_size_updates_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/taskforce/article-simple-size-updates") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_taskforce_article_simple_size_updates_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/taskforce/article-simple-size-updates")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_taskforce_article_simple_size_updates_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/taskforce/article-simple-size-updates") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_zdirect_article_config_updates_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/zdirect/article-config-updates") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_zdirect_article_config_updates_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/zdirect/article-config-updates")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_zdirect_article_config_updates_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/zdirect/article-config-updates") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_zdirect_article_model_updates_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/zdirect/article-model-updates") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_zdirect_article_model_updates_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/zdirect/article-model-updates")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_zdirect_article_model_updates_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/zdirect/article-model-updates") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_zdirect_article_simple_updates_admins__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/jobs/zdirect/article-simple-updates") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_zdirect_article_simple_updates_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/jobs/zdirect/article-simple-updates")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-bulk-updater.job.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_post_api_jobs_zdirect_article_simple_updates_users_all__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/jobs/zdirect/article-simple-updates") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "opolosin", "https://identity.zalando.com/managed-id", "adudoladov", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "bcullen", "https://identity.zalando.com/managed-id", "enewman", "https://identity.zalando.com/managed-id", "kseyitogulla")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> tee("https://made-up-svc.smart-product-platform-test.zalan.do")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_reject_http_route__0__spp_bulk_updater_smart_product_platform_test_zalan_do____: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_bulk_updater_reject_http_route__spp_bulk_updater_smart_product_platform_test_zalan_do____spp_bulk_updater: Host(/^(spp-bulk-updater[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"2933cabf-8fb9-438d-8836-e705d711c3ef\",\"application_id\":\"spp-bulk-updater\",\"path_templates\":[\"/api/jobs\",\"/api/jobs/beauty/beauty-config-voc-updates\",\"/api/jobs/beauty/beauty-expiry-type-updates\",\"/api/jobs/beauty/beauty-simple-voc-updates\",\"/api/jobs/content-creations/attributes\",\"/api/jobs/content-creations/retrieve-translations\",\"/api/jobs/content-creations/translations\",\"/api/jobs/customs/country-of-origin-updates\",\"/api/jobs/customs/ctn-updates\",\"/api/jobs/customs/preferential-countries-updates\",\"/api/jobs/frontend-operations/article-updates\",\"/api/jobs/logistics/receive-blocked-updates\",\"/api/jobs/lounge/attributes\",\"/api/jobs/patches\",\"/api/jobs/restricted-release/enrichment-updates\",\"/api/jobs/restricted-release/product-updates\",\"/api/jobs/retail-operations-support/attributes\",\"/api/jobs/retail-operations-support/initial-season-code-updates\",\"/api/jobs/retail-operations-support/product-status-updates\",\"/api/jobs/sizing/migration\",\"/api/jobs/steering/exclusive-flag-updates\",\"/api/jobs/sustainability/article-updates\",\"/api/jobs/taskforce/article-config-color-updates\",\"/api/jobs/taskforce/article-simple-size-updates\",\"/api/jobs/zdirect/article-config-updates\",\"/api/jobs/zdirect/article-model-updates\",\"/api/jobs/zdirect/article-simple-updates\",\"/api/jobs/{job_id}\",\"/api/reports/{job_id}\",\"/api/request-payloads/{job_id}\",\"/api/templates/{template_id}\"]}")
  -> <roundRobin, "http://10.2.1.238:8080", "http://10.2.14.156:8080", "http://10.2.99.89:8080">;

kube_default__spp_bulk_updater_ui__spp_bulk_updater_ui_smart_product_platform_test_zalan_do____spp_bulk_updater_ui_master_56: Host(/^(spp-bulk-updater-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.19.225:8080";

kube_default__spp_bulk_updater_ui__spp_bulk_updater_ui_smart_product_platform_test_zalan_do____spp_bulk_updater_ui_master_56_https_redirect: Host(/^(spp-bulk-updater-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true") && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_bulk_updater_ui_canary__spp_bulk_updater_ui_smart_product_platform_test_zalan_do____spp_bulk_updater_ui_master_56: Host(/^(spp-bulk-updater-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("x-zalando-coldbrew-canary", "true") && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.19.225:8080";

kube_default__spp_bulk_updater_ui_canary__spp_bulk_updater_ui_smart_product_platform_test_zalan_do____spp_bulk_updater_ui_master_56_https_redirect: Host(/^(spp-bulk-updater-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("x-zalando-coldbrew-canary", "true") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_bulk_updater_ui_master_56__spp_bulk_updater_ui_master_56_smart_product_platform_test_zalan_do____spp_bulk_updater_ui_master_56: Host(/^(spp-bulk-updater-ui-master-56[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.19.225:8080";

kube_default__spp_bulk_updater_ui_master_56__spp_bulk_updater_ui_master_56_smart_product_platform_test_zalan_do____spp_bulk_updater_ui_master_56_https_redirect: Host(/^(spp-bulk-updater-ui-master-56[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_bulk_updater_ui_pr_58_3__spp_bulk_updater_ui_pr_58_3_smart_product_platform_test_zalan_do____spp_bulk_updater_ui_pr_58_3: Host(/^(spp-bulk-updater-ui-pr-58-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("is_workbench", "true")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_bulk_updater_ui_pr_58_3__spp_bulk_updater_ui_pr_58_3_smart_product_platform_test_zalan_do____spp_bulk_updater_ui_pr_58_3_https_redirect: Host(/^(spp-bulk-updater-ui-pr-58-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("is_workbench", "true") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_homer_default_404_route__0__spp_homer_api_smart_product_platform_test_zalan_do____: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_homer_default_404_route__0__spp_homer_smart_product_platform_test_zalan_do____: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_homer_default_404_route__0__spp_supplier_data_test_zalandoapis_com____: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_homer_default_404_route__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_default_404_route__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368_https_redirect: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_homer_default_404_route__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_default_404_route__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368_https_redirect: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_homer_default_404_route__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_default_404_route__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368_https_redirect: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_homer_default_404_route_spp_homer_master_367__0__spp_homer_master_367_smart_product_platform_test_zalan_do____: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_homer_default_404_route_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_default_404_route_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367_https_redirect: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_homer_default_404_route_spp_homer_master_368__0__spp_homer_master_368_smart_product_platform_test_zalan_do____: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_homer_default_404_route_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_default_404_route_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368_https_redirect: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_homer_get_api_supplier_products_admins__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_admins__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_admins__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_admins_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_get_api_supplier_products_admins_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_admins__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_admins__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_admins__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_admins_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_get_api_supplier_products_id_admins_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_rl_all__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_rl_all__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_rl_all__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_rl_all_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_get_api_supplier_products_id_rl_all_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_rl_service_stupsbeatbackendlegacystaging__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_rl_service_stupsbeatbackendlegacystaging__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_rl_service_stupsbeatbackendlegacystaging__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_rl_service_stupsbeatbackendlegacystaging_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_get_api_supplier_products_id_rl_service_stupsbeatbackendlegacystaging_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_rl_service_stupsbuyingarticlesrelease__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_rl_service_stupsbuyingarticlesrelease__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_rl_service_stupsbuyingarticlesrelease__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_rl_service_stupsbuyingarticlesrelease_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_get_api_supplier_products_id_rl_service_stupsbuyingarticlesrelease_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_rl_service_stupsplatformminuetrelease__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_rl_service_stupsplatformminuetrelease__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_rl_service_stupsplatformminuetrelease__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_id_rl_service_stupsplatformminuetrelease_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_get_api_supplier_products_id_rl_service_stupsplatformminuetrelease_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_GET_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_all__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_all__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_all__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_all_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_get_api_supplier_products_rl_all_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsbeatbackendlegacystaging__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsbeatbackendlegacystaging__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsbeatbackendlegacystaging__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsbeatbackendlegacystaging_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsbeatbackendlegacystaging_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsbuyingarticlesrelease__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsbuyingarticlesrelease__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsbuyingarticlesrelease__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsbuyingarticlesrelease_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsbuyingarticlesrelease_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupslogisticsarticleinterface__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_logistics-article-interface", 3600, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupslogisticsarticleinterface__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_logistics-article-interface", 3600, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupslogisticsarticleinterface__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_logistics-article-interface", 3600, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupslogisticsarticleinterface_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_logistics-article-interface", 3600, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_get_api_supplier_products_rl_service_stupslogisticsarticleinterface_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_logistics-article-interface", 3600, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsoctopus__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_octopus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_octopus", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsoctopus__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_octopus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_octopus", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsoctopus__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_octopus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_octopus", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsoctopus_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_octopus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_octopus", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsoctopus_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_octopus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_octopus", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsplatformminuetrelease__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsplatformminuetrelease__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsplatformminuetrelease__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsplatformminuetrelease_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_get_api_supplier_products_rl_service_stupsplatformminuetrelease_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_GET_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_internal_supplier_products_last_modified_admins__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products/last-modified") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_internal_supplier_products_last_modified_admins__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products/last-modified") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_internal_supplier_products_last_modified_admins__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products/last-modified") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_internal_supplier_products_last_modified_admins_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products/last-modified") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_get_internal_supplier_products_last_modified_admins_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products/last-modified") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_internal_supplier_products_last_modified_all__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products/last-modified")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_internal_supplier_products_last_modified_all__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products/last-modified")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_internal_supplier_products_last_modified_all__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products/last-modified")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_get_internal_supplier_products_last_modified_all_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products/last-modified")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_get_internal_supplier_products_last_modified_all_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products/last-modified")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_head_api_supplier_products_id_admins__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_head_api_supplier_products_id_admins__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_head_api_supplier_products_id_admins__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_head_api_supplier_products_id_admins_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_head_api_supplier_products_id_admins_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_head_api_supplier_products_id_rl_all__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_HEAD", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_head_api_supplier_products_id_rl_all__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_HEAD", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_head_api_supplier_products_id_rl_all__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_HEAD", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_head_api_supplier_products_id_rl_all_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_HEAD", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_head_api_supplier_products_id_rl_all_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_HEAD", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_admins__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_admins__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_admins__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_admins_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_post_api_supplier_products_admins_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_all__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_all__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_all__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_all_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_post_api_supplier_products_rl_all_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsbeatbackendlegacystaging__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsbeatbackendlegacystaging__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsbeatbackendlegacystaging__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsbeatbackendlegacystaging_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsbeatbackendlegacystaging_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsbuyingarticlesrelease__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsbuyingarticlesrelease__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsbuyingarticlesrelease__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsbuyingarticlesrelease_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsbuyingarticlesrelease_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsoctopus__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_octopus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_octopus", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsoctopus__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_octopus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_octopus", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsoctopus__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_octopus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_octopus", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsoctopus_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_octopus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_octopus", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsoctopus_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_octopus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_octopus", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsplatformminuetrelease__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsplatformminuetrelease__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsplatformminuetrelease__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsplatformminuetrelease_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_post_api_supplier_products_rl_service_stupsplatformminuetrelease_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_users_all__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_users", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_users_all__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_users", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_users_all__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_users", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_api_supplier_products_rl_users_all_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_users", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_post_api_supplier_products_rl_users_all_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products_POST_users", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_event_bootstraps_admins__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/event-bootstraps") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_event_bootstraps_admins__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/event-bootstraps") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_event_bootstraps_admins__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/event-bootstraps") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_event_bootstraps_admins_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/event-bootstraps") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_post_event_bootstraps_admins_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/event-bootstraps") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_event_bootstraps_all__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/event-bootstraps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_event_bootstraps_all__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/event-bootstraps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_event_bootstraps_all__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/event-bootstraps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_event_bootstraps_all_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/event-bootstraps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_post_event_bootstraps_all_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/event-bootstraps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_aggregated_events_callhome_admins__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal/aggregated-events-callhome") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_aggregated_events_callhome_admins__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal/aggregated-events-callhome") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_aggregated_events_callhome_admins__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal/aggregated-events-callhome") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_aggregated_events_callhome_admins_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal/aggregated-events-callhome") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_post_internal_aggregated_events_callhome_admins_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal/aggregated-events-callhome") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_aggregated_events_callhome_rl_all__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal/aggregated-events-callhome")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> clusterClientRatelimit("spp-homer_internal-aggregated-events-callhome_POST", 45000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_aggregated_events_callhome_rl_all__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal/aggregated-events-callhome")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> clusterClientRatelimit("spp-homer_internal-aggregated-events-callhome_POST", 45000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_aggregated_events_callhome_rl_all__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal/aggregated-events-callhome")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> clusterClientRatelimit("spp-homer_internal-aggregated-events-callhome_POST", 45000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_aggregated_events_callhome_rl_all_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal/aggregated-events-callhome")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> clusterClientRatelimit("spp-homer_internal-aggregated-events-callhome_POST", 45000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_post_internal_aggregated_events_callhome_rl_all_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal/aggregated-events-callhome")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> clusterClientRatelimit("spp-homer_internal-aggregated-events-callhome_POST", 45000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_events_callhome_admins__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal/events-callhome") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_events_callhome_admins__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal/events-callhome") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_events_callhome_admins__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal/events-callhome") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_events_callhome_admins_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal/events-callhome") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_post_internal_events_callhome_admins_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal/events-callhome") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_events_callhome_rl_all__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal/events-callhome")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> clusterClientRatelimit("spp-homer_internal-events-callhome_POST", 45000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_events_callhome_rl_all__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal/events-callhome")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> clusterClientRatelimit("spp-homer_internal-events-callhome_POST", 45000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_events_callhome_rl_all__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal/events-callhome")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> clusterClientRatelimit("spp-homer_internal-events-callhome_POST", 45000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_events_callhome_rl_all_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal/events-callhome")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> clusterClientRatelimit("spp-homer_internal-events-callhome_POST", 45000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_post_internal_events_callhome_rl_all_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal/events-callhome")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> clusterClientRatelimit("spp-homer_internal-events-callhome_POST", 45000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_supplier_products_admins__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_supplier_products_admins__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_supplier_products_admins__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_supplier_products_admins_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_post_internal_supplier_products_admins_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_supplier_products_aggregation_admins__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products/aggregation") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_supplier_products_aggregation_admins__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products/aggregation") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_supplier_products_aggregation_admins__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products/aggregation") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_supplier_products_aggregation_admins_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products/aggregation") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_post_internal_supplier_products_aggregation_admins_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products/aggregation") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_supplier_products_aggregation_all__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products/aggregation")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_supplier_products_aggregation_all__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products/aggregation")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_supplier_products_aggregation_all__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products/aggregation")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_supplier_products_aggregation_all_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products/aggregation")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_post_internal_supplier_products_aggregation_all_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products/aggregation")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_supplier_products_all__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_supplier_products_all__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_supplier_products_all__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_post_internal_supplier_products_all_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_post_internal_supplier_products_all_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_admins__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_admins__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_admins__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_admins_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_put_api_supplier_products_id_admins_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_all__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_all__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_all__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_all_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_put_api_supplier_products_id_rl_all_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/supplier-products/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_service_stupsbeatbackendlegacystaging__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_service_stupsbeatbackendlegacystaging__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_service_stupsbeatbackendlegacystaging__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_service_stupsbeatbackendlegacystaging_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_put_api_supplier_products_id_rl_service_stupsbeatbackendlegacystaging_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_stups_beat-backend-legacy-staging", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_service_stupsbuyingarticlesrelease__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_service_stupsbuyingarticlesrelease__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_service_stupsbuyingarticlesrelease__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_service_stupsbuyingarticlesrelease_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_put_api_supplier_products_id_rl_service_stupsbuyingarticlesrelease_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_stups_buying-articles-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_service_stupsplatformminuetrelease__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_service_stupsplatformminuetrelease__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_service_stupsplatformminuetrelease__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_service_stupsplatformminuetrelease_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_put_api_supplier_products_id_rl_service_stupsplatformminuetrelease_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-homer.write")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_stups_platform-minuet-release", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_users_all__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_users", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_users_all__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_users", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_users_all__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_users", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_api_supplier_products_id_rl_users_all_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_users", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_put_api_supplier_products_id_rl_users_all_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/supplier-products/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "spramanick", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-homer_api-supplier-products-id_PUT_users", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_internal_supplier_products_admins__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_internal_supplier_products_admins__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_internal_supplier_products_admins__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_internal_supplier_products_admins_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_put_internal_supplier_products_admins_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-supplier-products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_internal_supplier_products_all__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_internal_supplier_products_all__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_internal_supplier_products_all__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_put_internal_supplier_products_all_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_put_internal_supplier_products_all_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-supplier-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_reject_http_route__0__spp_homer_api_smart_product_platform_test_zalan_do____: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_homer_reject_http_route__0__spp_homer_smart_product_platform_test_zalan_do____: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_homer_reject_http_route__0__spp_supplier_data_test_zalandoapis_com____: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_homer_reject_http_route__spp_homer_api_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_reject_http_route__spp_homer_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_reject_http_route__spp_supplier_data_test_zalandoapis_com____spp_homer_master_368: Host(/^(spp-supplier-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> "http://10.2.66.9:8080";

kube_default__spp_homer_reject_http_route_spp_homer_master_367__0__spp_homer_master_367_smart_product_platform_test_zalan_do____: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_homer_reject_http_route_spp_homer_master_367__spp_homer_master_367_smart_product_platform_test_zalan_do____spp_homer_master_367: Host(/^(spp-homer-master-367[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_homer_reject_http_route_spp_homer_master_368__0__spp_homer_master_368_smart_product_platform_test_zalan_do____: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_homer_reject_http_route_spp_homer_master_368__spp_homer_master_368_smart_product_platform_test_zalan_do____spp_homer_master_368: Host(/^(spp-homer-master-368[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"6c65f9b1-20ca-42dd-953e-ebbdf25e024e\",\"application_id\":\"spp-homer\",\"path_templates\":[\"/internal-supplier-products\",\"/internal-supplier-products/aggregation\",\"/internal-supplier-products/last-modified\",\"/internal/aggregated-events-callhome\",\"/internal/events-callhome\",\"/supplier-products\",\"/supplier-products/{id}\"]}")
  -> "http://10.2.66.9:8080";

kube_default__spp_orchestrator_default_404_route__0__spp_orchestrator_smart_product_platform_test_zalan_do____: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_orchestrator_default_404_route__0__spp_orchestrator_test_zalandoapis_com____: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_orchestrator_default_404_route__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_default_404_route__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator_https_redirect: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_orchestrator_default_404_route__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_default_404_route__spp_orchestrator_test_zalandoapis_com____spp_orchestrator_https_redirect: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_orchestrator_get__well_known_schema_discovery_admins__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get__well_known_schema_discovery_admins__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get__well_known_schema_discovery_non_whitelisted__0__spp_orchestrator_smart_product_platform_test_zalan_do____: Path("/.well-known/schema-discovery") && Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_orchestrator_get__well_known_schema_discovery_non_whitelisted__0__spp_orchestrator_test_zalandoapis_com____: Path("/.well-known/schema-discovery") && Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_orchestrator_get__well_known_schema_discovery_non_whitelisted__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get__well_known_schema_discovery_non_whitelisted__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get__well_known_schema_discovery_service_stupsbeatbackendlegacystaging__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get__well_known_schema_discovery_service_stupsbeatbackendlegacystaging__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get__well_known_schema_discovery_service_stupsbuyingarticlesrelease__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get__well_known_schema_discovery_service_stupsbuyingarticlesrelease__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get__well_known_schema_discovery_service_stupsdeploymentdiscovery__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get__well_known_schema_discovery_service_stupsdeploymentdiscovery__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get__well_known_schema_discovery_service_stupsplanetexpresslocaltokenretriever__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get__well_known_schema_discovery_service_stupsplanetexpresslocaltokenretriever__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get__well_known_schema_discovery_service_stupsplatformminuetrelease__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get__well_known_schema_discovery_service_stupsplatformminuetrelease__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get__well_known_schema_discovery_service_stupssetantadeploy__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get__well_known_schema_discovery_service_stupssetantadeploy__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get__well_known_schema_discovery_service_stupsspporchestrator__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get__well_known_schema_discovery_service_stupsspporchestrator__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get__well_known_schema_discovery_service_stupssppproductdetails__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_spp-product-details")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get__well_known_schema_discovery_service_stupssppproductdetails__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/.well-known/schema-discovery") && JWTPayloadAllKV("sub", "stups_spp-product-details")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_admins__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/products/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_admins__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/products/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_non_whitelisted__0__spp_orchestrator_smart_product_platform_test_zalan_do____: Path("/products/**") && Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_orchestrator_get_products_wildcard_non_whitelisted__0__spp_orchestrator_test_zalandoapis_com____: Path("/products/**") && Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_orchestrator_get_products_wildcard_non_whitelisted__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_non_whitelisted__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_service_stupsbeatbackendlegacystaging__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_service_stupsbeatbackendlegacystaging__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_service_stupsbuyingarticlesrelease__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_service_stupsbuyingarticlesrelease__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_service_stupsdeploymentdiscovery__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_service_stupsdeploymentdiscovery__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_service_stupsplanetexpresslocaltokenretriever__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_service_stupsplanetexpresslocaltokenretriever__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_service_stupsplatformminuetrelease__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_service_stupsplatformminuetrelease__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_service_stupssetantadeploy__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_service_stupssetantadeploy__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_service_stupsspporchestrator__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_service_stupsspporchestrator__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_service_stupssppproductdetails__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_spp-product-details")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_products_wildcard_service_stupssppproductdetails__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_spp-product-details")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_admins__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/swagger.json") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_admins__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/swagger.json") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_non_whitelisted__0__spp_orchestrator_smart_product_platform_test_zalan_do____: Path("/swagger.json") && Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_orchestrator_get_swagger_json_non_whitelisted__0__spp_orchestrator_test_zalandoapis_com____: Path("/swagger.json") && Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_orchestrator_get_swagger_json_non_whitelisted__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_non_whitelisted__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_service_stupsbeatbackendlegacystaging__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_service_stupsbeatbackendlegacystaging__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_service_stupsbuyingarticlesrelease__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_service_stupsbuyingarticlesrelease__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_service_stupsdeploymentdiscovery__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_service_stupsdeploymentdiscovery__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_service_stupsplanetexpresslocaltokenretriever__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_service_stupsplanetexpresslocaltokenretriever__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_service_stupsplatformminuetrelease__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_service_stupsplatformminuetrelease__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_service_stupssetantadeploy__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_service_stupssetantadeploy__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_service_stupsspporchestrator__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_service_stupsspporchestrator__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_service_stupssppproductdetails__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_spp-product-details")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_json_service_stupssppproductdetails__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.json") && JWTPayloadAllKV("sub", "stups_spp-product-details")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_admins__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/swagger.yaml") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_admins__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/swagger.yaml") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_non_whitelisted__0__spp_orchestrator_smart_product_platform_test_zalan_do____: Path("/swagger.yaml") && Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_orchestrator_get_swagger_yaml_non_whitelisted__0__spp_orchestrator_test_zalandoapis_com____: Path("/swagger.yaml") && Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_orchestrator_get_swagger_yaml_non_whitelisted__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_non_whitelisted__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_service_stupsbeatbackendlegacystaging__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_service_stupsbeatbackendlegacystaging__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_service_stupsbuyingarticlesrelease__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_service_stupsbuyingarticlesrelease__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_service_stupsdeploymentdiscovery__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_service_stupsdeploymentdiscovery__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_service_stupsplanetexpresslocaltokenretriever__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_service_stupsplanetexpresslocaltokenretriever__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_service_stupsplatformminuetrelease__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_service_stupsplatformminuetrelease__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_service_stupssetantadeploy__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_service_stupssetantadeploy__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_service_stupsspporchestrator__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_service_stupsspporchestrator__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_service_stupssppproductdetails__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_spp-product-details")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_get_swagger_yaml_service_stupssppproductdetails__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/swagger.yaml") && JWTPayloadAllKV("sub", "stups_spp-product-details")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_admins__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/products/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_admins__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/products/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "pcamposdesiq", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "gwaldmann", "https://identity.zalando.com/managed-id", "rtawari", "https://identity.zalando.com/managed-id", "ophelan", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "ashaikh", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "vkocherga", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "sborzenko", "https://identity.zalando.com/managed-id", "aalvarez")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_non_whitelisted__0__spp_orchestrator_smart_product_platform_test_zalan_do____: Path("/products/**") && Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_orchestrator_post_products_wildcard_non_whitelisted__0__spp_orchestrator_test_zalandoapis_com____: Path("/products/**") && Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_orchestrator_post_products_wildcard_non_whitelisted__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_non_whitelisted__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_service_stupsbeatbackendlegacystaging__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_service_stupsbeatbackendlegacystaging__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_service_stupsbuyingarticlesrelease__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_service_stupsbuyingarticlesrelease__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_service_stupsdeploymentdiscovery__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_service_stupsdeploymentdiscovery__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_deployment-discovery")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_service_stupsplanetexpresslocaltokenretriever__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_service_stupsplanetexpresslocaltokenretriever__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_service_stupsplatformminuetrelease__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_service_stupsplatformminuetrelease__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_service_stupssetantadeploy__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_service_stupssetantadeploy__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_setanta-deploy")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_service_stupsspporchestrator__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_service_stupsspporchestrator__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_service_stupssppproductdetails__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_spp-product-details")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_post_products_wildcard_service_stupssppproductdetails__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/products/**") && JWTPayloadAllKV("sub", "stups_spp-product-details")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-orchestrator.products.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_reject_http_route__0__spp_orchestrator_smart_product_platform_test_zalan_do____: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_orchestrator_reject_http_route__0__spp_orchestrator_test_zalandoapis_com____: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_orchestrator_reject_http_route__spp_orchestrator_smart_product_platform_test_zalan_do____spp_orchestrator: Host(/^(spp-orchestrator[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__spp_orchestrator_reject_http_route__spp_orchestrator_test_zalandoapis_com____spp_orchestrator: Host(/^(spp-orchestrator-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c9071412-dee1-4e21-be6f-7ef772cfa044\",\"application_id\":\"spp-orchestrator\",\"tag\":\"spp-orchestrator\",\"path_templates\":[\"/products/{product_id}\"]}")
  -> "http://10.2.69.71:8080";

kube_default__spp_perf_test_brand_service_default_404_route__0__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_default_404_route__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_default_404_route__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service_https_redirect: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_delete_api_brand_assignments_id_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-assignments/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_delete_api_brand_assignments_id_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-assignments/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_delete_api_brand_families_id_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-families/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_delete_api_brand_families_id_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-families/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_delete_api_brands_id_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_delete_api_brands_id_media_default_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/default") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_delete_api_brands_id_media_default_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media/default")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_delete_api_brands_id_media_id_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_delete_api_brands_id_media_id_non_whitelisted__0__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands/:id/media/:id") && Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_delete_api_brands_id_media_id_non_whitelisted__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_delete_api_brands_id_media_id_service_stupssppbrandserviceloadtest__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_delete_api_brands_id_non_whitelisted__0__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands/:id") && Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_delete_api_brands_id_non_whitelisted__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_delete_api_brands_id_service_stupssppbrandserviceloadtest__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_brand_assignments_id_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-assignments/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_brand_assignments_id_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-assignments/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_brand_families_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-families") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_brand_families_id_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-families/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_brand_families_id_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-families/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_brand_families_rl_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-families")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.read")
  -> clusterClientRatelimit("spp-perf-test-brand-service_api-brand-families_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_brand_families_rl_service_stupssppbrandserviceloadtest__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brand-families") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.read")
  -> clusterClientRatelimit("spp-perf-test-brand-service_api-brand-families_GET_stups_spp-brand-service-loadtest", 37000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_brands_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_brands_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_brands_id_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_brands_id_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_brands_id_media_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_brands_id_media_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_brands_id_media_default_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/default") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_brands_id_media_default_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media/default")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_brands_id_media_id_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_brands_id_media_id_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_brands_id_media_id_content_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/:id/content") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_brands_id_media_id_content_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media/:id/content")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_media_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/media") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_media_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/media")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_media_categories_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/media-categories") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_api_media_categories_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/media-categories")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_health_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_get_health_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_patch_api_brand_families_id_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-families/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_patch_api_brand_families_id_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-families/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_patch_api_brands_id_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_patch_api_brands_id_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_patch_api_brands_id_media_id_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_patch_api_brands_id_media_id_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_post_api_brand_assignments_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-assignments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_post_api_brand_assignments_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-assignments")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_post_api_brand_collections_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-collections") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_post_api_brand_collections_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-collections")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_post_api_brand_families_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-families") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_post_api_brand_families_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-families")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_post_api_brand_family_collections_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-family-collections") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_post_api_brand_family_collections_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-family-collections")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_post_api_brands_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_post_api_brands_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_post_api_brands_id_media_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_post_api_brands_id_media_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_post_cache_refresh_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/cache-refresh") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_post_cache_refresh_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/cache-refresh")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_put_api_brand_families_id_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brand-families/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_put_api_brand_families_id_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brand-families/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_put_api_brands_id_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_put_api_brands_id_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_put_api_brands_id_media_default_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/default") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_put_api_brands_id_media_default_all__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/brands/:id/media/default")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_put_api_brands_id_media_id_admins__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_put_api_brands_id_media_id_non_whitelisted__0__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands/:id/media/:id") && Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_put_api_brands_id_media_id_non_whitelisted__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_put_api_brands_id_media_id_service_stupssppbrandserviceloadtest__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/brands/:id/media/:id") && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_reject_http_route__0__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_perf_test_brand_service_reject_http_route__spp_perf_test_brand_service_smart_product_platform_test_zalan_do____spp_perf_test_brand_service: Host(/^(spp-perf-test-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_product_search_default_404_route__0__spp_product_search_perf_test_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_perf_test_product_search_default_404_route__spp_product_search_perf_test_smart_product_platform_test_zalan_do____spp_perf_test_product_search_master_301: Host(/^(spp-product-search-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_product_search_default_404_route__spp_product_search_perf_test_smart_product_platform_test_zalan_do____spp_perf_test_product_search_master_301_https_redirect: Host(/^(spp-product-search-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_perf_test_product_search_default_404_route_spp_perf_test_product_search_master_301__0__spp_perf_test_product_search_master_301_smart_product_platform_test_zalan_do____: Host(/^(spp-perf-test-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_perf_test_product_search_default_404_route_spp_perf_test_product_search_master_301__spp_perf_test_product_search_master_301_smart_product_platform_test_zalan_do____spp_perf_test_product_search_master_301: Host(/^(spp-perf-test-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_product_search_default_404_route_spp_perf_test_product_search_master_301__spp_perf_test_product_search_master_301_smart_product_platform_test_zalan_do____spp_perf_test_product_search_master_301_https_redirect: Host(/^(spp-perf-test-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_perf_test_product_search_default_404_route_spp_perf_test_product_search_pr_351_1__0__spp_perf_test_product_search_pr_351_1_smart_product_platform_test_zalan_do____: Host(/^(spp-perf-test-product-search-pr-351-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_perf_test_product_search_default_404_route_spp_perf_test_product_search_pr_351_1__spp_perf_test_product_search_pr_351_1_smart_product_platform_test_zalan_do____spp_perf_test_product_search_pr_351_1: Host(/^(spp-perf-test-product-search-pr-351-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_product_search_default_404_route_spp_perf_test_product_search_pr_351_1__spp_perf_test_product_search_pr_351_1_smart_product_platform_test_zalan_do____spp_perf_test_product_search_pr_351_1_https_redirect: Host(/^(spp-perf-test-product-search-pr-351-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_perf_test_product_search_get_api_product_queries_admins__spp_product_search_perf_test_smart_product_platform_test_zalan_do____spp_perf_test_product_search_master_301: Host(/^(spp-product-search-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_product_search_get_api_product_queries_admins_spp_perf_test_product_search_master_301__spp_perf_test_product_search_master_301_smart_product_platform_test_zalan_do____spp_perf_test_product_search_master_301: Host(/^(spp-perf-test-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_product_search_get_api_product_queries_admins_spp_perf_test_product_search_pr_351_1__spp_perf_test_product_search_pr_351_1_smart_product_platform_test_zalan_do____spp_perf_test_product_search_pr_351_1: Host(/^(spp-perf-test-product-search-pr-351-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_product_search_get_api_product_queries_all__spp_product_search_perf_test_smart_product_platform_test_zalan_do____spp_perf_test_product_search_master_301: Host(/^(spp-product-search-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_product_search_get_api_product_queries_all_spp_perf_test_product_search_master_301__spp_perf_test_product_search_master_301_smart_product_platform_test_zalan_do____spp_perf_test_product_search_master_301: Host(/^(spp-perf-test-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_product_search_get_api_product_queries_all_spp_perf_test_product_search_pr_351_1__spp_perf_test_product_search_pr_351_1_smart_product_platform_test_zalan_do____spp_perf_test_product_search_pr_351_1: Host(/^(spp-perf-test-product-search-pr-351-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_product_search_post_api_product_queries_admins__spp_product_search_perf_test_smart_product_platform_test_zalan_do____spp_perf_test_product_search_master_301: Host(/^(spp-product-search-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_product_search_post_api_product_queries_admins_spp_perf_test_product_search_master_301__spp_perf_test_product_search_master_301_smart_product_platform_test_zalan_do____spp_perf_test_product_search_master_301: Host(/^(spp-perf-test-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_product_search_post_api_product_queries_admins_spp_perf_test_product_search_pr_351_1__spp_perf_test_product_search_pr_351_1_smart_product_platform_test_zalan_do____spp_perf_test_product_search_pr_351_1: Host(/^(spp-perf-test-product-search-pr-351-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_product_search_post_api_product_queries_all__spp_product_search_perf_test_smart_product_platform_test_zalan_do____spp_perf_test_product_search_master_301: Host(/^(spp-product-search-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_product_search_post_api_product_queries_all_spp_perf_test_product_search_master_301__spp_perf_test_product_search_master_301_smart_product_platform_test_zalan_do____spp_perf_test_product_search_master_301: Host(/^(spp-perf-test-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_product_search_post_api_product_queries_all_spp_perf_test_product_search_pr_351_1__spp_perf_test_product_search_pr_351_1_smart_product_platform_test_zalan_do____spp_perf_test_product_search_pr_351_1: Host(/^(spp-perf-test-product-search-pr-351-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_product_search_reject_http_route__0__spp_product_search_perf_test_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_perf_test_product_search_reject_http_route__spp_product_search_perf_test_smart_product_platform_test_zalan_do____spp_perf_test_product_search_master_301: Host(/^(spp-product-search-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_product_search_reject_http_route_spp_perf_test_product_search_master_301__0__spp_perf_test_product_search_master_301_smart_product_platform_test_zalan_do____: Host(/^(spp-perf-test-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_perf_test_product_search_reject_http_route_spp_perf_test_product_search_master_301__spp_perf_test_product_search_master_301_smart_product_platform_test_zalan_do____spp_perf_test_product_search_master_301: Host(/^(spp-perf-test-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_perf_test_product_search_reject_http_route_spp_perf_test_product_search_pr_351_1__0__spp_perf_test_product_search_pr_351_1_smart_product_platform_test_zalan_do____: Host(/^(spp-perf-test-product-search-pr-351-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_perf_test_product_search_reject_http_route_spp_perf_test_product_search_pr_351_1__spp_perf_test_product_search_pr_351_1_smart_product_platform_test_zalan_do____spp_perf_test_product_search_pr_351_1: Host(/^(spp-perf-test-product-search-pr-351-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_details_gateway_default_404_route__0__spp_product_details_smart_product_platform_test_zalan_do____: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_details_gateway_default_404_route__spp_product_details_smart_product_platform_test_zalan_do____spp_product_details: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"aaff98cb-5a5b-4278-ad02-7c18aed91978\",\"application_id\":\"spp-product-details\",\"path_templates\":[\"/products/configs\",\"/products/simples\"]}")
  -> "http://10.2.213.237:8080";

kube_default__spp_product_details_gateway_default_404_route__spp_product_details_smart_product_platform_test_zalan_do____spp_product_details_https_redirect: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_details_gateway_post_api_products_configs_admins__spp_product_details_smart_product_platform_test_zalan_do____spp_product_details: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/products/configs") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"aaff98cb-5a5b-4278-ad02-7c18aed91978\",\"application_id\":\"spp-product-details\",\"path_templates\":[\"/products/configs\",\"/products/simples\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.237:8080";

kube_default__spp_product_details_gateway_post_api_products_configs_all__spp_product_details_smart_product_platform_test_zalan_do____spp_product_details: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/products/configs")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"aaff98cb-5a5b-4278-ad02-7c18aed91978\",\"application_id\":\"spp-product-details\",\"path_templates\":[\"/products/configs\",\"/products/simples\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-details.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.237:8080";

kube_default__spp_product_details_gateway_post_api_products_simples_admins__spp_product_details_smart_product_platform_test_zalan_do____spp_product_details: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/products/simples") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"aaff98cb-5a5b-4278-ad02-7c18aed91978\",\"application_id\":\"spp-product-details\",\"path_templates\":[\"/products/configs\",\"/products/simples\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.237:8080";

kube_default__spp_product_details_gateway_post_api_products_simples_all__spp_product_details_smart_product_platform_test_zalan_do____spp_product_details: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/products/simples")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"aaff98cb-5a5b-4278-ad02-7c18aed91978\",\"application_id\":\"spp-product-details\",\"path_templates\":[\"/products/configs\",\"/products/simples\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-details.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.213.237:8080";

kube_default__spp_product_details_gateway_reject_http_route__0__spp_product_details_smart_product_platform_test_zalan_do____: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_details_gateway_reject_http_route__spp_product_details_smart_product_platform_test_zalan_do____spp_product_details: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"aaff98cb-5a5b-4278-ad02-7c18aed91978\",\"application_id\":\"spp-product-details\",\"path_templates\":[\"/products/configs\",\"/products/simples\"]}")
  -> "http://10.2.213.237:8080";

kube_default__spp_product_identity_default_404_route__0__spp_identity_data_test_zalandoapis_com____: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_identity_default_404_route__0__spp_product_identity_api_smart_product_platform_test_zalan_do____: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_identity_default_404_route__0__spp_product_identity_smart_product_platform_test_zalan_do____: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_identity_default_404_route__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_default_404_route__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574_https_redirect: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_identity_default_404_route__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_default_404_route__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574_https_redirect: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_identity_default_404_route__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_default_404_route__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574_https_redirect: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_identity_default_404_route_spp_product_identity_master_574__0__spp_product_identity_master_574_smart_product_platform_test_zalan_do____: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_identity_default_404_route_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_default_404_route_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574_https_redirect: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_identity_default_404_route_spp_product_identity_pr_516_4__0__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_identity_default_404_route_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_default_404_route_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4_https_redirect: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_identity_delete_api_gtin_assignments_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_delete_api_gtin_assignments_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_delete_api_gtin_assignments_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_delete_api_gtin_assignments_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_delete_api_gtin_assignments_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_delete_api_gtin_assignments_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_DELETE", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_delete_api_gtin_assignments_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_DELETE", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_delete_api_gtin_assignments_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_DELETE", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_delete_api_gtin_assignments_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_DELETE", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_delete_api_gtin_assignments_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_DELETE", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_delete_api_gtin_assignments_rl_users_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_DELETE_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_delete_api_gtin_assignments_rl_users_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_DELETE_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_delete_api_gtin_assignments_rl_users_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_DELETE_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_delete_api_gtin_assignments_rl_users_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_DELETE_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_delete_api_gtin_assignments_rl_users_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_DELETE_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_admin_sku_availability_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/admin/sku/availability") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_admin_sku_availability_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/admin/sku/availability") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_admin_sku_availability_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/admin/sku/availability") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_admin_sku_availability_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/admin/sku/availability") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_admin_sku_availability_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/admin/sku/availability") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_admin_sku_availability_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/admin/sku/availability")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_admin_sku_availability_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/admin/sku/availability")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_admin_sku_availability_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/admin/sku/availability")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_admin_sku_availability_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/admin/sku/availability")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_admin_sku_availability_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/admin/sku/availability")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_identities_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/identities") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/identities") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/identities") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/identities") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/identities") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_identities_hierarchies_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/identities-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_hierarchies_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/identities-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_hierarchies_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/identities-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_hierarchies_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/identities-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_hierarchies_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/identities-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_identities_hierarchies_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/identities-hierarchies")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities-hierarchies_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_hierarchies_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/identities-hierarchies")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities-hierarchies_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_hierarchies_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/identities-hierarchies")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities-hierarchies_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_hierarchies_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/identities-hierarchies")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities-hierarchies_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_hierarchies_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/identities-hierarchies")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities-hierarchies_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_identities_hierarchies_rl_users_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-identities-hierarchies_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_hierarchies_rl_users_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-identities-hierarchies_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_hierarchies_rl_users_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-identities-hierarchies_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_hierarchies_rl_users_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-identities-hierarchies_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_hierarchies_rl_users_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-identities-hierarchies_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_identities_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/identities")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/identities")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/identities")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/identities")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/identities")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_identities_rl_service_stupslogisticsarticleinterface__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET_stups_logistics-article-interface", 10800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_rl_service_stupslogisticsarticleinterface__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET_stups_logistics-article-interface", 10800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_rl_service_stupslogisticsarticleinterface__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET_stups_logistics-article-interface", 10800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_rl_service_stupslogisticsarticleinterface_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET_stups_logistics-article-interface", 10800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_rl_service_stupslogisticsarticleinterface_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET_stups_logistics-article-interface", 10800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_identities_rl_service_stupspurchasingfrontendsupplierportal__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities") && JWTPayloadAllKV("sub", "stups_purchasing-frontend-supplier-portal")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET_stups_purchasing-frontend-supplier-portal", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_rl_service_stupspurchasingfrontendsupplierportal__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities") && JWTPayloadAllKV("sub", "stups_purchasing-frontend-supplier-portal")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET_stups_purchasing-frontend-supplier-portal", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_rl_service_stupspurchasingfrontendsupplierportal__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities") && JWTPayloadAllKV("sub", "stups_purchasing-frontend-supplier-portal")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET_stups_purchasing-frontend-supplier-portal", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_rl_service_stupspurchasingfrontendsupplierportal_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities") && JWTPayloadAllKV("sub", "stups_purchasing-frontend-supplier-portal")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET_stups_purchasing-frontend-supplier-portal", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_rl_service_stupspurchasingfrontendsupplierportal_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities") && JWTPayloadAllKV("sub", "stups_purchasing-frontend-supplier-portal")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET_stups_purchasing-frontend-supplier-portal", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_identities_rl_users_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_rl_users_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_rl_users_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_rl_users_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identities_rl_users_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identities") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-identities_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_identity_hierarchies_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/identity-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identity_hierarchies_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/identity-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identity_hierarchies_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/identity-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identity_hierarchies_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/identity-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identity_hierarchies_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/identity-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_identity_hierarchies_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/identity-hierarchies")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identity-hierarchies_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identity_hierarchies_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/identity-hierarchies")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identity-hierarchies_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identity_hierarchies_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/identity-hierarchies")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identity-hierarchies_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identity_hierarchies_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/identity-hierarchies")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identity-hierarchies_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identity_hierarchies_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/identity-hierarchies")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-identity-hierarchies_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_identity_hierarchies_rl_users_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identity-hierarchies") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-identity-hierarchies_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identity_hierarchies_rl_users_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identity-hierarchies") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-identity-hierarchies_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identity_hierarchies_rl_users_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identity-hierarchies") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-identity-hierarchies_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identity_hierarchies_rl_users_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identity-hierarchies") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-identity-hierarchies_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_identity_hierarchies_rl_users_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/identity-hierarchies") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-identity-hierarchies_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/sku-hierarchies/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/sku-hierarchies/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/sku-hierarchies/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/sku-hierarchies/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/sku-hierarchies/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsbeatbackendlegacystaging__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_beat-backend-legacy-staging", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsbeatbackendlegacystaging__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_beat-backend-legacy-staging", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsbeatbackendlegacystaging__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_beat-backend-legacy-staging", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsbeatbackendlegacystaging_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_beat-backend-legacy-staging", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsbeatbackendlegacystaging_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_beat-backend-legacy-staging", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsbuyingarticles__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_buying-articles", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsbuyingarticles__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_buying-articles", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsbuyingarticles__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_buying-articles", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsbuyingarticles_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_buying-articles", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsbuyingarticles_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_buying-articles", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupscatalogservice__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_catalog-service", 20000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupscatalogservice__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_catalog-service", 20000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupscatalogservice__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_catalog-service", 20000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupscatalogservice_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_catalog-service", 20000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupscatalogservice_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_catalog-service", 20000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupscometbackend__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_comet-backend")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_comet-backend", 500, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupscometbackend__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_comet-backend")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_comet-backend", 500, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupscometbackend__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_comet-backend")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_comet-backend", 500, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupscometbackend_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_comet-backend")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_comet-backend", 500, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupscometbackend_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_comet-backend")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_comet-backend", 500, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsplatformminuet__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsplatformminuet__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsplatformminuet__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsplatformminuet_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsplatformminuet_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsspporchestrator__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_spp-orchestrator", 5000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsspporchestrator__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_spp-orchestrator", 5000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsspporchestrator__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_spp-orchestrator", 5000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsspporchestrator_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_spp-orchestrator", 5000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_service_stupsspporchestrator_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_stups_spp-orchestrator", 5000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_users_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_users_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_users_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_users_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_sku_hierarchies_wildcard_rl_users_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies-wildcard_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_skus_wildcard_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_skus_wildcard_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsbrownie__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_brownie")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_brownie", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsbrownie__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_brownie")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_brownie", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsbrownie__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_brownie")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_brownie", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsbrownie_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_brownie")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_brownie", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsbrownie_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_brownie")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_brownie", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsbuyingarticles__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_buying-articles", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsbuyingarticles__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_buying-articles", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsbuyingarticles__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_buying-articles", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsbuyingarticles_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_buying-articles", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsbuyingarticles_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_buying-articles", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsdonut__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_donut")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_donut", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsdonut__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_donut")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_donut", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsdonut__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_donut")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_donut", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsdonut_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_donut")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_donut", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsdonut_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_donut")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_donut", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupslogisticsarticleinterface__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_logistics-article-interface", 10800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupslogisticsarticleinterface__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_logistics-article-interface", 10800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupslogisticsarticleinterface__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_logistics-article-interface", 10800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupslogisticsarticleinterface_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_logistics-article-interface", 10800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupslogisticsarticleinterface_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_logistics-article-interface", 10800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsplatformminuet__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsplatformminuet__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsplatformminuet__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsplatformminuet_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsplatformminuet_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsspphomer__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_spp-homer")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_spp-homer", 50000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsspphomer__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_spp-homer")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_spp-homer", 50000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsspphomer__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_spp-homer")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_spp-homer", 50000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsspphomer_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_spp-homer")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_spp-homer", 50000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_service_stupsspphomer_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_spp-homer")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_stups_spp-homer", 50000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_api_skus_wildcard_rl_users_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "arickert", "https://identity.zalando.com/managed-id", "alindbom", "https://identity.zalando.com/managed-id", "msimon", "https://identity.zalando.com/managed-id", "kschaefers", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "atanoku", "https://identity.zalando.com/managed-id", "fpobbig", "https://identity.zalando.com/managed-id", "shermanski", "https://identity.zalando.com/managed-id", "aszymanowski", "https://identity.zalando.com/managed-id", "nbussert", "https://identity.zalando.com/managed-id", "abathke", "https://identity.zalando.com/managed-id", "bmachoy", "https://identity.zalando.com/managed-id", "atchiplakov", "https://identity.zalando.com/managed-id", "daproehl", "https://identity.zalando.com/managed-id", "labbadessa", "https://identity.zalando.com/managed-id", "mlutz", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "mlorentz", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "nleonhard", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "jknop", "https://identity.zalando.com/managed-id", "adziedzic", "https://identity.zalando.com/managed-id", "vgallasch", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "rkieu", "https://identity.zalando.com/managed-id", "crumrich", "https://identity.zalando.com/managed-id", "lemueller", "https://identity.zalando.com/managed-id", "vzapf", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "erlehmann", "https://identity.zalando.com/managed-id", "mtechentin", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mmachowiak", "https://identity.zalando.com/managed-id", "gmaass", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "bbedak", "https://identity.zalando.com/managed-id", "alnovikova", "https://identity.zalando.com/managed-id", "julweber", "https://identity.zalando.com/managed-id", "jakramer", "https://identity.zalando.com/managed-id", "aghali", "https://identity.zalando.com/managed-id", "pjaniak", "https://identity.zalando.com/managed-id", "figel", "https://identity.zalando.com/managed-id", "nborrmann", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "cschuessler", "https://identity.zalando.com/managed-id", "sbiegert", "https://identity.zalando.com/managed-id", "alossow", "https://identity.zalando.com/managed-id", "ksteffen", "https://identity.zalando.com/managed-id", "snesterenko", "https://identity.zalando.com/managed-id", "ahuebner")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_users_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "arickert", "https://identity.zalando.com/managed-id", "alindbom", "https://identity.zalando.com/managed-id", "msimon", "https://identity.zalando.com/managed-id", "kschaefers", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "atanoku", "https://identity.zalando.com/managed-id", "fpobbig", "https://identity.zalando.com/managed-id", "shermanski", "https://identity.zalando.com/managed-id", "aszymanowski", "https://identity.zalando.com/managed-id", "nbussert", "https://identity.zalando.com/managed-id", "abathke", "https://identity.zalando.com/managed-id", "bmachoy", "https://identity.zalando.com/managed-id", "atchiplakov", "https://identity.zalando.com/managed-id", "daproehl", "https://identity.zalando.com/managed-id", "labbadessa", "https://identity.zalando.com/managed-id", "mlutz", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "mlorentz", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "nleonhard", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "jknop", "https://identity.zalando.com/managed-id", "adziedzic", "https://identity.zalando.com/managed-id", "vgallasch", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "rkieu", "https://identity.zalando.com/managed-id", "crumrich", "https://identity.zalando.com/managed-id", "lemueller", "https://identity.zalando.com/managed-id", "vzapf", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "erlehmann", "https://identity.zalando.com/managed-id", "mtechentin", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mmachowiak", "https://identity.zalando.com/managed-id", "gmaass", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "bbedak", "https://identity.zalando.com/managed-id", "alnovikova", "https://identity.zalando.com/managed-id", "julweber", "https://identity.zalando.com/managed-id", "jakramer", "https://identity.zalando.com/managed-id", "aghali", "https://identity.zalando.com/managed-id", "pjaniak", "https://identity.zalando.com/managed-id", "figel", "https://identity.zalando.com/managed-id", "nborrmann", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "cschuessler", "https://identity.zalando.com/managed-id", "sbiegert", "https://identity.zalando.com/managed-id", "alossow", "https://identity.zalando.com/managed-id", "ksteffen", "https://identity.zalando.com/managed-id", "snesterenko", "https://identity.zalando.com/managed-id", "ahuebner")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_users_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "arickert", "https://identity.zalando.com/managed-id", "alindbom", "https://identity.zalando.com/managed-id", "msimon", "https://identity.zalando.com/managed-id", "kschaefers", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "atanoku", "https://identity.zalando.com/managed-id", "fpobbig", "https://identity.zalando.com/managed-id", "shermanski", "https://identity.zalando.com/managed-id", "aszymanowski", "https://identity.zalando.com/managed-id", "nbussert", "https://identity.zalando.com/managed-id", "abathke", "https://identity.zalando.com/managed-id", "bmachoy", "https://identity.zalando.com/managed-id", "atchiplakov", "https://identity.zalando.com/managed-id", "daproehl", "https://identity.zalando.com/managed-id", "labbadessa", "https://identity.zalando.com/managed-id", "mlutz", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "mlorentz", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "nleonhard", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "jknop", "https://identity.zalando.com/managed-id", "adziedzic", "https://identity.zalando.com/managed-id", "vgallasch", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "rkieu", "https://identity.zalando.com/managed-id", "crumrich", "https://identity.zalando.com/managed-id", "lemueller", "https://identity.zalando.com/managed-id", "vzapf", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "erlehmann", "https://identity.zalando.com/managed-id", "mtechentin", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mmachowiak", "https://identity.zalando.com/managed-id", "gmaass", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "bbedak", "https://identity.zalando.com/managed-id", "alnovikova", "https://identity.zalando.com/managed-id", "julweber", "https://identity.zalando.com/managed-id", "jakramer", "https://identity.zalando.com/managed-id", "aghali", "https://identity.zalando.com/managed-id", "pjaniak", "https://identity.zalando.com/managed-id", "figel", "https://identity.zalando.com/managed-id", "nborrmann", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "cschuessler", "https://identity.zalando.com/managed-id", "sbiegert", "https://identity.zalando.com/managed-id", "alossow", "https://identity.zalando.com/managed-id", "ksteffen", "https://identity.zalando.com/managed-id", "snesterenko", "https://identity.zalando.com/managed-id", "ahuebner")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_users_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "arickert", "https://identity.zalando.com/managed-id", "alindbom", "https://identity.zalando.com/managed-id", "msimon", "https://identity.zalando.com/managed-id", "kschaefers", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "atanoku", "https://identity.zalando.com/managed-id", "fpobbig", "https://identity.zalando.com/managed-id", "shermanski", "https://identity.zalando.com/managed-id", "aszymanowski", "https://identity.zalando.com/managed-id", "nbussert", "https://identity.zalando.com/managed-id", "abathke", "https://identity.zalando.com/managed-id", "bmachoy", "https://identity.zalando.com/managed-id", "atchiplakov", "https://identity.zalando.com/managed-id", "daproehl", "https://identity.zalando.com/managed-id", "labbadessa", "https://identity.zalando.com/managed-id", "mlutz", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "mlorentz", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "nleonhard", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "jknop", "https://identity.zalando.com/managed-id", "adziedzic", "https://identity.zalando.com/managed-id", "vgallasch", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "rkieu", "https://identity.zalando.com/managed-id", "crumrich", "https://identity.zalando.com/managed-id", "lemueller", "https://identity.zalando.com/managed-id", "vzapf", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "erlehmann", "https://identity.zalando.com/managed-id", "mtechentin", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mmachowiak", "https://identity.zalando.com/managed-id", "gmaass", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "bbedak", "https://identity.zalando.com/managed-id", "alnovikova", "https://identity.zalando.com/managed-id", "julweber", "https://identity.zalando.com/managed-id", "jakramer", "https://identity.zalando.com/managed-id", "aghali", "https://identity.zalando.com/managed-id", "pjaniak", "https://identity.zalando.com/managed-id", "figel", "https://identity.zalando.com/managed-id", "nborrmann", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "cschuessler", "https://identity.zalando.com/managed-id", "sbiegert", "https://identity.zalando.com/managed-id", "alossow", "https://identity.zalando.com/managed-id", "ksteffen", "https://identity.zalando.com/managed-id", "snesterenko", "https://identity.zalando.com/managed-id", "ahuebner")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_api_skus_wildcard_rl_users_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "arickert", "https://identity.zalando.com/managed-id", "alindbom", "https://identity.zalando.com/managed-id", "msimon", "https://identity.zalando.com/managed-id", "kschaefers", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "atanoku", "https://identity.zalando.com/managed-id", "fpobbig", "https://identity.zalando.com/managed-id", "shermanski", "https://identity.zalando.com/managed-id", "aszymanowski", "https://identity.zalando.com/managed-id", "nbussert", "https://identity.zalando.com/managed-id", "abathke", "https://identity.zalando.com/managed-id", "bmachoy", "https://identity.zalando.com/managed-id", "atchiplakov", "https://identity.zalando.com/managed-id", "daproehl", "https://identity.zalando.com/managed-id", "labbadessa", "https://identity.zalando.com/managed-id", "mlutz", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "mlorentz", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "nleonhard", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "jknop", "https://identity.zalando.com/managed-id", "adziedzic", "https://identity.zalando.com/managed-id", "vgallasch", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "rkieu", "https://identity.zalando.com/managed-id", "crumrich", "https://identity.zalando.com/managed-id", "lemueller", "https://identity.zalando.com/managed-id", "vzapf", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "erlehmann", "https://identity.zalando.com/managed-id", "mtechentin", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mmachowiak", "https://identity.zalando.com/managed-id", "gmaass", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "bbedak", "https://identity.zalando.com/managed-id", "alnovikova", "https://identity.zalando.com/managed-id", "julweber", "https://identity.zalando.com/managed-id", "jakramer", "https://identity.zalando.com/managed-id", "aghali", "https://identity.zalando.com/managed-id", "pjaniak", "https://identity.zalando.com/managed-id", "figel", "https://identity.zalando.com/managed-id", "nborrmann", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "cschuessler", "https://identity.zalando.com/managed-id", "sbiegert", "https://identity.zalando.com/managed-id", "alossow", "https://identity.zalando.com/managed-id", "ksteffen", "https://identity.zalando.com/managed-id", "snesterenko", "https://identity.zalando.com/managed-id", "ahuebner")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_id_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_id_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_id_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_id_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_id_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_id_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_id_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_id_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_id_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_internal_product_identities_gtin_ranges_id_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_loggers_id_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/loggers/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_loggers_id_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/loggers/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_loggers_id_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/loggers/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_loggers_id_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/loggers/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_loggers_id_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/loggers/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_loggers_id_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/loggers/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_loggers-id_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_loggers_id_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/loggers/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_loggers-id_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_loggers_id_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/loggers/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_loggers-id_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_loggers_id_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/loggers/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_loggers-id_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_loggers_id_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/loggers/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_loggers-id_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_metrics_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_metrics_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_metrics_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_metrics_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_metrics_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_metrics_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_metrics_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_metrics_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_metrics_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_metrics_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_metrics_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_metrics_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_metrics_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_metrics_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_metrics_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_prometheus_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/prometheus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_prometheus_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/prometheus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_prometheus_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/prometheus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_prometheus_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/prometheus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_prometheus_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/prometheus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_get_prometheus_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/prometheus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_prometheus_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_prometheus_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/prometheus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_prometheus_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_prometheus_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/prometheus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_prometheus_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_prometheus_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/prometheus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_prometheus_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_get_prometheus_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/prometheus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_prometheus_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_head_api_skus_wildcard_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_head_api_skus_wildcard_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsbeatbackendlegacystaging__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_beat-backend-legacy-staging", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsbeatbackendlegacystaging__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_beat-backend-legacy-staging", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsbeatbackendlegacystaging__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_beat-backend-legacy-staging", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsbeatbackendlegacystaging_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_beat-backend-legacy-staging", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsbeatbackendlegacystaging_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_beat-backend-legacy-staging", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsbrownie__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_brownie")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_brownie", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsbrownie__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_brownie")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_brownie", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsbrownie__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_brownie")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_brownie", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsbrownie_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_brownie")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_brownie", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsbrownie_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_brownie")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_brownie", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupscatalogservice__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_catalog-service", 20000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupscatalogservice__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_catalog-service", 20000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupscatalogservice__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_catalog-service", 20000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupscatalogservice_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_catalog-service", 20000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupscatalogservice_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_catalog-service", 20000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsdonut__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_donut")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_donut", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsdonut__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_donut")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_donut", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsdonut__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_donut")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_donut", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsdonut_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_donut")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_donut", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsdonut_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_donut")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_donut", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsspphomer__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_spp-homer")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_spp-homer", 50000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsspphomer__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_spp-homer")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_spp-homer", 50000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsspphomer__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_spp-homer")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_spp-homer", 50000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsspphomer_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_spp-homer")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_spp-homer", 50000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupsspphomer_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_spp-homer")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_spp-homer", 50000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupssppproducts__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_spp-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_spp-products", 20000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupssppproducts__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_spp-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_spp-products", 20000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupssppproducts__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_spp-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_spp-products", 20000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupssppproducts_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_spp-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_spp-products", 20000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_service_stupssppproducts_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAllKV("sub", "stups_spp-products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_stups_spp-products", 20000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_head_api_skus_wildcard_rl_users_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_users_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_users_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_users_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_head_api_skus_wildcard_rl_users_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_HEAD_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_perf_test_default_404_route__0__spp_product_identity_perf_test_smart_product_platform_test_zalan_do____: Host(/^(spp-product-identity-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_identity_perf_test_reject_http_route__0__spp_product_identity_perf_test_smart_product_platform_test_zalan_do____: Host(/^(spp-product-identity-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_allocations_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-allocations") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-allocations") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-allocations") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-allocations") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-allocations") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_allocations_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-allocations")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-allocations")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-allocations")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-allocations")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-allocations")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_allocations_rl_service_stupscatalogservice__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-allocations") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST_stups_catalog-service", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_rl_service_stupscatalogservice__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-allocations") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST_stups_catalog-service", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_rl_service_stupscatalogservice__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-allocations") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST_stups_catalog-service", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_rl_service_stupscatalogservice_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-allocations") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST_stups_catalog-service", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_rl_service_stupscatalogservice_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-allocations") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST_stups_catalog-service", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_allocations_rl_service_stupsplatformminuet__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-allocations") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_rl_service_stupsplatformminuet__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-allocations") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_rl_service_stupsplatformminuet__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-allocations") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_rl_service_stupsplatformminuet_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-allocations") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_rl_service_stupsplatformminuet_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-allocations") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_allocations_rl_users_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-allocations") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "aasenciosanc", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ckohn", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_rl_users_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-allocations") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "aasenciosanc", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ckohn", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_rl_users_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-allocations") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "aasenciosanc", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ckohn", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_rl_users_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-allocations") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "aasenciosanc", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ckohn", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_allocations_rl_users_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-allocations") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "aasenciosanc", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ckohn", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-allocations_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_assignments_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments-history-search") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments-history-search") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments-history-search") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments-history-search") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments-history-search") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments-history-search")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-history-search_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments-history-search")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-history-search_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments-history-search")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-history-search_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments-history-search")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-history-search_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments-history-search")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-history-search_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_rl_service_stupscatalogservice__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-history-search") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-history-search_POST_stups_catalog-service", 150000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_rl_service_stupscatalogservice__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-history-search") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-history-search_POST_stups_catalog-service", 150000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_rl_service_stupscatalogservice__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-history-search") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-history-search_POST_stups_catalog-service", 150000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_rl_service_stupscatalogservice_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-history-search") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-history-search_POST_stups_catalog-service", 150000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_rl_service_stupscatalogservice_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-history-search") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-history-search_POST_stups_catalog-service", 150000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_rl_users_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-history-search") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-history-search_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_rl_users_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-history-search") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-history-search_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_rl_users_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-history-search") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-history-search_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_rl_users_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-history-search") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-history-search_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_history_search_rl_users_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-history-search") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-history-search_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_assignments_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_assignments_rl_service_stupsplatformminuet__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_rl_service_stupsplatformminuet__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_rl_service_stupsplatformminuet__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_rl_service_stupsplatformminuet_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_rl_service_stupsplatformminuet_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_assignments_rl_users_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_rl_users_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_rl_users_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_rl_users_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_rl_users_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_assignments_search_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments-search")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments-search")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments-search")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments-search")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/gtin-assignments-search")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupsbuyingarticles__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_buying-articles", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupsbuyingarticles__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_buying-articles", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupsbuyingarticles__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_buying-articles", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupsbuyingarticles_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_buying-articles", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupsbuyingarticles_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_buying-articles", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupscatalogservice__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_catalog-service", 12000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupscatalogservice__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_catalog-service", 12000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupscatalogservice__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_catalog-service", 12000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupscatalogservice_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_catalog-service", 12000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupscatalogservice_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_catalog-service", 12000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupsoperationalorderlegacyclients__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_operational-order-legacy-clients")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_operational-order-legacy-clients", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupsoperationalorderlegacyclients__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_operational-order-legacy-clients")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_operational-order-legacy-clients", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupsoperationalorderlegacyclients__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_operational-order-legacy-clients")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_operational-order-legacy-clients", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupsoperationalorderlegacyclients_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_operational-order-legacy-clients")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_operational-order-legacy-clients", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupsoperationalorderlegacyclients_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_operational-order-legacy-clients")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_operational-order-legacy-clients", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupsplatformminuet__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupsplatformminuet__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupsplatformminuet__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupsplatformminuet_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_service_stupsplatformminuet_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_users_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "rromanchuk", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_users_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "rromanchuk", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_users_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "rromanchuk", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_users_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "rromanchuk", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_gtin_assignments_search_rl_users_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/gtin-assignments-search") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "rromanchuk", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-gtin-assignments-search_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_sku_hierarchies_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/sku-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_sku_hierarchies_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/sku-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_sku_hierarchies_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/sku-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_sku_hierarchies_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/sku-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_sku_hierarchies_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/sku-hierarchies") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_sku_hierarchies_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/sku-hierarchies")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_sku_hierarchies_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/sku-hierarchies")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_sku_hierarchies_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/sku-hierarchies")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_sku_hierarchies_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/sku-hierarchies")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_sku_hierarchies_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/sku-hierarchies")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_sku_hierarchies_rl_users_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_sku_hierarchies_rl_users_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_sku_hierarchies_rl_users_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_sku_hierarchies_rl_users_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_sku_hierarchies_rl_users_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/sku-hierarchies") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-sku-hierarchies_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_skus_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_skus_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-skus_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-skus_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-skus_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-skus_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-skus_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_skus_rl_service_stupsplatformminuet__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-skus_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_rl_service_stupsplatformminuet__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-skus_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_rl_service_stupsplatformminuet__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-skus_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_rl_service_stupsplatformminuet_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-skus_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_rl_service_stupsplatformminuet_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> clusterClientRatelimit("spp-product-identity_api-skus_POST_stups_platform-minuet", 200000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_skus_rl_users_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_rl_users_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_rl_users_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_rl_users_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_rl_users_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "jposingies", "https://identity.zalando.com/managed-id", "lmedeirosdea", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "imenezes", "https://identity.zalando.com/managed-id", "mkubacki", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "jooliveira", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "froske", "https://identity.zalando.com/managed-id", "quberger", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "nsunderraj", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "mokuboyejo", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "adacostanasc", "https://identity.zalando.com/managed-id", "bprabhu", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "smajumder", "https://identity.zalando.com/managed-id", "tharms", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_skus_validation_requests_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus-validation-requests") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_validation_requests_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus-validation-requests") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_validation_requests_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus-validation-requests") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_validation_requests_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus-validation-requests") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_validation_requests_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus-validation-requests") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_skus_validation_requests_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus-validation-requests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-validation-requests_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_validation_requests_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus-validation-requests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-validation-requests_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_validation_requests_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus-validation-requests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-validation-requests_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_validation_requests_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus-validation-requests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-validation-requests_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_validation_requests_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus-validation-requests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.read")
  -> clusterClientRatelimit("spp-product-identity_api-skus-validation-requests_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_api_skus_validation_requests_rl_users_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus-validation-requests") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-validation-requests_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_validation_requests_rl_users_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus-validation-requests") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-validation-requests_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_validation_requests_rl_users_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus-validation-requests") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-validation-requests_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_validation_requests_rl_users_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus-validation-requests") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-validation-requests_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_api_skus_validation_requests_rl_users_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus-validation-requests") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-validation-requests_POST_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_events_callhome_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal/events-callhome") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_events_callhome_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal/events-callhome") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_events_callhome_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal/events-callhome") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_events_callhome_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal/events-callhome") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_events_callhome_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal/events-callhome") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_events_callhome_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal/events-callhome")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> clusterClientRatelimit("spp-product-identity_internal-events-callhome_POST", 4000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_events_callhome_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal/events-callhome")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> clusterClientRatelimit("spp-product-identity_internal-events-callhome_POST", 4000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_events_callhome_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal/events-callhome")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> clusterClientRatelimit("spp-product-identity_internal-events-callhome_POST", 4000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_events_callhome_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal/events-callhome")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> clusterClientRatelimit("spp-product-identity_internal-events-callhome_POST", 4000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_events_callhome_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal/events-callhome")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> clusterClientRatelimit("spp-product-identity_internal-events-callhome_POST", 4000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-assignments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-assignments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-assignments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-assignments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-assignments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_non_whitelisted__0__spp_identity_data_test_zalandoapis_com____: Path("/internal-product-identities/gtin-assignments") && Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_non_whitelisted__0__spp_product_identity_api_smart_product_platform_test_zalan_do____: Path("/internal-product-identities/gtin-assignments") && Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_non_whitelisted__0__spp_product_identity_smart_product_platform_test_zalan_do____: Path("/internal-product-identities/gtin-assignments") && Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_non_whitelisted__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_non_whitelisted__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_non_whitelisted__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_non_whitelisted_spp_product_identity_master_574__0__spp_product_identity_master_574_smart_product_platform_test_zalan_do____: Path("/internal-product-identities/gtin-assignments") && Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_non_whitelisted_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_non_whitelisted_spp_product_identity_pr_516_4__0__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____: Path("/internal-product-identities/gtin-assignments") && Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_non_whitelisted_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_service_stupscatalogservice__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/gtin-assignments") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_service_stupscatalogservice__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/gtin-assignments") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_service_stupscatalogservice__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/gtin-assignments") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_service_stupscatalogservice_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/gtin-assignments") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_assignments_service_stupscatalogservice_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/gtin-assignments") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_id_extensions_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/:id/extensions") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_id_extensions_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/:id/extensions") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_id_extensions_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/:id/extensions") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_id_extensions_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/:id/extensions") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_id_extensions_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/:id/extensions") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_id_extensions_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/:id/extensions")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_id_extensions_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/:id/extensions")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_id_extensions_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/:id/extensions")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_id_extensions_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/:id/extensions")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_id_extensions_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/:id/extensions")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_statistics_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/statistics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_statistics_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/statistics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_statistics_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/statistics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_statistics_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/statistics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_statistics_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/statistics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_statistics_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/statistics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_statistics_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/statistics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_statistics_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/statistics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_statistics_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/statistics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_gtin_ranges_statistics_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/statistics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/sku-generate") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/sku-generate") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/sku-generate") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/sku-generate") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/sku-generate") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_non_whitelisted__0__spp_identity_data_test_zalandoapis_com____: Path("/internal-product-identities/sku-generate") && Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_non_whitelisted__0__spp_product_identity_api_smart_product_platform_test_zalan_do____: Path("/internal-product-identities/sku-generate") && Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_non_whitelisted__0__spp_product_identity_smart_product_platform_test_zalan_do____: Path("/internal-product-identities/sku-generate") && Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_non_whitelisted__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_non_whitelisted__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_non_whitelisted__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_non_whitelisted_spp_product_identity_master_574__0__spp_product_identity_master_574_smart_product_platform_test_zalan_do____: Path("/internal-product-identities/sku-generate") && Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_non_whitelisted_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_non_whitelisted_spp_product_identity_pr_516_4__0__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____: Path("/internal-product-identities/sku-generate") && Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_non_whitelisted_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_service_stupscatalogservice__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/sku-generate") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_service_stupscatalogservice__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/sku-generate") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_service_stupscatalogservice__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/sku-generate") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_service_stupscatalogservice_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/sku-generate") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_sku_generate_service_stupscatalogservice_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/sku-generate") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_skus_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_skus_non_whitelisted__0__spp_identity_data_test_zalandoapis_com____: Path("/internal-product-identities/skus") && Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_skus_non_whitelisted__0__spp_product_identity_api_smart_product_platform_test_zalan_do____: Path("/internal-product-identities/skus") && Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_skus_non_whitelisted__0__spp_product_identity_smart_product_platform_test_zalan_do____: Path("/internal-product-identities/skus") && Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_skus_non_whitelisted__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_non_whitelisted__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_non_whitelisted__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_non_whitelisted_spp_product_identity_master_574__0__spp_product_identity_master_574_smart_product_platform_test_zalan_do____: Path("/internal-product-identities/skus") && Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_skus_non_whitelisted_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_non_whitelisted_spp_product_identity_pr_516_4__0__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____: Path("/internal-product-identities/skus") && Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_skus_non_whitelisted_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupsbeatbackendlegacystaging__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupsbeatbackendlegacystaging__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupsbeatbackendlegacystaging__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupsbeatbackendlegacystaging_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupsbeatbackendlegacystaging_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupscatalogservice__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupscatalogservice__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupscatalogservice__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupscatalogservice_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupscatalogservice_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupscatalogtests__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupscatalogtests__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupscatalogtests__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupscatalogtests_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupscatalogtests_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupsspporchestrator__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupsspporchestrator__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupsspporchestrator__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupsspporchestrator_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupsspporchestrator_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupswardrobemerchantplatformconnect__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_wardrobe-merchant-platform-connect")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupswardrobemerchantplatformconnect__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_wardrobe-merchant-platform-connect")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupswardrobemerchantplatformconnect__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_wardrobe-merchant-platform-connect")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupswardrobemerchantplatformconnect_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_wardrobe-merchant-platform-connect")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_internal_product_identities_skus_service_stupswardrobemerchantplatformconnect_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_wardrobe-merchant-platform-connect")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_loggers_id_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/loggers/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_loggers_id_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/loggers/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_loggers_id_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/loggers/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_loggers_id_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/loggers/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_loggers_id_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/loggers/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_post_loggers_id_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/loggers/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_loggers-id_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_loggers_id_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/loggers/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_loggers-id_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_loggers_id_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/loggers/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_loggers-id_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_loggers_id_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/loggers/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_loggers-id_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_post_loggers_id_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/loggers/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_loggers-id_POST", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_put_api_skus_wildcard_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_api_skus_wildcard_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_api_skus_wildcard_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_api_skus_wildcard_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_api_skus_wildcard_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/skus/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_put_api_skus_wildcard_rl_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_PUT", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_api_skus_wildcard_rl_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_PUT", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_api_skus_wildcard_rl_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_PUT", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_api_skus_wildcard_rl_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_PUT", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_api_skus_wildcard_rl_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/skus/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_PUT", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_put_api_skus_wildcard_rl_users_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_PUT_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_api_skus_wildcard_rl_users_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_PUT_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_api_skus_wildcard_rl_users_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_PUT_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_api_skus_wildcard_rl_users_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_PUT_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_api_skus_wildcard_rl_users_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/skus/**") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "operbellini", "https://identity.zalando.com/managed-id", "soceanainn", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "zszekely", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "dlopes", "https://identity.zalando.com/managed-id", "phgieschen", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "snesterenko")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-identity_api-skus-wildcard_PUT_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_put_internal_product_identities_gtin_ranges_id_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_gtin_ranges_id_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_gtin_ranges_id_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_gtin_ranges_id_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_gtin_ranges_id_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/gtin-ranges/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_put_internal_product_identities_gtin_ranges_id_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_gtin_ranges_id_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_gtin_ranges_id_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_gtin_ranges_id_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_gtin_ranges_id_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/internal-product-identities/gtin-ranges/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.admin")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_put_internal_product_identities_skus_admins__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_admins__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_admins__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_admins_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_admins_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_put_internal_product_identities_skus_non_whitelisted__0__spp_identity_data_test_zalandoapis_com____: Path("/internal-product-identities/skus") && Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_put_internal_product_identities_skus_non_whitelisted__0__spp_product_identity_api_smart_product_platform_test_zalan_do____: Path("/internal-product-identities/skus") && Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_put_internal_product_identities_skus_non_whitelisted__0__spp_product_identity_smart_product_platform_test_zalan_do____: Path("/internal-product-identities/skus") && Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_put_internal_product_identities_skus_non_whitelisted__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_non_whitelisted__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_non_whitelisted__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_non_whitelisted_spp_product_identity_master_574__0__spp_product_identity_master_574_smart_product_platform_test_zalan_do____: Path("/internal-product-identities/skus") && Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_put_internal_product_identities_skus_non_whitelisted_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_non_whitelisted_spp_product_identity_pr_516_4__0__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____: Path("/internal-product-identities/skus") && Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__spp_product_identity_put_internal_product_identities_skus_non_whitelisted_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupsbeatbackendlegacystaging__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupsbeatbackendlegacystaging__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupsbeatbackendlegacystaging__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupsbeatbackendlegacystaging_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupsbeatbackendlegacystaging_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_beat-backend-legacy-staging")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupscatalogservice__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupscatalogservice__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupscatalogservice__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupscatalogservice_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupscatalogservice_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupscatalogtests__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupscatalogtests__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupscatalogtests__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupscatalogtests_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupscatalogtests_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_catalog-tests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupsspporchestrator__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupsspporchestrator__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupsspporchestrator__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupsspporchestrator_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupsspporchestrator_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupswardrobemerchantplatformconnect__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_wardrobe-merchant-platform-connect")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupswardrobemerchantplatformconnect__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_wardrobe-merchant-platform-connect")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupswardrobemerchantplatformconnect__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_wardrobe-merchant-platform-connect")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupswardrobemerchantplatformconnect_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_wardrobe-merchant-platform-connect")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_service_stupswardrobemerchantplatformconnect_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAllKV("sub", "stups_wardrobe-merchant-platform-connect")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-identity.identities.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_put_internal_product_identities_skus_users_all__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "etoraman")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_users_all__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "etoraman")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_users_all__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "etoraman")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_users_all_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "etoraman")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_put_internal_product_identities_skus_users_all_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/internal-product-identities/skus") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "etoraman")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_identity_reject_http_route__0__spp_identity_data_test_zalandoapis_com____: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_identity_reject_http_route__0__spp_product_identity_api_smart_product_platform_test_zalan_do____: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_identity_reject_http_route__0__spp_product_identity_smart_product_platform_test_zalan_do____: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_identity_reject_http_route__spp_identity_data_test_zalandoapis_com____spp_product_identity_master_574: Host(/^(spp-identity-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_reject_http_route__spp_product_identity_api_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-api[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_reject_http_route__spp_product_identity_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_reject_http_route_spp_product_identity_master_574__0__spp_product_identity_master_574_smart_product_platform_test_zalan_do____: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_identity_reject_http_route_spp_product_identity_master_574__spp_product_identity_master_574_smart_product_platform_test_zalan_do____spp_product_identity_master_574: Host(/^(spp-product-identity-master-574[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-m2t7jm2pg4ba61vkp25cnftms:0", "2021-11-08T18:00:25Z")
  -> apiUsageMonitoring("{\"api_id\":\"a7281c5e-14af-4bd1-970c-8783df20b233\",\"application_id\":\"spp-product-identity\",\"path_templates\":[\"/api/gtin-allocations\",\"/api/gtin-assignments\",\"/api/gtin-assignments-history-search\",\"/api/gtin-assignments-search\",\"/api/identities\",\"/api/identities-hierarchies\",\"/api/identity-hierarchies\",\"/api/sku-hierarchies\",\"/api/sku-hierarchies/{sku}\",\"/api/skus\",\"/api/skus-validation-requests\",\"/api/skus/{sku}\",\"/api/skus/{sku}/enablement\"]}")
  -> "http://10.2.87.182:8080";

kube_default__spp_product_identity_reject_http_route_spp_product_identity_pr_516_4__0__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_identity_reject_http_route_spp_product_identity_pr_516_4__spp_product_identity_pr_516_4_smart_product_platform_test_zalan_do____spp_product_identity_pr_516_4: Host(/^(spp-product-identity-pr-516-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_default_404_route__0__spp_product_search_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_search_default_404_route__0__spp_product_search_test_zalandoapis_com____: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_search_default_404_route__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_default_404_route__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302_https_redirect: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_search_default_404_route__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_default_404_route__spp_product_search_test_zalandoapis_com____spp_product_search_master_302_https_redirect: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_search_default_404_route_spp_product_search_master_301__0__spp_product_search_master_301_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_search_default_404_route_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_default_404_route_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301_https_redirect: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_search_default_404_route_spp_product_search_master_302__0__spp_product_search_master_302_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_search_default_404_route_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_default_404_route_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302_https_redirect: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_admins__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_admins__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_admins_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_admins_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_all__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_all__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_all_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_rl_all_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsblockorderarticlesrelease__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_block-order-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_block-order-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsblockorderarticlesrelease__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_block-order-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_block-order-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsblockorderarticlesrelease_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_block-order-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_block-order-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsblockorderarticlesrelease_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_block-order-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_block-order-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsbuyingarticles__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_buying-articles", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsbuyingarticles__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_buying-articles", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsbuyingarticles_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_buying-articles", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsbuyingarticles_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_buying-articles", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupscareservice__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_care-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_care-service", 4200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupscareservice__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_care-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_care-service", 4200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupscareservice_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_care-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_care-service", 4200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_rl_service_stupscareservice_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_care-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_care-service", 4200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupscustomsproductservice__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_customs-product-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_customs-product-service", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupscustomsproductservice__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_customs-product-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_customs-product-service", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupscustomsproductservice_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_customs-product-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_customs-product-service", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_rl_service_stupscustomsproductservice_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_customs-product-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_customs-product-service", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsidcgateway__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_idc-gateway")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_idc-gateway", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsidcgateway__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_idc-gateway")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_idc-gateway", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsidcgateway_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_idc-gateway")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_idc-gateway", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsidcgateway_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_idc-gateway")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_idc-gateway", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupslogisticsadapterdocdata__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_logistics-adapter-docdata")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_logistics-adapter-docdata", 4500, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupslogisticsadapterdocdata__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_logistics-adapter-docdata")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_logistics-adapter-docdata", 4500, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupslogisticsadapterdocdata_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_logistics-adapter-docdata")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_logistics-adapter-docdata", 4500, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_rl_service_stupslogisticsadapterdocdata_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_logistics-adapter-docdata")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_logistics-adapter-docdata", 4500, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupslogisticsarticleinterface__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_logistics-article-interface", 10800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupslogisticsarticleinterface__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_logistics-article-interface", 10800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupslogisticsarticleinterface_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_logistics-article-interface", 10800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_rl_service_stupslogisticsarticleinterface_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_logistics-article-interface")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_logistics-article-interface", 10800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsnewhopesquirrellive__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_newhope-squirrel-live")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_newhope-squirrel-live", 1500, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsnewhopesquirrellive__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_newhope-squirrel-live")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_newhope-squirrel-live", 1500, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsnewhopesquirrellive_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_newhope-squirrel-live")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_newhope-squirrel-live", 1500, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsnewhopesquirrellive_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_newhope-squirrel-live")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_newhope-squirrel-live", 1500, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsplatformminuet__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_platform-minuet", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsplatformminuet__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_platform-minuet", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsplatformminuet_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_platform-minuet", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsplatformminuet_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_platform-minuet", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsras__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_ras")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_ras", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsras__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_ras")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_ras", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsras_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_ras")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_ras", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_rl_service_stupsras_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_ras")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_ras", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupszoutletsdojigger__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_zoutlets-dojigger")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_zoutlets-dojigger", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupszoutletsdojigger__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_zoutlets-dojigger")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_zoutlets-dojigger", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_service_stupszoutletsdojigger_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_zoutlets-dojigger")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_zoutlets-dojigger", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_rl_service_stupszoutletsdojigger_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_zoutlets-dojigger")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_stups_zoutlets-dojigger", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_users_all__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_users_all__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_rl_users_all_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_rl_users_all_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_wildcard_admins__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_wildcard_admins__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_wildcard_admins_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_wildcard_admins_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_all__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_all__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_all_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_all_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_service_stupsblockorderarticlesrelease__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries/**") && JWTPayloadAllKV("sub", "stups_block-order-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET_stups_block-order-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_service_stupsblockorderarticlesrelease__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries/**") && JWTPayloadAllKV("sub", "stups_block-order-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET_stups_block-order-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_service_stupsblockorderarticlesrelease_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries/**") && JWTPayloadAllKV("sub", "stups_block-order-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET_stups_block-order-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_service_stupsblockorderarticlesrelease_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries/**") && JWTPayloadAllKV("sub", "stups_block-order-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET_stups_block-order-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_service_stupsbuyingarticles__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries/**") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET_stups_buying-articles", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_service_stupsbuyingarticles__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries/**") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET_stups_buying-articles", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_service_stupsbuyingarticles_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries/**") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET_stups_buying-articles", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_service_stupsbuyingarticles_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries/**") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET_stups_buying-articles", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_service_stupsplatformminuet__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries/**") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET_stups_platform-minuet", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_service_stupsplatformminuet__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries/**") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET_stups_platform-minuet", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_service_stupsplatformminuet_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries/**") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET_stups_platform-minuet", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_service_stupsplatformminuet_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries/**") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET_stups_platform-minuet", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_users_all__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET_users", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_users_all__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET_users", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_users_all_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET_users", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_get_api_product_queries_wildcard_rl_users_all_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries-wildcard_GET_users", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_post_api_product_queries_admins__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_post_api_product_queries_admins__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_post_api_product_queries_admins_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_post_api_product_queries_admins_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_post_api_product_queries_rl_all__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_post_api_product_queries_rl_all__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_post_api_product_queries_rl_all_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_post_api_product_queries_rl_all_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_post_api_product_queries_rl_service_stupsblockorderarticlesrelease__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_block-order-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST_stups_block-order-articles-release", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_post_api_product_queries_rl_service_stupsblockorderarticlesrelease__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_block-order-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST_stups_block-order-articles-release", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_post_api_product_queries_rl_service_stupsblockorderarticlesrelease_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_block-order-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST_stups_block-order-articles-release", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_post_api_product_queries_rl_service_stupsblockorderarticlesrelease_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_block-order-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST_stups_block-order-articles-release", 3000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_post_api_product_queries_rl_service_stupsbuyingarticles__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST_stups_buying-articles", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_post_api_product_queries_rl_service_stupsbuyingarticles__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST_stups_buying-articles", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_post_api_product_queries_rl_service_stupsbuyingarticles_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST_stups_buying-articles", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_post_api_product_queries_rl_service_stupsbuyingarticles_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_buying-articles")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST_stups_buying-articles", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_post_api_product_queries_rl_service_stupsplatformminuet__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST_stups_platform-minuet", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_post_api_product_queries_rl_service_stupsplatformminuet__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST_stups_platform-minuet", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_post_api_product_queries_rl_service_stupsplatformminuet_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST_stups_platform-minuet", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_post_api_product_queries_rl_service_stupsplatformminuet_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("sub", "stups_platform-minuet")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST_stups_platform-minuet", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_post_api_product_queries_rl_users_all__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST_users", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_post_api_product_queries_rl_users_all__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST_users", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_post_api_product_queries_rl_users_all_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST_users", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_post_api_product_queries_rl_users_all_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search_api-product-queries_POST_users", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_pre_prod_default_404_route__0__spp_product_search_pre_prod_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search-pre-prod[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_default_404_route__spp_product_search_pre_prod_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_default_404_route__spp_product_search_pre_prod_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301_https_redirect: Host(/^(spp-product-search-pre-prod[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_default_404_route_spp_product_search_pre_prod_master_299__0__spp_product_search_pre_prod_master_299_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search-pre-prod-master-299[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_default_404_route_spp_product_search_pre_prod_master_299__spp_product_search_pre_prod_master_299_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_299: Host(/^(spp-product-search-pre-prod-master-299[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_default_404_route_spp_product_search_pre_prod_master_299__spp_product_search_pre_prod_master_299_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_299_https_redirect: Host(/^(spp-product-search-pre-prod-master-299[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_default_404_route_spp_product_search_pre_prod_master_301__0__spp_product_search_pre_prod_master_301_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search-pre-prod-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_default_404_route_spp_product_search_pre_prod_master_301__spp_product_search_pre_prod_master_301_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_default_404_route_spp_product_search_pre_prod_master_301__spp_product_search_pre_prod_master_301_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301_https_redirect: Host(/^(spp-product-search-pre-prod-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_get_api_product_queries_admins__spp_product_search_pre_prod_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_get_api_product_queries_admins_spp_product_search_pre_prod_master_299__spp_product_search_pre_prod_master_299_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_299: Host(/^(spp-product-search-pre-prod-master-299[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_get_api_product_queries_admins_spp_product_search_pre_prod_master_301__spp_product_search_pre_prod_master_301_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_get_api_product_queries_rl_all__spp_product_search_pre_prod_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search-pre-prod_api-product-queries_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_get_api_product_queries_rl_all_spp_product_search_pre_prod_master_299__spp_product_search_pre_prod_master_299_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_299: Host(/^(spp-product-search-pre-prod-master-299[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search-pre-prod_api-product-queries_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_get_api_product_queries_rl_all_spp_product_search_pre_prod_master_301__spp_product_search_pre_prod_master_301_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search-pre-prod_api-product-queries_GET", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_get_api_product_queries_rl_users_all__spp_product_search_pre_prod_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search-pre-prod_api-product-queries_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_get_api_product_queries_rl_users_all_spp_product_search_pre_prod_master_299__spp_product_search_pre_prod_master_299_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_299: Host(/^(spp-product-search-pre-prod-master-299[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search-pre-prod_api-product-queries_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_get_api_product_queries_rl_users_all_spp_product_search_pre_prod_master_301__spp_product_search_pre_prod_master_301_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search-pre-prod_api-product-queries_GET_users", 300, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_get_api_product_queries_wildcard_admins__spp_product_search_pre_prod_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_get_api_product_queries_wildcard_admins_spp_product_search_pre_prod_master_299__spp_product_search_pre_prod_master_299_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_299: Host(/^(spp-product-search-pre-prod-master-299[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_get_api_product_queries_wildcard_admins_spp_product_search_pre_prod_master_301__spp_product_search_pre_prod_master_301_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_get_api_product_queries_wildcard_rl_all__spp_product_search_pre_prod_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search-pre-prod_api-product-queries-wildcard_GET", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_get_api_product_queries_wildcard_rl_all_spp_product_search_pre_prod_master_299__spp_product_search_pre_prod_master_299_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_299: Host(/^(spp-product-search-pre-prod-master-299[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search-pre-prod_api-product-queries-wildcard_GET", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_get_api_product_queries_wildcard_rl_all_spp_product_search_pre_prod_master_301__spp_product_search_pre_prod_master_301_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search-pre-prod_api-product-queries-wildcard_GET", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_get_api_product_queries_wildcard_rl_users_all__spp_product_search_pre_prod_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search-pre-prod_api-product-queries-wildcard_GET_users", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_get_api_product_queries_wildcard_rl_users_all_spp_product_search_pre_prod_master_299__spp_product_search_pre_prod_master_299_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_299: Host(/^(spp-product-search-pre-prod-master-299[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search-pre-prod_api-product-queries-wildcard_GET_users", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_get_api_product_queries_wildcard_rl_users_all_spp_product_search_pre_prod_master_301__spp_product_search_pre_prod_master_301_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search-pre-prod_api-product-queries-wildcard_GET_users", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_post_api_product_queries_admins__spp_product_search_pre_prod_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_post_api_product_queries_admins_spp_product_search_pre_prod_master_299__spp_product_search_pre_prod_master_299_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_299: Host(/^(spp-product-search-pre-prod-master-299[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_post_api_product_queries_admins_spp_product_search_pre_prod_master_301__spp_product_search_pre_prod_master_301_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "dgordon")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_post_api_product_queries_rl_all__spp_product_search_pre_prod_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search-pre-prod_api-product-queries_POST", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_post_api_product_queries_rl_all_spp_product_search_pre_prod_master_299__spp_product_search_pre_prod_master_299_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_299: Host(/^(spp-product-search-pre-prod-master-299[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search-pre-prod_api-product-queries_POST", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_post_api_product_queries_rl_all_spp_product_search_pre_prod_master_301__spp_product_search_pre_prod_master_301_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search-pre-prod_api-product-queries_POST", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_post_api_product_queries_rl_users_all__spp_product_search_pre_prod_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search-pre-prod_api-product-queries_POST_users", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_post_api_product_queries_rl_users_all_spp_product_search_pre_prod_master_299__spp_product_search_pre_prod_master_299_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_299: Host(/^(spp-product-search-pre-prod-master-299[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search-pre-prod_api-product-queries_POST_users", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_post_api_product_queries_rl_users_all_spp_product_search_pre_prod_master_301__spp_product_search_pre_prod_master_301_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-product-search-pre-prod_api-product-queries_POST_users", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_reject_http_route__0__spp_product_search_pre_prod_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search-pre-prod[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_reject_http_route__spp_product_search_pre_prod_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_pre_prod_reject_http_route_spp_product_search_pre_prod_master_299__0__spp_product_search_pre_prod_master_299_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search-pre-prod-master-299[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_reject_http_route_spp_product_search_pre_prod_master_299__spp_product_search_pre_prod_master_299_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_299: Host(/^(spp-product-search-pre-prod-master-299[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_reject_http_route_spp_product_search_pre_prod_master_301__0__spp_product_search_pre_prod_master_301_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search-pre-prod-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_search_pre_prod_reject_http_route_spp_product_search_pre_prod_master_301__spp_product_search_pre_prod_master_301_smart_product_platform_test_zalan_do____spp_product_search_pre_prod_master_301: Host(/^(spp-product-search-pre-prod-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/product-queries\",\"/product-queries/{cursor}\"]}")
  -> "http://10.2.39.6:8080";

kube_default__spp_product_search_rds_default_404_route__0__spp_product_search_rds_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search-rds[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_search_rds_default_404_route__0__spp_product_search_rds_test_zalandoapis_com____: Host(/^(spp-product-search-rds-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_search_rds_default_404_route__spp_product_search_rds_smart_product_platform_test_zalan_do____spp_product_search_rds: Host(/^(spp-product-search-rds[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_rds_default_404_route__spp_product_search_rds_smart_product_platform_test_zalan_do____spp_product_search_rds_https_redirect: Host(/^(spp-product-search-rds[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_search_rds_default_404_route__spp_product_search_rds_test_zalandoapis_com____spp_product_search_rds: Host(/^(spp-product-search-rds-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_rds_default_404_route__spp_product_search_rds_test_zalandoapis_com____spp_product_search_rds_https_redirect: Host(/^(spp-product-search-rds-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_search_rds_get_api_product_queries_admins__spp_product_search_rds_smart_product_platform_test_zalan_do____spp_product_search_rds: Host(/^(spp-product-search-rds[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "pslowinski")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_rds_get_api_product_queries_admins__spp_product_search_rds_test_zalandoapis_com____spp_product_search_rds: Host(/^(spp-product-search-rds-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "pslowinski")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_rds_get_api_product_queries_all__spp_product_search_rds_smart_product_platform_test_zalan_do____spp_product_search_rds: Host(/^(spp-product-search-rds[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_rds_get_api_product_queries_all__spp_product_search_rds_test_zalandoapis_com____spp_product_search_rds: Host(/^(spp-product-search-rds-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_rds_get_api_product_queries_wildcard_admins__spp_product_search_rds_smart_product_platform_test_zalan_do____spp_product_search_rds: Host(/^(spp-product-search-rds[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "pslowinski")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_rds_get_api_product_queries_wildcard_admins__spp_product_search_rds_test_zalandoapis_com____spp_product_search_rds: Host(/^(spp-product-search-rds-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "pslowinski")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_rds_get_api_product_queries_wildcard_all__spp_product_search_rds_smart_product_platform_test_zalan_do____spp_product_search_rds: Host(/^(spp-product-search-rds[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_rds_get_api_product_queries_wildcard_all__spp_product_search_rds_test_zalandoapis_com____spp_product_search_rds: Host(/^(spp-product-search-rds-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_rds_post_api_product_queries_admins__spp_product_search_rds_smart_product_platform_test_zalan_do____spp_product_search_rds: Host(/^(spp-product-search-rds[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "pslowinski")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_rds_post_api_product_queries_admins__spp_product_search_rds_test_zalandoapis_com____spp_product_search_rds: Host(/^(spp-product-search-rds-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "pslowinski")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_rds_post_api_product_queries_all__spp_product_search_rds_smart_product_platform_test_zalan_do____spp_product_search_rds: Host(/^(spp-product-search-rds[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_rds_post_api_product_queries_all__spp_product_search_rds_test_zalandoapis_com____spp_product_search_rds: Host(/^(spp-product-search-rds-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_rds_reject_http_route__0__spp_product_search_rds_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search-rds[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_search_rds_reject_http_route__0__spp_product_search_rds_test_zalandoapis_com____: Host(/^(spp-product-search-rds-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_search_rds_reject_http_route__spp_product_search_rds_smart_product_platform_test_zalan_do____spp_product_search_rds: Host(/^(spp-product-search-rds[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_rds_reject_http_route__spp_product_search_rds_test_zalandoapis_com____spp_product_search_rds: Host(/^(spp-product-search-rds-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_reject_http_route__0__spp_product_search_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_search_reject_http_route__0__spp_product_search_test_zalandoapis_com____: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_search_reject_http_route__spp_product_search_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_reject_http_route__spp_product_search_test_zalandoapis_com____spp_product_search_master_302: Host(/^(spp-product-search-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_reject_http_route_spp_product_search_master_301__0__spp_product_search_master_301_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_search_reject_http_route_spp_product_search_master_301__spp_product_search_master_301_smart_product_platform_test_zalan_do____spp_product_search_master_301: Host(/^(spp-product-search-master-301[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_reject_http_route_spp_product_search_master_302__0__spp_product_search_master_302_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_search_reject_http_route_spp_product_search_master_302__spp_product_search_master_302_smart_product_platform_test_zalan_do____spp_product_search_master_302: Host(/^(spp-product-search-master-302[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"c1295139-fdd2-4eae-a176-16e1edbcad03\",\"application_id\":\"spp-product-search\",\"path_templates\":[\"/api/product-queries\",\"/api/product-queries/{cursor}\"]}")
  -> "http://10.2.38.134:8080";

kube_default__spp_product_search_second_default_404_route__0__spp_product_search_second_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search-second[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_search_second_default_404_route__0__spp_product_search_second_test_zalandoapis_com____: Host(/^(spp-product-search-second-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_search_second_default_404_route__spp_product_search_second_smart_product_platform_test_zalan_do____spp_product_search_second: Host(/^(spp-product-search-second[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_second_default_404_route__spp_product_search_second_smart_product_platform_test_zalan_do____spp_product_search_second_https_redirect: Host(/^(spp-product-search-second[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_search_second_default_404_route__spp_product_search_second_test_zalandoapis_com____spp_product_search_second: Host(/^(spp-product-search-second-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_second_default_404_route__spp_product_search_second_test_zalandoapis_com____spp_product_search_second_https_redirect: Host(/^(spp-product-search-second-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_search_second_get_api_product_queries_admins__spp_product_search_second_smart_product_platform_test_zalan_do____spp_product_search_second: Host(/^(spp-product-search-second[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "pslowinski")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_second_get_api_product_queries_admins__spp_product_search_second_test_zalandoapis_com____spp_product_search_second: Host(/^(spp-product-search-second-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "pslowinski")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_second_get_api_product_queries_all__spp_product_search_second_smart_product_platform_test_zalan_do____spp_product_search_second: Host(/^(spp-product-search-second[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_second_get_api_product_queries_all__spp_product_search_second_test_zalandoapis_com____spp_product_search_second: Host(/^(spp-product-search-second-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_second_post_api_product_queries_admins__spp_product_search_second_smart_product_platform_test_zalan_do____spp_product_search_second: Host(/^(spp-product-search-second[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "pslowinski")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_second_post_api_product_queries_admins__spp_product_search_second_test_zalandoapis_com____spp_product_search_second: Host(/^(spp-product-search-second-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "pslowinski")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_second_post_api_product_queries_all__spp_product_search_second_smart_product_platform_test_zalan_do____spp_product_search_second: Host(/^(spp-product-search-second[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_second_post_api_product_queries_all__spp_product_search_second_test_zalandoapis_com____spp_product_search_second: Host(/^(spp-product-search-second-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_second_reject_http_route__0__spp_product_search_second_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search-second[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_search_second_reject_http_route__0__spp_product_search_second_test_zalandoapis_com____: Host(/^(spp-product-search-second-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_search_second_reject_http_route__spp_product_search_second_smart_product_platform_test_zalan_do____spp_product_search_second: Host(/^(spp-product-search-second[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_second_reject_http_route__spp_product_search_second_test_zalandoapis_com____spp_product_search_second: Host(/^(spp-product-search-second-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_spilo_default_404_route__0__spp_product_search_spilo_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search-spilo[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_search_spilo_default_404_route__0__spp_product_search_spilo_test_zalandoapis_com____: Host(/^(spp-product-search-spilo-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__spp_product_search_spilo_default_404_route__spp_product_search_spilo_smart_product_platform_test_zalan_do____spp_product_search_spilo: Host(/^(spp-product-search-spilo[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_spilo_default_404_route__spp_product_search_spilo_smart_product_platform_test_zalan_do____spp_product_search_spilo_https_redirect: Host(/^(spp-product-search-spilo[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_search_spilo_default_404_route__spp_product_search_spilo_test_zalandoapis_com____spp_product_search_spilo: Host(/^(spp-product-search-spilo-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_spilo_default_404_route__spp_product_search_spilo_test_zalandoapis_com____spp_product_search_spilo_https_redirect: Host(/^(spp-product-search-spilo-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_search_spilo_get_api_product_queries_admins__spp_product_search_spilo_smart_product_platform_test_zalan_do____spp_product_search_spilo: Host(/^(spp-product-search-spilo[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "pslowinski")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_spilo_get_api_product_queries_admins__spp_product_search_spilo_test_zalandoapis_com____spp_product_search_spilo: Host(/^(spp-product-search-spilo-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "pslowinski")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_spilo_get_api_product_queries_all__spp_product_search_spilo_smart_product_platform_test_zalan_do____spp_product_search_spilo: Host(/^(spp-product-search-spilo[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_spilo_get_api_product_queries_all__spp_product_search_spilo_test_zalandoapis_com____spp_product_search_spilo: Host(/^(spp-product-search-spilo-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_spilo_get_api_product_queries_wildcard_admins__spp_product_search_spilo_smart_product_platform_test_zalan_do____spp_product_search_spilo: Host(/^(spp-product-search-spilo[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "pslowinski")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_spilo_get_api_product_queries_wildcard_admins__spp_product_search_spilo_test_zalandoapis_com____spp_product_search_spilo: Host(/^(spp-product-search-spilo-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries/**") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "pslowinski")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_spilo_get_api_product_queries_wildcard_all__spp_product_search_spilo_smart_product_platform_test_zalan_do____spp_product_search_spilo: Host(/^(spp-product-search-spilo[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_spilo_get_api_product_queries_wildcard_all__spp_product_search_spilo_test_zalandoapis_com____spp_product_search_spilo: Host(/^(spp-product-search-spilo-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries/**")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_spilo_post_api_product_queries_admins__spp_product_search_spilo_smart_product_platform_test_zalan_do____spp_product_search_spilo: Host(/^(spp-product-search-spilo[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "pslowinski")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_spilo_post_api_product_queries_admins__spp_product_search_spilo_test_zalandoapis_com____spp_product_search_spilo: Host(/^(spp-product-search-spilo-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/product-queries") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "jocarroll", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "abaquero", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "pslowinski")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_spilo_post_api_product_queries_all__spp_product_search_spilo_smart_product_platform_test_zalan_do____spp_product_search_spilo: Host(/^(spp-product-search-spilo[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_spilo_post_api_product_queries_all__spp_product_search_spilo_test_zalandoapis_com____spp_product_search_spilo: Host(/^(spp-product-search-spilo-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/product-queries")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_spilo_reject_http_route__0__spp_product_search_spilo_smart_product_platform_test_zalan_do____: Host(/^(spp-product-search-spilo[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_search_spilo_reject_http_route__0__spp_product_search_spilo_test_zalandoapis_com____: Host(/^(spp-product-search-spilo-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__spp_product_search_spilo_reject_http_route__spp_product_search_spilo_smart_product_platform_test_zalan_do____spp_product_search_spilo: Host(/^(spp-product-search-spilo[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_search_spilo_reject_http_route__spp_product_search_spilo_test_zalandoapis_com____spp_product_search_spilo: Host(/^(spp-product-search-spilo-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_utils__spp_product_utils_smart_product_platform_test_zalan_do____spp_product_utils_pr_10_3: Host(/^(spp-product-utils[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> <roundRobin, "http://10.2.80.40:9000", "http://10.2.88.8:9000">;

kube_default__spp_product_utils__spp_product_utils_smart_product_platform_test_zalan_do____spp_product_utils_pr_10_3_https_redirect: Host(/^(spp-product-utils[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_utils_master_1__spp_product_utils_master_1_smart_product_platform_test_zalan_do____spp_product_utils_master_1: Host(/^(spp-product-utils-master-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_utils_master_1__spp_product_utils_master_1_smart_product_platform_test_zalan_do____spp_product_utils_master_1_https_redirect: Host(/^(spp-product-utils-master-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_utils_master_2__spp_product_utils_master_2_smart_product_platform_test_zalan_do____spp_product_utils_master_2: Host(/^(spp-product-utils-master-2[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_utils_master_2__spp_product_utils_master_2_smart_product_platform_test_zalan_do____spp_product_utils_master_2_https_redirect: Host(/^(spp-product-utils-master-2[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_utils_master_3__spp_product_utils_master_3_smart_product_platform_test_zalan_do____spp_product_utils_master_3: Host(/^(spp-product-utils-master-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_utils_master_3__spp_product_utils_master_3_smart_product_platform_test_zalan_do____spp_product_utils_master_3_https_redirect: Host(/^(spp-product-utils-master-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_utils_pr_10_1__spp_product_utils_pr_10_1_smart_product_platform_test_zalan_do____spp_product_utils_pr_10_1: Host(/^(spp-product-utils-pr-10-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_utils_pr_10_1__spp_product_utils_pr_10_1_smart_product_platform_test_zalan_do____spp_product_utils_pr_10_1_https_redirect: Host(/^(spp-product-utils-pr-10-1[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_utils_pr_10_3__spp_product_utils_pr_10_3_smart_product_platform_test_zalan_do____spp_product_utils_pr_10_3: Host(/^(spp-product-utils-pr-10-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> <roundRobin, "http://10.2.80.40:9000", "http://10.2.88.8:9000">;

kube_default__spp_product_utils_pr_10_3__spp_product_utils_pr_10_3_smart_product_platform_test_zalan_do____spp_product_utils_pr_10_3_https_redirect: Host(/^(spp-product-utils-pr-10-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_product_utils_pr_8_57__spp_product_utils_pr_8_57_smart_product_platform_test_zalan_do____spp_product_utils_pr_8_57: Host(/^(spp-product-utils-pr-8-57[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("^/+", "/")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__spp_product_utils_pr_8_57__spp_product_utils_pr_8_57_smart_product_platform_test_zalan_do____spp_product_utils_pr_8_57_https_redirect: Host(/^(spp-product-utils-pr-8-57[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__sszuecs_demo_kiac_1__sszuecs_test_smart_product_platform_test_zalan_do____sszuecs_kiac_connect: Host(/^(sszuecs-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> clusterClientRatelimit("groupSzuecs", 400, "10s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__sszuecs_demo_kiac_1__sszuecs_test_smart_product_platform_test_zalan_do____sszuecs_kiac_connect_https_redirect: Host(/^(sszuecs-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__sugarcane_default_404_route__0__spp_commodity_group_data_test_zalandoapis_com____: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__sugarcane_default_404_route__0__sugarcane_smart_product_platform_test_zalan_do____: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__sugarcane_default_404_route__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_default_404_route__spp_commodity_group_data_test_zalandoapis_com____sugarcane_https_redirect: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__sugarcane_default_404_route__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_default_404_route__sugarcane_smart_product_platform_test_zalan_do____sugarcane_https_redirect: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__sugarcane_get_api_commodity_groups_admins__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/commodity-groups") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_admins__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/commodity-groups") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_id_admins__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_id_admins__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_id_rl_all__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/commodity-groups/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_id_rl_all__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/commodity-groups/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_id_rl_service_stupssugarcaneperftest__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_GET_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_id_rl_service_stupssugarcaneperftest__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_GET_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_id_rl_users_all__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "fpobbig", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "wtuff", "https://identity.zalando.com/managed-id", "arastogi", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "igardas", "https://identity.zalando.com/managed-id", "ssinghi", "https://identity.zalando.com/managed-id", "apostolache", "https://identity.zalando.com/managed-id", "dalee", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "padorosz", "https://identity.zalando.com/managed-id", "zulabideen", "https://identity.zalando.com/managed-id", "akraskov", "https://identity.zalando.com/managed-id", "dabbassi", "https://identity.zalando.com/managed-id", "ydyakov", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "jmcneela", "https://identity.zalando.com/managed-id", "aflanagan")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_id_rl_users_all__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "fpobbig", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "wtuff", "https://identity.zalando.com/managed-id", "arastogi", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "igardas", "https://identity.zalando.com/managed-id", "ssinghi", "https://identity.zalando.com/managed-id", "apostolache", "https://identity.zalando.com/managed-id", "dalee", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "padorosz", "https://identity.zalando.com/managed-id", "zulabideen", "https://identity.zalando.com/managed-id", "akraskov", "https://identity.zalando.com/managed-id", "dabbassi", "https://identity.zalando.com/managed-id", "ydyakov", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "jmcneela", "https://identity.zalando.com/managed-id", "aflanagan")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_rl_all__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/commodity-groups")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_rl_all__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/commodity-groups")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_rl_service_stupsmasterdata__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups") && JWTPayloadAllKV("sub", "stups_masterdata")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups_GET_stups_masterdata", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_rl_service_stupsmasterdata__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups") && JWTPayloadAllKV("sub", "stups_masterdata")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups_GET_stups_masterdata", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_rl_service_stupssugarcaneperftest__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups") && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups_GET_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_rl_service_stupssugarcaneperftest__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups") && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups_GET_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_rl_users_all__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "sopletaev", "https://identity.zalando.com/managed-id", "fpobbig", "https://identity.zalando.com/managed-id", "rschmulian", "https://identity.zalando.com/managed-id", "ivarouchakis", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "wtuff", "https://identity.zalando.com/managed-id", "arastogi", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "igardas", "https://identity.zalando.com/managed-id", "ssinghi", "https://identity.zalando.com/managed-id", "apostolache", "https://identity.zalando.com/managed-id", "dstroynov", "https://identity.zalando.com/managed-id", "dalee", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "padorosz", "https://identity.zalando.com/managed-id", "zulabideen", "https://identity.zalando.com/managed-id", "akraskov", "https://identity.zalando.com/managed-id", "dabbassi", "https://identity.zalando.com/managed-id", "ydyakov", "https://identity.zalando.com/managed-id", "pabazsolt", "https://identity.zalando.com/managed-id", "mneverov", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "nkrapyvchenk", "https://identity.zalando.com/managed-id", "jmcneela", "https://identity.zalando.com/managed-id", "cyeh", "https://identity.zalando.com/managed-id", "aflanagan")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_rl_users_all__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "sopletaev", "https://identity.zalando.com/managed-id", "fpobbig", "https://identity.zalando.com/managed-id", "rschmulian", "https://identity.zalando.com/managed-id", "ivarouchakis", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "wtuff", "https://identity.zalando.com/managed-id", "arastogi", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "igardas", "https://identity.zalando.com/managed-id", "ssinghi", "https://identity.zalando.com/managed-id", "apostolache", "https://identity.zalando.com/managed-id", "dstroynov", "https://identity.zalando.com/managed-id", "dalee", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "padorosz", "https://identity.zalando.com/managed-id", "zulabideen", "https://identity.zalando.com/managed-id", "akraskov", "https://identity.zalando.com/managed-id", "dabbassi", "https://identity.zalando.com/managed-id", "ydyakov", "https://identity.zalando.com/managed-id", "pabazsolt", "https://identity.zalando.com/managed-id", "mneverov", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "nkrapyvchenk", "https://identity.zalando.com/managed-id", "jmcneela", "https://identity.zalando.com/managed-id", "cyeh", "https://identity.zalando.com/managed-id", "aflanagan")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_head_api_commodity_groups_id_admins__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_head_api_commodity_groups_id_admins__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_head_api_commodity_groups_id_rl_all__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/commodity-groups/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_HEAD", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_head_api_commodity_groups_id_rl_all__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/commodity-groups/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_HEAD", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_head_api_commodity_groups_id_rl_service_stupssppmasterattributes__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("sub", "stups_spp-master-attributes")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_HEAD_stups_spp-master-attributes", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_head_api_commodity_groups_id_rl_service_stupssppmasterattributes__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("sub", "stups_spp-master-attributes")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_HEAD_stups_spp-master-attributes", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_head_api_commodity_groups_id_rl_service_stupssugarcaneperftest__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_HEAD_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_head_api_commodity_groups_id_rl_service_stupssugarcaneperftest__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_HEAD_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_perf_test__sugarcane_perf_test_smart_product_platform_test_zalan_do____sugarcane_perf_test: Host(/^(sugarcane-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.80.8:8089";

kube_default__sugarcane_perf_test__sugarcane_perf_test_smart_product_platform_test_zalan_do____sugarcane_perf_test_https_redirect: Host(/^(sugarcane-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__sugarcane_post_api_internal_events_admins__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/events") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_post_api_internal_events_admins__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/events") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_post_api_internal_events_all__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/events")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_post_api_internal_events_all__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/events")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_put_api_commodity_groups_id_admins__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_put_api_commodity_groups_id_admins__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_put_api_commodity_groups_id_rl_all__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/commodity-groups/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_PUT", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_put_api_commodity_groups_id_rl_all__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/commodity-groups/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_PUT", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_put_api_commodity_groups_id_rl_service_stupssugarcaneperftest__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_PUT_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_put_api_commodity_groups_id_rl_service_stupssugarcaneperftest__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_PUT_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_put_api_commodity_groups_id_rl_users_all__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "wtuff", "https://identity.zalando.com/managed-id", "igardas", "https://identity.zalando.com/managed-id", "apostolache", "https://identity.zalando.com/managed-id", "dalee", "https://identity.zalando.com/managed-id", "padorosz", "https://identity.zalando.com/managed-id", "ydyakov", "https://identity.zalando.com/managed-id", "jmcneela", "https://identity.zalando.com/managed-id", "aflanagan")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_PUT_users", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_put_api_commodity_groups_id_rl_users_all__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "wtuff", "https://identity.zalando.com/managed-id", "igardas", "https://identity.zalando.com/managed-id", "apostolache", "https://identity.zalando.com/managed-id", "dalee", "https://identity.zalando.com/managed-id", "padorosz", "https://identity.zalando.com/managed-id", "ydyakov", "https://identity.zalando.com/managed-id", "jmcneela", "https://identity.zalando.com/managed-id", "aflanagan")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_PUT_users", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_reject_http_route__0__spp_commodity_group_data_test_zalandoapis_com____: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__sugarcane_reject_http_route__0__sugarcane_smart_product_platform_test_zalan_do____: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__sugarcane_reject_http_route__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_reject_http_route__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_test_pr_159_default_404_route__0__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__sugarcane_test_pr_159_default_404_route__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> "http://10.2.88.135:8080";

kube_default__sugarcane_test_pr_159_default_404_route__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159_https_redirect: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__sugarcane_test_pr_159_get_api_commodity_groups_admins__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/commodity-groups") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.88.135:8080";

kube_default__sugarcane_test_pr_159_get_api_commodity_groups_id_admins__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.88.135:8080";

kube_default__sugarcane_test_pr_159_get_api_commodity_groups_id_rl_all__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/commodity-groups/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane-test-pr-159_api-commodity-groups-id_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.88.135:8080";

kube_default__sugarcane_test_pr_159_get_api_commodity_groups_id_rl_service_stupssugarcaneperftest__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane-test-pr-159_api-commodity-groups-id_GET_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.88.135:8080";

kube_default__sugarcane_test_pr_159_get_api_commodity_groups_id_rl_users_all__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "fpobbig", "https://identity.zalando.com/managed-id", "wtuff", "https://identity.zalando.com/managed-id", "igardas", "https://identity.zalando.com/managed-id", "ssinghi", "https://identity.zalando.com/managed-id", "apostolache", "https://identity.zalando.com/managed-id", "dalee", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "padorosz", "https://identity.zalando.com/managed-id", "zulabideen", "https://identity.zalando.com/managed-id", "akraskov", "https://identity.zalando.com/managed-id", "ydyakov", "https://identity.zalando.com/managed-id", "jmcneela", "https://identity.zalando.com/managed-id", "aflanagan")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane-test-pr-159_api-commodity-groups-id_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.88.135:8080";

kube_default__sugarcane_test_pr_159_get_api_commodity_groups_rl_all__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/commodity-groups")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane-test-pr-159_api-commodity-groups_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.88.135:8080";

kube_default__sugarcane_test_pr_159_get_api_commodity_groups_rl_service_stupsmasterdata__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups") && JWTPayloadAllKV("sub", "stups_masterdata")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane-test-pr-159_api-commodity-groups_GET_stups_masterdata", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.88.135:8080";

kube_default__sugarcane_test_pr_159_get_api_commodity_groups_rl_service_stupssugarcaneperftest__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups") && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane-test-pr-159_api-commodity-groups_GET_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.88.135:8080";

kube_default__sugarcane_test_pr_159_get_api_commodity_groups_rl_users_all__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "fpobbig", "https://identity.zalando.com/managed-id", "wtuff", "https://identity.zalando.com/managed-id", "igardas", "https://identity.zalando.com/managed-id", "ssinghi", "https://identity.zalando.com/managed-id", "apostolache", "https://identity.zalando.com/managed-id", "dalee", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "padorosz", "https://identity.zalando.com/managed-id", "zulabideen", "https://identity.zalando.com/managed-id", "akraskov", "https://identity.zalando.com/managed-id", "ydyakov", "https://identity.zalando.com/managed-id", "jmcneela", "https://identity.zalando.com/managed-id", "aflanagan")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane-test-pr-159_api-commodity-groups_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.88.135:8080";

kube_default__sugarcane_test_pr_159_head_api_commodity_groups_id_admins__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.88.135:8080";

kube_default__sugarcane_test_pr_159_head_api_commodity_groups_id_rl_all__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/commodity-groups/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane-test-pr-159_api-commodity-groups-id_HEAD", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.88.135:8080";

kube_default__sugarcane_test_pr_159_head_api_commodity_groups_id_rl_service_stupssugarcaneperftest__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane-test-pr-159_api-commodity-groups-id_HEAD_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.88.135:8080";

kube_default__sugarcane_test_pr_159_post_api_internal_events_admins__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/events") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.88.135:8080";

kube_default__sugarcane_test_pr_159_post_api_internal_events_all__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/events")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.88.135:8080";

kube_default__sugarcane_test_pr_159_put_api_commodity_groups_id_admins__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.88.135:8080";

kube_default__sugarcane_test_pr_159_put_api_commodity_groups_id_rl_all__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/commodity-groups/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane-test-pr-159_api-commodity-groups-id_PUT", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.88.135:8080";

kube_default__sugarcane_test_pr_159_put_api_commodity_groups_id_rl_service_stupssugarcaneperftest__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups/:id") && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane-test-pr-159_api-commodity-groups-id_PUT_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.88.135:8080";

kube_default__sugarcane_test_pr_159_put_api_commodity_groups_id_rl_users_all__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/commodity-groups/:id") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "wtuff", "https://identity.zalando.com/managed-id", "igardas", "https://identity.zalando.com/managed-id", "apostolache", "https://identity.zalando.com/managed-id", "dalee", "https://identity.zalando.com/managed-id", "padorosz", "https://identity.zalando.com/managed-id", "ydyakov", "https://identity.zalando.com/managed-id", "jmcneela", "https://identity.zalando.com/managed-id", "aflanagan")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane-test-pr-159_api-commodity-groups-id_PUT_users", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.88.135:8080";

kube_default__sugarcane_test_pr_159_reject_http_route__0__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__sugarcane_test_pr_159_reject_http_route__sugarcane_test_pr_159_smart_product_platform_test_zalan_do____sugarcane_test_pr_159: Host(/^(sugarcane-test-pr-159[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-8a5e3ddj66vzx1dvetjx29nas:0", "2021-11-08T18:02:57Z")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane-test-pr-159\",\"path_templates\":[\"/commodity-groups\",\"/commodity-groups/{cg_code}\"]}")
  -> "http://10.2.88.135:8080";

kube_default__workbench__workbench_smart_product_platform_test_zalan_do____workbench_master_143: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Source("80.251.168.112/29", "185.85.220.0/22", "178.250.115.176/29", "213.216.219.160/29", "49.204.95.166", "121.243.44.34", "106.51.15.190", "106.51.247.2", "14.98.219.10", "14.98.218.250", "89.100.100.120/29", "217.173.110.16/29")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.69.75:8080";

kube_default__workbench__workbench_smart_product_platform_test_zalan_do____workbench_master_143_https_redirect: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000) && Source("80.251.168.112/29", "185.85.220.0/22", "178.250.115.176/29", "213.216.219.160/29", "49.204.95.166", "121.243.44.34", "106.51.15.190", "106.51.247.2", "14.98.219.10", "14.98.218.250", "89.100.100.120/29", "217.173.110.16/29")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__workbench__workbench_test_zalando_net____workbench_master_143: Host(/^(workbench-test[.]zalando[.]net[.]?(:[0-9]+)?)$/) && Source("80.251.168.112/29", "185.85.220.0/22", "178.250.115.176/29", "213.216.219.160/29", "49.204.95.166", "121.243.44.34", "106.51.15.190", "106.51.247.2", "14.98.219.10", "14.98.218.250", "89.100.100.120/29", "217.173.110.16/29")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.69.75:8080";

kube_default__workbench__workbench_test_zalando_net____workbench_master_143_https_redirect: Host(/^(workbench-test[.]zalando[.]net[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000) && Source("80.251.168.112/29", "185.85.220.0/22", "178.250.115.176/29", "213.216.219.160/29", "49.204.95.166", "121.243.44.34", "106.51.15.190", "106.51.247.2", "14.98.219.10", "14.98.218.250", "89.100.100.120/29", "217.173.110.16/29")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__workbench_brand_service_8__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/bsui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/bsui", "/coldbrew/bsui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_brand_service_8__workbench_test_zalando_net____: Host(/^(workbench-test[.]zalando[.]net[.]?(:[0-9]+)?)$/) && PathSubtree("/bsui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/bsui", "/coldbrew/bsui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_brand_service_api_9__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/brand-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://brand-service-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_brand_service_api_9__workbench_test_zalando_net____: Host(/^(workbench-test[.]zalando[.]net[.]?(:[0-9]+)?)$/) && PathSubtree("/api/brand-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://brand-service-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_bulk_update_12__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sbuui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/sbuui", "/coldbrew/sbuui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_bulk_update_12__workbench_test_zalando_net____: Host(/^(workbench-test[.]zalando[.]net[.]?(:[0-9]+)?)$/) && PathSubtree("/sbuui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/sbuui", "/coldbrew/sbuui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_bulk_update_api_13__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/sbuui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://spp-bulk-updater-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_bulk_update_api_13__workbench_test_zalando_net____: Host(/^(workbench-test[.]zalando[.]net[.]?(:[0-9]+)?)$/) && PathSubtree("/api/sbuui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://spp-bulk-updater-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_canary__workbench_smart_product_platform_test_zalan_do____workbench_master_143: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("x-zalando-coldbrew-canary", "true") && Source("80.251.168.112/29", "185.85.220.0/22", "178.250.115.176/29", "213.216.219.160/29", "49.204.95.166", "121.243.44.34", "106.51.15.190", "106.51.247.2", "14.98.219.10", "14.98.218.250", "89.100.100.120/29", "217.173.110.16/29")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.69.75:8080";

kube_default__workbench_canary__workbench_smart_product_platform_test_zalan_do____workbench_master_143_https_redirect: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Header("x-zalando-coldbrew-canary", "true") && Weight(1000) && Source("80.251.168.112/29", "185.85.220.0/22", "178.250.115.176/29", "213.216.219.160/29", "49.204.95.166", "121.243.44.34", "106.51.15.190", "106.51.247.2", "14.98.219.10", "14.98.218.250", "89.100.100.120/29", "217.173.110.16/29")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__workbench_canary_brand_service_7__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/bsui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/bsui", "/coldbrew/bsui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_canary_brand_service_api_8__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/brand-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://brand-service-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_canary_bulk_update_11__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sbuui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/sbuui", "/coldbrew/sbuui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_canary_bulk_update_api_12__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/sbuui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://spp-bulk-updater-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_canary_category_tree_5__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/ctui", "/coldbrew/ctui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_canary_category_tree_api_6__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/category-tree")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://category-tree-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_canary_get_product_9__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/ps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/ps", "/coldbrew/ps")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_canary_get_product_api_10__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/ps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://product-search-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_canary_gtin_management_1__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/gtin")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/gtin", "/coldbrew/gtin")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_canary_gtin_management_api_2__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/gtin")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://gtin-management.smart-product-platform-test.zalan.do";

kube_default__workbench_canary_master_attributes_3__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/maui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/maui", "/coldbrew/maui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_canary_master_attributes_api_4__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/master-attributes")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://master-attributes-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_canary_sct_14__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sct")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/sct", "/sizing/sct")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_canary_sct_api_15__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/sct")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://size-charts-tool.zizing-test.zalan.do";

kube_default__workbench_canary_sct_assets_13__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sct/static")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://size-charts-tool.zizing-test.zalan.do";

kube_default__workbench_canary_workbench_landing_0__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/wb/user-guide")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/wb/user-guide", "/wb/landing")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_category_tree_5__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/ctui", "/coldbrew/ctui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_category_tree_5__workbench_test_zalando_net____: Host(/^(workbench-test[.]zalando[.]net[.]?(:[0-9]+)?)$/) && PathSubtree("/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/ctui", "/coldbrew/ctui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_category_tree_api_6__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/category-tree")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://category-tree-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_category_tree_api_6__workbench_test_zalando_net____: Host(/^(workbench-test[.]zalando[.]net[.]?(:[0-9]+)?)$/) && PathSubtree("/api/category-tree")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://category-tree-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_category_tree_new_api_7__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> setRequestHeader("x-zalando-coldbrew-is-new", "true")
  -> preserveHost("false")
  -> "https://category-tree-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_category_tree_new_api_7__workbench_test_zalando_net____: Host(/^(workbench-test[.]zalando[.]net[.]?(:[0-9]+)?)$/) && PathSubtree("/api/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> setRequestHeader("x-zalando-coldbrew-is-new", "true")
  -> preserveHost("false")
  -> "https://category-tree-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_get_product_10__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/ps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/ps", "/coldbrew/ps")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_get_product_10__workbench_test_zalando_net____: Host(/^(workbench-test[.]zalando[.]net[.]?(:[0-9]+)?)$/) && PathSubtree("/ps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/ps", "/coldbrew/ps")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_get_product_api_11__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/ps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://product-search-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_get_product_api_11__workbench_test_zalando_net____: Host(/^(workbench-test[.]zalando[.]net[.]?(:[0-9]+)?)$/) && PathSubtree("/api/ps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://product-search-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_gtin_management_1__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/gtin")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/gtin", "/coldbrew/gtin")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_gtin_management_1__workbench_test_zalando_net____: Host(/^(workbench-test[.]zalando[.]net[.]?(:[0-9]+)?)$/) && PathSubtree("/gtin")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/gtin", "/coldbrew/gtin")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_gtin_management_api_2__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/gtin")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://gtin-management.smart-product-platform-test.zalan.do";

kube_default__workbench_gtin_management_api_2__workbench_test_zalando_net____: Host(/^(workbench-test[.]zalando[.]net[.]?(:[0-9]+)?)$/) && PathSubtree("/api/gtin")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://gtin-management.smart-product-platform-test.zalan.do";

kube_default__workbench_master_141__workbench_master_141_smart_product_platform_test_zalan_do____workbench_master_141: Host(/^(workbench-master-141[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Source("80.251.168.112/29", "185.85.220.0/22", "178.250.115.176/29", "213.216.219.160/29", "49.204.95.166", "121.243.44.34", "106.51.15.190", "106.51.247.2", "14.98.219.10", "14.98.218.250", "89.100.100.120/29", "217.173.110.16/29")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__workbench_master_141__workbench_master_141_smart_product_platform_test_zalan_do____workbench_master_141_https_redirect: Host(/^(workbench-master-141[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000) && Source("80.251.168.112/29", "185.85.220.0/22", "178.250.115.176/29", "213.216.219.160/29", "49.204.95.166", "121.243.44.34", "106.51.15.190", "106.51.247.2", "14.98.219.10", "14.98.218.250", "89.100.100.120/29", "217.173.110.16/29")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__workbench_master_141_brand_service_8__workbench_master_141_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-141[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/bsui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/bsui", "/coldbrew/bsui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_141_brand_service_api_9__workbench_master_141_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-141[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/brand-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://brand-service-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_master_141_bulk_update_12__workbench_master_141_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-141[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sbuui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/sbuui", "/coldbrew/sbuui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_141_bulk_update_api_13__workbench_master_141_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-141[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/sbuui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://spp-bulk-updater-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_master_141_category_tree_5__workbench_master_141_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-141[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/ctui", "/coldbrew/ctui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_141_category_tree_api_6__workbench_master_141_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-141[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/category-tree")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://category-tree-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_master_141_category_tree_new_api_7__workbench_master_141_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-141[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> setRequestHeader("x-zalando-coldbrew-is-new", "true")
  -> preserveHost("false")
  -> "https://category-tree-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_master_141_get_product_10__workbench_master_141_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-141[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/ps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/ps", "/coldbrew/ps")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_141_get_product_api_11__workbench_master_141_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-141[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/ps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://product-search-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_master_141_gtin_management_1__workbench_master_141_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-141[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/gtin")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/gtin", "/coldbrew/gtin")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_141_gtin_management_api_2__workbench_master_141_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-141[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/gtin")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://gtin-management.smart-product-platform-test.zalan.do";

kube_default__workbench_master_141_master_attributes_3__workbench_master_141_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-141[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/maui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/maui", "/coldbrew/maui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_141_master_attributes_api_4__workbench_master_141_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-141[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/master-attributes")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://master-attributes-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_master_141_sct_15__workbench_master_141_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-141[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sct")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/sct", "/sizing/sct")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_141_sct_api_16__workbench_master_141_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-141[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/sct")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://size-charts-tool.zizing-test.zalan.do";

kube_default__workbench_master_141_sct_assets_14__workbench_master_141_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-141[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sct/static")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://size-charts-tool.zizing-test.zalan.do";

kube_default__workbench_master_141_workbench_landing_0__workbench_master_141_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-141[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/wb/user-guide")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/wb/user-guide", "/wb/landing")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_142__workbench_master_142_smart_product_platform_test_zalan_do____workbench_master_142: Host(/^(workbench-master-142[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Source("80.251.168.112/29", "185.85.220.0/22", "178.250.115.176/29", "213.216.219.160/29", "49.204.95.166", "121.243.44.34", "106.51.15.190", "106.51.247.2", "14.98.219.10", "14.98.218.250", "89.100.100.120/29", "217.173.110.16/29")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__workbench_master_142__workbench_master_142_smart_product_platform_test_zalan_do____workbench_master_142_https_redirect: Host(/^(workbench-master-142[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000) && Source("80.251.168.112/29", "185.85.220.0/22", "178.250.115.176/29", "213.216.219.160/29", "49.204.95.166", "121.243.44.34", "106.51.15.190", "106.51.247.2", "14.98.219.10", "14.98.218.250", "89.100.100.120/29", "217.173.110.16/29")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__workbench_master_142_brand_service_8__workbench_master_142_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-142[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/bsui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/bsui", "/coldbrew/bsui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_142_brand_service_api_9__workbench_master_142_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-142[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/brand-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://brand-service-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_master_142_bulk_update_12__workbench_master_142_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-142[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sbuui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/sbuui", "/coldbrew/sbuui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_142_bulk_update_api_13__workbench_master_142_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-142[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/sbuui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://spp-bulk-updater-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_master_142_category_tree_5__workbench_master_142_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-142[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/ctui", "/coldbrew/ctui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_142_category_tree_api_6__workbench_master_142_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-142[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/category-tree")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://category-tree-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_master_142_category_tree_new_api_7__workbench_master_142_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-142[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> setRequestHeader("x-zalando-coldbrew-is-new", "true")
  -> preserveHost("false")
  -> "https://category-tree-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_master_142_get_product_10__workbench_master_142_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-142[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/ps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/ps", "/coldbrew/ps")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_142_get_product_api_11__workbench_master_142_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-142[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/ps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://product-search-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_master_142_gtin_management_1__workbench_master_142_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-142[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/gtin")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/gtin", "/coldbrew/gtin")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_142_gtin_management_api_2__workbench_master_142_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-142[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/gtin")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://gtin-management.smart-product-platform-test.zalan.do";

kube_default__workbench_master_142_master_attributes_3__workbench_master_142_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-142[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/maui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/maui", "/coldbrew/maui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_142_master_attributes_api_4__workbench_master_142_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-142[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/master-attributes")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://master-attributes-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_master_142_sct_15__workbench_master_142_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-142[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sct")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/sct", "/sizing/sct")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_142_sct_api_16__workbench_master_142_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-142[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/sct")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://size-charts-tool.zizing-test.zalan.do";

kube_default__workbench_master_142_sct_assets_14__workbench_master_142_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-142[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sct/static")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://size-charts-tool.zizing-test.zalan.do";

kube_default__workbench_master_142_workbench_landing_0__workbench_master_142_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-142[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/wb/user-guide")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/wb/user-guide", "/wb/landing")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_143__workbench_master_143_smart_product_platform_test_zalan_do____workbench_master_143: Host(/^(workbench-master-143[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Source("80.251.168.112/29", "185.85.220.0/22", "178.250.115.176/29", "213.216.219.160/29", "49.204.95.166", "121.243.44.34", "106.51.15.190", "106.51.247.2", "14.98.219.10", "14.98.218.250", "89.100.100.120/29", "217.173.110.16/29")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> "http://10.2.69.75:8080";

kube_default__workbench_master_143__workbench_master_143_smart_product_platform_test_zalan_do____workbench_master_143_https_redirect: Host(/^(workbench-master-143[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000) && Source("80.251.168.112/29", "185.85.220.0/22", "178.250.115.176/29", "213.216.219.160/29", "49.204.95.166", "121.243.44.34", "106.51.15.190", "106.51.247.2", "14.98.219.10", "14.98.218.250", "89.100.100.120/29", "217.173.110.16/29")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__workbench_master_143_brand_service_8__workbench_master_143_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-143[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/bsui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/bsui", "/coldbrew/bsui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_143_brand_service_api_9__workbench_master_143_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-143[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/brand-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://brand-service-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_master_143_bulk_update_12__workbench_master_143_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-143[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sbuui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/sbuui", "/coldbrew/sbuui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_143_bulk_update_api_13__workbench_master_143_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-143[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/sbuui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://spp-bulk-updater-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_master_143_category_tree_5__workbench_master_143_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-143[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/ctui", "/coldbrew/ctui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_143_category_tree_api_6__workbench_master_143_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-143[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/category-tree")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://category-tree-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_master_143_category_tree_new_api_7__workbench_master_143_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-143[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> setRequestHeader("x-zalando-coldbrew-is-new", "true")
  -> preserveHost("false")
  -> "https://category-tree-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_master_143_get_product_10__workbench_master_143_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-143[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/ps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/ps", "/coldbrew/ps")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_143_get_product_api_11__workbench_master_143_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-143[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/ps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://product-search-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_master_143_gtin_management_1__workbench_master_143_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-143[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/gtin")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/gtin", "/coldbrew/gtin")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_143_gtin_management_api_2__workbench_master_143_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-143[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/gtin")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://gtin-management.smart-product-platform-test.zalan.do";

kube_default__workbench_master_143_master_attributes_3__workbench_master_143_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-143[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/maui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/maui", "/coldbrew/maui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_143_master_attributes_api_4__workbench_master_143_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-143[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/master-attributes")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://master-attributes-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_master_143_sct_15__workbench_master_143_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-143[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sct")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/sct", "/sizing/sct")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_143_sct_api_16__workbench_master_143_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-143[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/sct")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://size-charts-tool.zizing-test.zalan.do";

kube_default__workbench_master_143_sct_assets_14__workbench_master_143_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-143[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sct/static")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://size-charts-tool.zizing-test.zalan.do";

kube_default__workbench_master_143_workbench_landing_0__workbench_master_143_smart_product_platform_test_zalan_do____: Host(/^(workbench-master-143[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/wb/user-guide")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/wb/user-guide", "/wb/landing")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_attributes_3__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/maui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/maui", "/coldbrew/maui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_attributes_3__workbench_test_zalando_net____: Host(/^(workbench-test[.]zalando[.]net[.]?(:[0-9]+)?)$/) && PathSubtree("/maui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/maui", "/coldbrew/maui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_master_attributes_api_4__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/master-attributes")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://master-attributes-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_master_attributes_api_4__workbench_test_zalando_net____: Host(/^(workbench-test[.]zalando[.]net[.]?(:[0-9]+)?)$/) && PathSubtree("/api/master-attributes")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://master-attributes-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_164_3__workbench_pr_164_3_smart_product_platform_test_zalan_do____workbench_pr_164_3: Host(/^(workbench-pr-164-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Source("80.251.168.112/29", "185.85.220.0/22", "178.250.115.176/29", "213.216.219.160/29", "49.204.95.166", "121.243.44.34", "106.51.15.190", "106.51.247.2", "14.98.219.10", "14.98.218.250", "89.100.100.120/29", "217.173.110.16/29")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__workbench_pr_164_3__workbench_pr_164_3_smart_product_platform_test_zalan_do____workbench_pr_164_3_https_redirect: Host(/^(workbench-pr-164-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000) && Source("80.251.168.112/29", "185.85.220.0/22", "178.250.115.176/29", "213.216.219.160/29", "49.204.95.166", "121.243.44.34", "106.51.15.190", "106.51.247.2", "14.98.219.10", "14.98.218.250", "89.100.100.120/29", "217.173.110.16/29")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__workbench_pr_164_3_brand_service_8__workbench_pr_164_3_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/bsui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/bsui", "/coldbrew/bsui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_164_3_brand_service_api_9__workbench_pr_164_3_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/brand-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://brand-service-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_164_3_bulk_update_12__workbench_pr_164_3_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sbuui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/sbuui", "/coldbrew/sbuui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_164_3_bulk_update_api_13__workbench_pr_164_3_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/sbuui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://spp-bulk-updater-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_164_3_category_tree_5__workbench_pr_164_3_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/ctui", "/coldbrew/ctui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_164_3_category_tree_api_6__workbench_pr_164_3_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/category-tree")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://category-tree-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_164_3_category_tree_new_api_7__workbench_pr_164_3_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> setRequestHeader("x-zalando-coldbrew-is-new", "true")
  -> preserveHost("false")
  -> "https://category-tree-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_164_3_get_product_10__workbench_pr_164_3_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/ps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/ps", "/coldbrew/ps")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_164_3_get_product_api_11__workbench_pr_164_3_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/ps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://product-search-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_164_3_gtin_management_1__workbench_pr_164_3_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/gtin")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/gtin", "/coldbrew/gtin")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_164_3_gtin_management_api_2__workbench_pr_164_3_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/gtin")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://gtin-management.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_164_3_master_attributes_3__workbench_pr_164_3_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/maui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/maui", "/coldbrew/maui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_164_3_master_attributes_api_4__workbench_pr_164_3_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/master-attributes")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://master-attributes-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_164_3_sct_15__workbench_pr_164_3_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sct")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/sct", "/sizing/sct")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_164_3_sct_api_16__workbench_pr_164_3_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/sct")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://size-charts-tool.zizing-test.zalan.do";

kube_default__workbench_pr_164_3_sct_assets_14__workbench_pr_164_3_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sct/static")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://size-charts-tool.zizing-test.zalan.do";

kube_default__workbench_pr_164_3_workbench_landing_0__workbench_pr_164_3_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-3[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/wb/user-guide")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/wb/user-guide", "/wb/landing")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_164_4__workbench_pr_164_4_smart_product_platform_test_zalan_do____workbench_pr_164_4: Host(/^(workbench-pr-164-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Source("80.251.168.112/29", "185.85.220.0/22", "178.250.115.176/29", "213.216.219.160/29", "49.204.95.166", "121.243.44.34", "106.51.15.190", "106.51.247.2", "14.98.219.10", "14.98.218.250", "89.100.100.120/29", "217.173.110.16/29")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__workbench_pr_164_4__workbench_pr_164_4_smart_product_platform_test_zalan_do____workbench_pr_164_4_https_redirect: Host(/^(workbench-pr-164-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000) && Source("80.251.168.112/29", "185.85.220.0/22", "178.250.115.176/29", "213.216.219.160/29", "49.204.95.166", "121.243.44.34", "106.51.15.190", "106.51.247.2", "14.98.219.10", "14.98.218.250", "89.100.100.120/29", "217.173.110.16/29")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__workbench_pr_164_4_brand_service_8__workbench_pr_164_4_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/bsui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/bsui", "/coldbrew/bsui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_164_4_brand_service_api_9__workbench_pr_164_4_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/brand-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://brand-service-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_164_4_bulk_update_12__workbench_pr_164_4_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sbuui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/sbuui", "/coldbrew/sbuui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_164_4_bulk_update_api_13__workbench_pr_164_4_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/sbuui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://spp-bulk-updater-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_164_4_category_tree_5__workbench_pr_164_4_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/ctui", "/coldbrew/ctui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_164_4_category_tree_api_6__workbench_pr_164_4_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/category-tree")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://category-tree-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_164_4_category_tree_new_api_7__workbench_pr_164_4_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> setRequestHeader("x-zalando-coldbrew-is-new", "true")
  -> preserveHost("false")
  -> "https://category-tree-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_164_4_get_product_10__workbench_pr_164_4_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/ps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/ps", "/coldbrew/ps")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_164_4_get_product_api_11__workbench_pr_164_4_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/ps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://product-search-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_164_4_gtin_management_1__workbench_pr_164_4_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/gtin")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/gtin", "/coldbrew/gtin")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_164_4_gtin_management_api_2__workbench_pr_164_4_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/gtin")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://gtin-management.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_164_4_master_attributes_3__workbench_pr_164_4_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/maui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/maui", "/coldbrew/maui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_164_4_master_attributes_api_4__workbench_pr_164_4_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/master-attributes")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://master-attributes-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_164_4_sct_15__workbench_pr_164_4_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sct")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/sct", "/sizing/sct")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_164_4_sct_api_16__workbench_pr_164_4_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/sct")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://size-charts-tool.zizing-test.zalan.do";

kube_default__workbench_pr_164_4_sct_assets_14__workbench_pr_164_4_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sct/static")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://size-charts-tool.zizing-test.zalan.do";

kube_default__workbench_pr_164_4_workbench_landing_0__workbench_pr_164_4_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-164-4[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/wb/user-guide")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/wb/user-guide", "/wb/landing")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_165_6__workbench_pr_165_6_smart_product_platform_test_zalan_do____workbench_pr_165_6: Host(/^(workbench-pr-165-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Source("80.251.168.112/29", "185.85.220.0/22", "178.250.115.176/29", "213.216.219.160/29", "49.204.95.166", "121.243.44.34", "106.51.15.190", "106.51.247.2", "14.98.219.10", "14.98.218.250", "89.100.100.120/29", "217.173.110.16/29")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> flowId("reuse")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__workbench_pr_165_6__workbench_pr_165_6_smart_product_platform_test_zalan_do____workbench_pr_165_6_https_redirect: Host(/^(workbench-pr-165-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000) && Source("80.251.168.112/29", "185.85.220.0/22", "178.250.115.176/29", "213.216.219.160/29", "49.204.95.166", "121.243.44.34", "106.51.15.190", "106.51.247.2", "14.98.219.10", "14.98.218.250", "89.100.100.120/29", "217.173.110.16/29")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__workbench_pr_165_6_brand_service_8__workbench_pr_165_6_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-165-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/bsui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/bsui", "/coldbrew/bsui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_165_6_brand_service_api_9__workbench_pr_165_6_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-165-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/brand-service")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://brand-service-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_165_6_bulk_update_12__workbench_pr_165_6_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-165-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sbuui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/sbuui", "/coldbrew/sbuui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_165_6_bulk_update_api_13__workbench_pr_165_6_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-165-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/sbuui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://spp-bulk-updater-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_165_6_category_tree_5__workbench_pr_165_6_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-165-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/ctui", "/coldbrew/ctui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_165_6_category_tree_api_6__workbench_pr_165_6_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-165-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/category-tree")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://category-tree-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_165_6_category_tree_new_api_7__workbench_pr_165_6_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-165-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/ctui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> setRequestHeader("x-zalando-coldbrew-is-new", "true")
  -> preserveHost("false")
  -> "https://category-tree-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_165_6_get_product_10__workbench_pr_165_6_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-165-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/ps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/ps", "/coldbrew/ps")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_165_6_get_product_api_11__workbench_pr_165_6_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-165-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/ps")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://product-search-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_165_6_gtin_management_1__workbench_pr_165_6_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-165-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/gtin")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/gtin", "/coldbrew/gtin")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_165_6_gtin_management_api_2__workbench_pr_165_6_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-165-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/gtin")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://gtin-management.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_165_6_master_attributes_3__workbench_pr_165_6_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-165-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/maui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/maui", "/coldbrew/maui")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_165_6_master_attributes_api_4__workbench_pr_165_6_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-165-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/master-attributes")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://master-attributes-ui.smart-product-platform-test.zalan.do";

kube_default__workbench_pr_165_6_sct_15__workbench_pr_165_6_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-165-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sct")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/sct", "/sizing/sct")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_pr_165_6_sct_api_16__workbench_pr_165_6_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-165-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/sct")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://size-charts-tool.zizing-test.zalan.do";

kube_default__workbench_pr_165_6_sct_assets_14__workbench_pr_165_6_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-165-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sct/static")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://size-charts-tool.zizing-test.zalan.do";

kube_default__workbench_pr_165_6_workbench_landing_0__workbench_pr_165_6_smart_product_platform_test_zalan_do____: Host(/^(workbench-pr-165-6[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/wb/user-guide")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/wb/user-guide", "/wb/landing")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_sct_15__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sct")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/sct", "/sizing/sct")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_sct_15__workbench_test_zalando_net____: Host(/^(workbench-test[.]zalando[.]net[.]?(:[0-9]+)?)$/) && PathSubtree("/sct")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/sct", "/sizing/sct")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_sct_api_16__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/api/sct")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://size-charts-tool.zizing-test.zalan.do";

kube_default__workbench_sct_api_16__workbench_test_zalando_net____: Host(/^(workbench-test[.]zalando[.]net[.]?(:[0-9]+)?)$/) && PathSubtree("/api/sct")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://size-charts-tool.zizing-test.zalan.do";

kube_default__workbench_sct_assets_14__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/sct/static")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://size-charts-tool.zizing-test.zalan.do";

kube_default__workbench_sct_assets_14__workbench_test_zalando_net____: Host(/^(workbench-test[.]zalando[.]net[.]?(:[0-9]+)?)$/) && PathSubtree("/sct/static")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> setRequestHeader("is_workbench", "true")
  -> preserveHost("false")
  -> "https://size-charts-tool.zizing-test.zalan.do";

kube_default__workbench_workbench_landing_0__workbench_smart_product_platform_test_zalan_do____: Host(/^(workbench[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/wb/user-guide")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/wb/user-guide", "/wb/landing")
  -> "https://workbench-test.zalando.net";

kube_default__workbench_workbench_landing_0__workbench_test_zalando_net____: Host(/^(workbench-test[.]zalando[.]net[.]?(:[0-9]+)?)$/) && PathSubtree("/wb/user-guide")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> modPath("/wb/user-guide", "/wb/landing")
  -> "https://workbench-test.zalando.net";

kube_default__zissou_master_spp_brand_service_perf_test_ui__spp_brand_service_perf_test_ui_smart_product_platform_test_zalan_do____zissou_master_spp_brand_service_perf_test_ui: Host(/^(spp-brand-service-perf-test-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__zissou_master_spp_brand_service_perf_test_ui__spp_brand_service_perf_test_ui_smart_product_platform_test_zalan_do____zissou_master_spp_brand_service_perf_test_ui_https_redirect: Host(/^(spp-brand-service-perf-test-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__zissou_master_spp_product_search_perf_test_rds_ui__spp_product_search_perf_test_rds_ui_smart_product_platform_test_zalan_do____zissou_master_spp_product_search_perf_test_rds_ui: Host(/^(spp-product-search-perf-test-rds-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__zissou_master_spp_product_search_perf_test_rds_ui__spp_product_search_perf_test_rds_ui_smart_product_platform_test_zalan_do____zissou_master_spp_product_search_perf_test_rds_ui_https_redirect: Host(/^(spp-product-search-perf-test-rds-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__zissou_master_spp_product_search_perf_test_spilo_ui__spp_product_search_perf_test_spilo_ui_smart_product_platform_test_zalan_do____zissou_master_spp_product_search_perf_test_spilo_ui: Host(/^(spp-product-search-perf-test-spilo-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__zissou_master_spp_product_search_perf_test_spilo_ui__spp_product_search_perf_test_spilo_ui_smart_product_platform_test_zalan_do____zissou_master_spp_product_search_perf_test_spilo_ui_https_redirect: Host(/^(spp-product-search-perf-test-spilo-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__zissou_master_spp_product_search_perf_test_ui__spp_product_search_perf_test_ui_smart_product_platform_test_zalan_do____zissou_master_spp_product_search_perf_test_ui: Host(/^(spp-product-search-perf-test-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__zissou_master_spp_product_search_perf_test_ui__spp_product_search_perf_test_ui_smart_product_platform_test_zalan_do____zissou_master_spp_product_search_perf_test_ui_https_redirect: Host(/^(spp-product-search-perf-test-ui[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__zissou_spp_brand_service_perf_test__spp_brand_service_perf_test_smart_product_platform_test_zalan_do____zissou_spp_brand_service_perf_test: Host(/^(spp-brand-service-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__zissou_spp_brand_service_perf_test__spp_brand_service_perf_test_smart_product_platform_test_zalan_do____zissou_spp_brand_service_perf_test_https_redirect: Host(/^(spp-brand-service-perf-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__zissou_spp_product_query_indexer_blue__spp_product_query_indexer_blue_smart_product_platform_test_zalan_do___version__zissou_spp_product_query_indexer_blue: Host(/^(spp-product-query-indexer-blue[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/version")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__zissou_spp_product_query_indexer_blue__spp_product_query_indexer_blue_smart_product_platform_test_zalan_do___version__zissou_spp_product_query_indexer_blue_https_redirect: Host(/^(spp-product-query-indexer-blue[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000) && PathSubtree("/version")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__zissou_spp_product_query_indexer_green__spp_product_query_indexer_green_smart_product_platform_test_zalan_do___version__zissou_spp_product_query_indexer_green: Host(/^(spp-product-query-indexer-green[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/version")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> "http://10.2.64.49:9000";

kube_default__zissou_spp_product_query_indexer_green__spp_product_query_indexer_green_smart_product_platform_test_zalan_do___version__zissou_spp_product_query_indexer_green_https_redirect: Host(/^(spp-product-query-indexer-green[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000) && PathSubtree("/version")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__zissou_spp_product_query_indexer_unknown__spp_product_query_indexer_unknown_smart_product_platform_test_zalan_do___version__zissou_spp_product_query_indexer_unknown: Host(/^(spp-product-query-indexer-unknown[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/version")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__zissou_spp_product_query_indexer_unknown__spp_product_query_indexer_unknown_smart_product_platform_test_zalan_do___version__zissou_spp_product_query_indexer_unknown_https_redirect: Host(/^(spp-product-query-indexer-unknown[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000) && PathSubtree("/version")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_fabric__named_param_skipper_testing_bmooney__named_param_test_smart_product_platform_test_zalan_do____fgtestapp: Host(/^(named-param-test[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Path("/api/sales-channels/:id/category-tree") && JWTPayloadAllKV("https://identity.zalando.com/managed-id", "bmooney")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog()
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_fabric__precedence_test_specific__0__brian_testing_smart_product_platform_test_zalan_do____: Path("/resource/**") && Host(/^(brian-testing[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(200)
  -> inlineContent("WILDCARD")
  -> <shunt>;

kube_fabric__precedence_test_specific__brian_testing_smart_product_platform_test_zalan_do____fgtestapp: Host(/^(brian-testing[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_fabric__precedence_test_specific__brian_testing_smart_product_platform_test_zalan_do____fgtestapp_https_redirect: Host(/^(brian-testing[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_fabric__precedence_test_wildcard__0__brian_testing_smart_product_platform_test_zalan_do____: Path("/resource/sub/:id") && Host(/^(brian-testing[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(201)
  -> inlineContent("SPECIFIC")
  -> <shunt>;

kube_fabric__precedence_test_wildcard__brian_testing_smart_product_platform_test_zalan_do____fgtestapp: Host(/^(brian-testing[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_fabric__precedence_test_wildcard__brian_testing_smart_product_platform_test_zalan_do____fgtestapp_https_redirect: Host(/^(brian-testing[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_fabric__sloppy_server_default_404_route__0__sloppy_smart_product_platform_test_zalan_do____: Host(/^(sloppy[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_fabric__sloppy_server_default_404_route__sloppy_smart_product_platform_test_zalan_do____sloppy_server: Host(/^(sloppy[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_fabric__sloppy_server_default_404_route__sloppy_smart_product_platform_test_zalan_do____sloppy_server_https_redirect: Host(/^(sloppy[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_fabric__sloppy_server_get_api_applications_parent_id_alerts_admins__sloppy_smart_product_platform_test_zalan_do____sloppy_server: Host(/^(sloppy[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/applications/:parent-id/alerts") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "cgallagher")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_fabric__sloppy_server_get_api_applications_parent_id_alerts_all__sloppy_smart_product_platform_test_zalan_do____sloppy_server: Host(/^(sloppy[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/applications/:parent-id/alerts")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sloppy.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_fabric__sloppy_server_get_api_applications_parent_id_slr_admins__sloppy_smart_product_platform_test_zalan_do____sloppy_server: Host(/^(sloppy[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/applications/:parent-id/slr") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "cgallagher")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_fabric__sloppy_server_get_api_applications_parent_id_slr_all__sloppy_smart_product_platform_test_zalan_do____sloppy_server: Host(/^(sloppy[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/applications/:parent-id/slr")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sloppy.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_fabric__sloppy_server_get_api_applications_parent_id_status_admins__sloppy_smart_product_platform_test_zalan_do____sloppy_server: Host(/^(sloppy[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/applications/:parent-id/status") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "cgallagher")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_fabric__sloppy_server_get_api_applications_parent_id_status_all__sloppy_smart_product_platform_test_zalan_do____sloppy_server: Host(/^(sloppy[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/applications/:parent-id/status")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sloppy.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_fabric__sloppy_server_post_api_applications_admins__sloppy_smart_product_platform_test_zalan_do____sloppy_server: Host(/^(sloppy[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/applications") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "cgallagher")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_fabric__sloppy_server_post_api_applications_all__sloppy_smart_product_platform_test_zalan_do____sloppy_server: Host(/^(sloppy[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/applications")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sloppy.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_fabric__sloppy_server_put_api_applications_id_admins__sloppy_smart_product_platform_test_zalan_do____sloppy_server: Host(/^(sloppy[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/applications/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "cgallagher")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_fabric__sloppy_server_put_api_applications_id_all__sloppy_smart_product_platform_test_zalan_do____sloppy_server: Host(/^(sloppy[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/applications/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sloppy.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_fabric__sloppy_server_reject_http_route__0__sloppy_smart_product_platform_test_zalan_do____: Host(/^(sloppy[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_fabric__sloppy_server_reject_http_route__sloppy_smart_product_platform_test_zalan_do____sloppy_server: Host(/^(sloppy[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_kube_system__deployment_service_status_service__deployment_status_service_smart_product_platform_test_zalan_do____deployment_service_status_service: Host(/^(deployment-status-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"ba4badb7-be67-4a54-95b7-acc35550ad62\",\"application_id\":\"deployment-service\",\"path_templates\":[\"//deployments/{deployment_task_name}\",\"//healthz\"]}")
  -> <roundRobin, "http://10.2.213.174:8080", "http://10.2.249.50:8080", "http://10.2.99.98:8080">;

kube_kube_system__deployment_service_status_service__deployment_status_service_smart_product_platform_test_zalan_do____deployment_service_status_service_https_redirect: Host(/^(deployment-status-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_kube_system__prometheus__system_prometheus_smart_product_platform_test_zalan_do____prometheus: Host(/^(system-prometheus[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/employees", "realm", "/services")
  -> <roundRobin, "http://10.2.64.74:9090", "http://10.2.91.133:9090">;

kube_kube_system__prometheus__system_prometheus_smart_product_platform_test_zalan_do____prometheus_https_redirect: Host(/^(system-prometheus[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg____spp_product_read_product_sets_fashion_store_ie_master_270_smart_product_platform_test_zalan_do__catchall__0_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <shunt>;

kube_rg____spp_product_read_product_sets_fashion_store_ie_master_271_smart_product_platform_test_zalan_do__catchall__0_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <shunt>;

kube_rg____spp_product_read_product_sets_fashion_store_ie_master_272_smart_product_platform_test_zalan_do__catchall__0_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <shunt>;

kube_rg____spp_product_read_product_sets_fashion_store_ie_master_273_smart_product_platform_test_zalan_do__catchall__0_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <shunt>;

kube_rg____spp_product_read_products_fashion_store_ie_master_270_smart_product_platform_test_zalan_do__catchall__0_0: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <shunt>;

kube_rg____spp_product_read_products_fashion_store_ie_master_271_smart_product_platform_test_zalan_do__catchall__0_0: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <shunt>;

kube_rg____spp_product_read_products_fashion_store_ie_master_272_smart_product_platform_test_zalan_do__catchall__0_0: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <shunt>;

kube_rg____spp_product_read_products_fashion_store_ie_master_273_smart_product_platform_test_zalan_do__catchall__0_0: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <shunt>;

kube_rg____spp_product_read_smart_product_platform_test_zalan_do__catchall__0_0: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <shunt>;

kube_rg____workbench_assets_smart_product_platform_test_zalan_do__catchall__0_0: Host(/^(workbench-assets[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <shunt>;

kube_rg__default__workbench_assets__all__0_0: Host(/^(workbench-assets[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> preserveHost("false")
  -> dropResponseHeader("x-amz-id-2")
  -> dropResponseHeader("x-amz-request-id")
  -> dropResponseHeader("server")
  -> "https://coldbrew-workbench-assets.s3.eu-central-1.amazonaws.com";

kube_rg__default__workbench_assets__all__0_0_https_redirect: Host(/^(workbench-assets[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__internal___spp_product_read_fashion_store_ie_spp_product_read_ingress_cluster_local__catchall__0_0: Host(/^(spp-product-read-fashion-store-ie[.]spp-product-read[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <shunt>;

kube_rg__internal___spp_product_read_products_fashion_store_ie_master_270_ingress_cluster_local__catchall__0_0: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <shunt>;

kube_rg__internal___spp_product_read_products_fashion_store_ie_master_271_ingress_cluster_local__catchall__0_0: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <shunt>;

kube_rg__internal___spp_product_read_products_fashion_store_ie_master_272_ingress_cluster_local__catchall__0_0: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <shunt>;

kube_rg__internal___spp_product_read_products_fashion_store_ie_master_273_ingress_cluster_local__catchall__0_0: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie__all__4_0: Host(/^(spp-product-read-fashion-store-ie[.]spp-product-read[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Host(/spp-product-read.smart-product-platform-test.zalan.do/) && PathSubtree("/") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie__all__5_0: Host(/^(spp-product-read-fashion-store-ie[.]spp-product-read[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && PathSubtree("/") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie__get__0_0: Host(/^(spp-product-read-fashion-store-ie[.]spp-product-read[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-nxs6xg49v2k79hhba85n82on7:0", "2021-11-08T17:39:12Z")
  -> apiUsageMonitoring("{\"api_id\":\"5c502c16-315e-4c92-a8a3-2dbbe39dfeaa\",\"application_id\":\"spp-product-read\",\"tag\":\"fashion-store-ie\",\"path_templates\":[\"/api/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> consistentHashKey("${product_id}")
  -> "http://10.2.87.133:8080";

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie__get__1_0: Host(/^(spp-product-read-fashion-store-ie[.]spp-product-read[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> inlineContent("{\"title\":\"Employee Rejected\",\"status\":403,\"detail\":\"Employee tokens are not allowed access this route\"}")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie__get__2_0: Host(/^(spp-product-read-fashion-store-ie[.]spp-product-read[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-nxs6xg49v2k79hhba85n82on7:0", "2021-11-08T17:39:12Z")
  -> apiUsageMonitoring("{\"api_id\":\"5c502c16-315e-4c92-a8a3-2dbbe39dfeaa\",\"application_id\":\"spp-product-read\",\"tag\":\"fashion-store-ie\",\"path_templates\":[\"/api/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services")
  -> compress(3, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-read.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> consistentHashKey("${product_id}")
  -> "http://10.2.87.133:8080";

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie__get__3_0: Host(/^(spp-product-read-fashion-store-ie[.]spp-product-read[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-nxs6xg49v2k79hhba85n82on7:0", "2021-11-08T17:39:12Z")
  -> apiUsageMonitoring("{\"api_id\":\"5c502c16-315e-4c92-a8a3-2dbbe39dfeaa\",\"application_id\":\"spp-product-read\",\"tag\":\"fashion-store-ie\",\"path_templates\":[\"/api/products/{product_id}\"]}")
  -> flowId("reuse")
  -> consistentHashKey("${product_id}")
  -> "http://10.2.87.133:8080";

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_270__all__4_0: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Host(/spp-product-read.smart-product-platform-test.zalan.do/) && PathSubtree("/") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_270__all__5_0: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && PathSubtree("/") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_270__get__0_0: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_270__get__1_0: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> inlineContent("{\"title\":\"Employee Rejected\",\"status\":403,\"detail\":\"Employee tokens are not allowed access this route\"}")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_270__get__2_0: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_270__get__3_0: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_271__all__4_0: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Host(/spp-product-read.smart-product-platform-test.zalan.do/) && PathSubtree("/") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_271__all__5_0: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && PathSubtree("/") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_271__get__0_0: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_271__get__1_0: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> inlineContent("{\"title\":\"Employee Rejected\",\"status\":403,\"detail\":\"Employee tokens are not allowed access this route\"}")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_271__get__2_0: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_271__get__3_0: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_272__all__4_0: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Host(/spp-product-read.smart-product-platform-test.zalan.do/) && PathSubtree("/") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_272__all__5_0: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && PathSubtree("/") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_272__get__0_0: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_272__get__1_0: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> inlineContent("{\"title\":\"Employee Rejected\",\"status\":403,\"detail\":\"Employee tokens are not allowed access this route\"}")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_272__get__2_0: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_272__get__3_0: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_273__all__4_0: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Host(/spp-product-read.smart-product-platform-test.zalan.do/) && PathSubtree("/") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_273__all__5_0: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && PathSubtree("/") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_273__get__0_0: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-nxs6xg49v2k79hhba85n82on7:0", "2021-11-08T17:39:12Z")
  -> apiUsageMonitoring("{\"api_id\":\"5c502c16-315e-4c92-a8a3-2dbbe39dfeaa\",\"application_id\":\"spp-product-read\",\"tag\":\"fashion-store-ie\",\"path_templates\":[\"/api/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> consistentHashKey("${product_id}")
  -> "http://10.2.87.133:8080";

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_273__get__1_0: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> inlineContent("{\"title\":\"Employee Rejected\",\"status\":403,\"detail\":\"Employee tokens are not allowed access this route\"}")
  -> <shunt>;

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_273__get__2_0: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-nxs6xg49v2k79hhba85n82on7:0", "2021-11-08T17:39:12Z")
  -> apiUsageMonitoring("{\"api_id\":\"5c502c16-315e-4c92-a8a3-2dbbe39dfeaa\",\"application_id\":\"spp-product-read\",\"tag\":\"fashion-store-ie\",\"path_templates\":[\"/api/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services")
  -> compress(3, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-read.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> consistentHashKey("${product_id}")
  -> "http://10.2.87.133:8080";

kube_rg__internal_spp_product_read__spp_product_read_products_fashion_store_ie_master_273__get__3_0: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]ingress[.]cluster[.]local[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && ClientIP("10.2.0.0/16", "172.31.0.0/16")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-nxs6xg49v2k79hhba85n82on7:0", "2021-11-08T17:39:12Z")
  -> apiUsageMonitoring("{\"api_id\":\"5c502c16-315e-4c92-a8a3-2dbbe39dfeaa\",\"application_id\":\"spp-product-read\",\"tag\":\"fashion-store-ie\",\"path_templates\":[\"/api/products/{product_id}\"]}")
  -> flowId("reuse")
  -> consistentHashKey("${product_id}")
  -> "http://10.2.87.133:8080";

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie__all__3_0: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie__all__3_0_https_redirect: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie__post__0_0: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-21bukdq4njr9u2c2tbh2auto4t:0", "2021-11-08T18:39:49Z")
  -> apiUsageMonitoring("{\"api_id\":\"5c502c16-315e-4c92-a8a3-2dbbe39dfeaa\",\"application_id\":\"spp-product-read\",\"tag\":\"fashion-store-ie\",\"path_templates\":[\"/api/product-sets\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.91.194:8080";

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie__post__0_0_https_redirect: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret") && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie__post__1_0: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> inlineContent("{\"title\":\"Employee Rejected\",\"status\":403,\"detail\":\"Employee tokens are not allowed access this route\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie__post__1_0_https_redirect: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie__post__2_0: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-21bukdq4njr9u2c2tbh2auto4t:0", "2021-11-08T18:39:49Z")
  -> apiUsageMonitoring("{\"api_id\":\"5c502c16-315e-4c92-a8a3-2dbbe39dfeaa\",\"application_id\":\"spp-product-read\",\"tag\":\"fashion-store-ie\",\"path_templates\":[\"/api/product-sets\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services")
  -> compress(3, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-read.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.91.194:8080";

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie__post__2_0_https_redirect: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_270__all__3_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_270__all__3_0_https_redirect: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_270__post__0_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_270__post__0_0_https_redirect: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret") && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_270__post__1_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> inlineContent("{\"title\":\"Employee Rejected\",\"status\":403,\"detail\":\"Employee tokens are not allowed access this route\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_270__post__1_0_https_redirect: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_270__post__2_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_270__post__2_0_https_redirect: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_271__all__3_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_271__all__3_0_https_redirect: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_271__post__0_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_271__post__0_0_https_redirect: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret") && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_271__post__1_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> inlineContent("{\"title\":\"Employee Rejected\",\"status\":403,\"detail\":\"Employee tokens are not allowed access this route\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_271__post__1_0_https_redirect: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_271__post__2_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_271__post__2_0_https_redirect: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_272__all__3_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_272__all__3_0_https_redirect: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_272__post__0_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_272__post__0_0_https_redirect: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret") && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_272__post__1_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> inlineContent("{\"title\":\"Employee Rejected\",\"status\":403,\"detail\":\"Employee tokens are not allowed access this route\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_272__post__1_0_https_redirect: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_272__post__2_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_272__post__2_0_https_redirect: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_273__all__3_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_273__all__3_0_https_redirect: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_273__post__0_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-21bukdq4njr9u2c2tbh2auto4t:0", "2021-11-08T18:39:49Z")
  -> apiUsageMonitoring("{\"api_id\":\"5c502c16-315e-4c92-a8a3-2dbbe39dfeaa\",\"application_id\":\"spp-product-read\",\"tag\":\"fashion-store-ie\",\"path_templates\":[\"/api/product-sets\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.91.194:8080";

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_273__post__0_0_https_redirect: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret") && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_273__post__1_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> inlineContent("{\"title\":\"Employee Rejected\",\"status\":403,\"detail\":\"Employee tokens are not allowed access this route\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_273__post__1_0_https_redirect: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_273__post__2_0: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-21bukdq4njr9u2c2tbh2auto4t:0", "2021-11-08T18:39:49Z")
  -> apiUsageMonitoring("{\"api_id\":\"5c502c16-315e-4c92-a8a3-2dbbe39dfeaa\",\"application_id\":\"spp-product-read\",\"tag\":\"fashion-store-ie\",\"path_templates\":[\"/api/product-sets\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services")
  -> compress(3, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-read.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> "http://10.2.91.194:8080";

kube_rg__spp_product_read__spp_product_read_product_sets_fashion_store_ie_master_273__post__2_0_https_redirect: Host(/^(spp-product-read-product-sets-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/product-sets")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie__all__4_0: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read.smart-product-platform-test.zalan.do/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie__all__4_0_https_redirect: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read.smart-product-platform-test.zalan.do/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie__all__5_0: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie__all__5_0_https_redirect: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie__get__0_0: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-nxs6xg49v2k79hhba85n82on7:0", "2021-11-08T17:39:12Z")
  -> apiUsageMonitoring("{\"api_id\":\"5c502c16-315e-4c92-a8a3-2dbbe39dfeaa\",\"application_id\":\"spp-product-read\",\"tag\":\"fashion-store-ie\",\"path_templates\":[\"/api/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> consistentHashKey("${product_id}")
  -> "http://10.2.87.133:8080";

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie__get__0_0_https_redirect: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret") && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie__get__1_0: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> inlineContent("{\"title\":\"Employee Rejected\",\"status\":403,\"detail\":\"Employee tokens are not allowed access this route\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie__get__1_0_https_redirect: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie__get__2_0: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-nxs6xg49v2k79hhba85n82on7:0", "2021-11-08T17:39:12Z")
  -> apiUsageMonitoring("{\"api_id\":\"5c502c16-315e-4c92-a8a3-2dbbe39dfeaa\",\"application_id\":\"spp-product-read\",\"tag\":\"fashion-store-ie\",\"path_templates\":[\"/api/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services")
  -> compress(3, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-read.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> consistentHashKey("${product_id}")
  -> "http://10.2.87.133:8080";

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie__get__2_0_https_redirect: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie__get__3_0: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-nxs6xg49v2k79hhba85n82on7:0", "2021-11-08T17:39:12Z")
  -> apiUsageMonitoring("{\"api_id\":\"5c502c16-315e-4c92-a8a3-2dbbe39dfeaa\",\"application_id\":\"spp-product-read\",\"tag\":\"fashion-store-ie\",\"path_templates\":[\"/api/products/{product_id}\"]}")
  -> flowId("reuse")
  -> consistentHashKey("${product_id}")
  -> "http://10.2.87.133:8080";

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie__get__3_0_https_redirect: Host(/^(spp-product-read[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_270__all__4_0: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read.smart-product-platform-test.zalan.do/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_270__all__4_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read.smart-product-platform-test.zalan.do/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_270__all__5_0: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_270__all__5_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_270__get__0_0: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_270__get__0_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret") && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_270__get__1_0: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> inlineContent("{\"title\":\"Employee Rejected\",\"status\":403,\"detail\":\"Employee tokens are not allowed access this route\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_270__get__1_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_270__get__2_0: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_270__get__2_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_270__get__3_0: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_270__get__3_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-270[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_271__all__4_0: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read.smart-product-platform-test.zalan.do/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_271__all__4_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read.smart-product-platform-test.zalan.do/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_271__all__5_0: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_271__all__5_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_271__get__0_0: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_271__get__0_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret") && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_271__get__1_0: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> inlineContent("{\"title\":\"Employee Rejected\",\"status\":403,\"detail\":\"Employee tokens are not allowed access this route\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_271__get__1_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_271__get__2_0: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_271__get__2_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_271__get__3_0: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_271__get__3_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-271[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_272__all__4_0: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read.smart-product-platform-test.zalan.do/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_272__all__4_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read.smart-product-platform-test.zalan.do/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_272__all__5_0: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_272__all__5_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_272__get__0_0: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_272__get__0_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret") && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_272__get__1_0: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> inlineContent("{\"title\":\"Employee Rejected\",\"status\":403,\"detail\":\"Employee tokens are not allowed access this route\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_272__get__1_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_272__get__2_0: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_272__get__2_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_272__get__3_0: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_272__get__3_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-272[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_273__all__4_0: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read.smart-product-platform-test.zalan.do/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_273__all__4_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read.smart-product-platform-test.zalan.do/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_273__all__5_0: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(400)
  -> inlineContent("{\"title\":\"Routegroup route not matched\",\"status\":400,\"detail\":\"No routes matched your request. Make sure to use the 'X-Sales-Channel' header, and that the path and method is correct.\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_273__all__5_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_273__get__0_0: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-nxs6xg49v2k79hhba85n82on7:0", "2021-11-08T17:39:12Z")
  -> apiUsageMonitoring("{\"api_id\":\"5c502c16-315e-4c92-a8a3-2dbbe39dfeaa\",\"application_id\":\"spp-product-read\",\"tag\":\"fashion-store-ie\",\"path_templates\":[\"/api/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> consistentHashKey("${product_id}")
  -> "http://10.2.87.133:8080";

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_273__get__0_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "cgallagher", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "dtrsan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "fmoloney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "mmaqueda", "https://identity.zalando.com/managed-id", "cgasetcarret") && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_273__get__1_0: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> inlineContent("{\"title\":\"Employee Rejected\",\"status\":403,\"detail\":\"Employee tokens are not allowed access this route\"}")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_273__get__1_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_273__get__2_0: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-nxs6xg49v2k79hhba85n82on7:0", "2021-11-08T17:39:12Z")
  -> apiUsageMonitoring("{\"api_id\":\"5c502c16-315e-4c92-a8a3-2dbbe39dfeaa\",\"application_id\":\"spp-product-read\",\"tag\":\"fashion-store-ie\",\"path_templates\":[\"/api/products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services")
  -> compress(3, "application/json")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-product-read.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> consistentHashKey("${product_id}")
  -> "http://10.2.87.133:8080";

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_273__get__2_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_273__get__3_0: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Method("GET") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> originMarker("apiUsageMonitoring", "d-nxs6xg49v2k79hhba85n82on7:0", "2021-11-08T17:39:12Z")
  -> apiUsageMonitoring("{\"api_id\":\"5c502c16-315e-4c92-a8a3-2dbbe39dfeaa\",\"application_id\":\"spp-product-read\",\"tag\":\"fashion-store-ie\",\"path_templates\":[\"/api/products/{product_id}\"]}")
  -> flowId("reuse")
  -> consistentHashKey("${product_id}")
  -> "http://10.2.87.133:8080";

kube_rg__spp_product_read__spp_product_read_products_fashion_store_ie_master_273__get__3_0_https_redirect: Host(/^(spp-product-read-products-fashion-store-ie-master-273[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Host(/spp-product-read-fashion-store-ie.spp-product-read.ingress.cluster.local/) && Method("GET") && Header("X-Forwarded-Proto", "http") && HeaderRegexp("X-Sales-Channel", /^(a13a1960-5d57-4c51-a3ea-7e8d28e2c0b7)$/) && Path("/api/products/:product_id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_setanta__setanta_cats_nua_default_404_route__0__setanta_cats_nua_smart_product_platform_test_zalan_do____: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_setanta__setanta_cats_nua_default_404_route__0__spp_rule_engine_test_zalandoapis_com____: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_setanta__setanta_cats_nua_default_404_route__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_default_404_route__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua_https_redirect: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_setanta__setanta_cats_nua_default_404_route__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_default_404_route__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua_https_redirect: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_setanta__setanta_cats_nua_get_api_internal_products_id_admins__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_get_api_internal_products_id_admins__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/products/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_get_api_internal_products_id_enrichments_admins__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/products/:id/enrichments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_get_api_internal_products_id_enrichments_admins__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/products/:id/enrichments") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_get_api_internal_products_id_enrichments_all__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/products/:id/enrichments")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_get_api_internal_products_id_enrichments_all__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/products/:id/enrichments")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_get_api_internal_products_id_non_whitelisted__0__setanta_cats_nua_smart_product_platform_test_zalan_do____: Path("/api/internal/products/:id") && Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_setanta__setanta_cats_nua_get_api_internal_products_id_non_whitelisted__0__spp_rule_engine_test_zalandoapis_com____: Path("/api/internal/products/:id") && Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_setanta__setanta_cats_nua_get_api_internal_products_id_non_whitelisted__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_get_api_internal_products_id_non_whitelisted__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_get_api_internal_products_id_service_stupssppproductutils__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/products/:id") && JWTPayloadAllKV("sub", "stups_spp-product-utils")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_get_api_internal_products_id_service_stupssppproductutils__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && Path("/api/internal/products/:id") && JWTPayloadAllKV("sub", "stups_spp-product-utils")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_get_api_internal_rules_execution_status_admins__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/rules/execution-status") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_get_api_internal_rules_execution_status_admins__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/rules/execution-status") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_get_api_internal_rules_execution_status_all__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/rules/execution-status")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_get_api_internal_rules_execution_status_all__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/rules/execution-status")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_actions_admins__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/actions") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_actions_admins__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/actions") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_actions_all__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/actions")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_actions_all__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/actions")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_auto_refeed_disable_admins__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/auto-refeed/disable") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_auto_refeed_disable_admins__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/auto-refeed/disable") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_auto_refeed_disable_all__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/auto-refeed/disable")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_auto_refeed_disable_all__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/auto-refeed/disable")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_eye_patch_id_admins__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/eye-patch/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_eye_patch_id_admins__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/eye-patch/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_eye_patch_id_all__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/eye-patch/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_eye_patch_id_all__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/eye-patch/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_process_products_admins__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/process/products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_process_products_admins__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/process/products") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_process_products_all__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/process/products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_process_products_all__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/process/products")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_products_id_enrichments_id_admins__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/products/:id/enrichments/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_products_id_enrichments_id_admins__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/products/:id/enrichments/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_products_id_enrichments_id_all__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/products/:id/enrichments/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_products_id_enrichments_id_all__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/products/:id/enrichments/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_rules_diff_evaluation_requests_admins__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/rules/diff-evaluation-requests") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_rules_diff_evaluation_requests_admins__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/rules/diff-evaluation-requests") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_rules_diff_evaluation_requests_all__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/rules/diff-evaluation-requests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_rules_diff_evaluation_requests_all__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/rules/diff-evaluation-requests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_rules_evaluation_requests_admins__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/rules/evaluation-requests") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_rules_evaluation_requests_admins__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/rules/evaluation-requests") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_rules_evaluation_requests_all__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/rules/evaluation-requests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_rules_evaluation_requests_all__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/rules/evaluation-requests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_rules_multi_evaluation_requests_admins__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/rules/multi-evaluation-requests") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_rules_multi_evaluation_requests_admins__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/api/internal/rules/multi-evaluation-requests") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "vobrien", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "xgallegopujo", "https://identity.zalando.com/managed-id", "wchung", "https://identity.zalando.com/managed-id", "dhunt", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "ralmeida")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_rules_multi_evaluation_requests_all__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/rules/multi-evaluation-requests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_post_api_internal_rules_multi_evaluation_requests_all__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/api/internal/rules/multi-evaluation-requests")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_reject_http_route__0__setanta_cats_nua_smart_product_platform_test_zalan_do____: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_setanta__setanta_cats_nua_reject_http_route__0__spp_rule_engine_test_zalandoapis_com____: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_setanta__setanta_cats_nua_reject_http_route__setanta_cats_nua_smart_product_platform_test_zalan_do____setanta_cats_nua: Host(/^(setanta-cats-nua[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_cats_nua_reject_http_route__spp_rule_engine_test_zalandoapis_com____setanta_cats_nua: Host(/^(spp-rule-engine-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <roundRobin, "http://10.2.35.133:8080", "http://10.2.43.5:8080", "http://10.2.51.133:8080", "http://10.2.78.133:8080">;

kube_setanta__setanta_enrichments_producer_default_404_route__0__setanta_enrichments_producer_smart_product_platform_test_zalan_do____: Host(/^(setanta-enrichments-producer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_setanta__setanta_enrichments_producer_default_404_route__0__spp_enrichments_producer_test_zalandoapis_com____: Host(/^(spp-enrichments-producer-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_setanta__setanta_enrichments_producer_default_404_route__setanta_enrichments_producer_smart_product_platform_test_zalan_do____setanta_enrichments_producer: Host(/^(setanta-enrichments-producer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;

kube_setanta__setanta_enrichments_producer_default_404_route__setanta_enrichments_producer_smart_product_platform_test_zalan_do____setanta_enrichments_producer_https_redirect: Host(/^(setanta-enrichments-producer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_setanta__setanta_enrichments_producer_default_404_route__spp_enrichments_producer_test_zalandoapis_com____setanta_enrichments_producer: Host(/^(spp-enrichments-producer-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;

kube_setanta__setanta_enrichments_producer_default_404_route__spp_enrichments_producer_test_zalandoapis_com____setanta_enrichments_producer_https_redirect: Host(/^(spp-enrichments-producer-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_setanta__setanta_enrichments_producer_delete_consumers_id_admins__setanta_enrichments_producer_smart_product_platform_test_zalan_do____setanta_enrichments_producer: Host(/^(setanta-enrichments-producer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/consumers/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "dhunt")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;

kube_setanta__setanta_enrichments_producer_delete_consumers_id_admins__spp_enrichments_producer_test_zalandoapis_com____setanta_enrichments_producer: Host(/^(spp-enrichments-producer-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/consumers/:id") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "dhunt")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;

kube_setanta__setanta_enrichments_producer_delete_consumers_id_all__setanta_enrichments_producer_smart_product_platform_test_zalan_do____setanta_enrichments_producer: Host(/^(setanta-enrichments-producer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/consumers/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;

kube_setanta__setanta_enrichments_producer_delete_consumers_id_all__spp_enrichments_producer_test_zalandoapis_com____setanta_enrichments_producer: Host(/^(spp-enrichments-producer-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/consumers/:id")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;

kube_setanta__setanta_enrichments_producer_get_health_admins__setanta_enrichments_producer_smart_product_platform_test_zalan_do____setanta_enrichments_producer: Host(/^(setanta-enrichments-producer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "dhunt")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;

kube_setanta__setanta_enrichments_producer_get_health_admins__spp_enrichments_producer_test_zalandoapis_com____setanta_enrichments_producer: Host(/^(spp-enrichments-producer-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/health") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "dhunt")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;

kube_setanta__setanta_enrichments_producer_get_health_all__setanta_enrichments_producer_smart_product_platform_test_zalan_do____setanta_enrichments_producer: Host(/^(setanta-enrichments-producer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;

kube_setanta__setanta_enrichments_producer_get_health_all__spp_enrichments_producer_test_zalandoapis_com____setanta_enrichments_producer: Host(/^(spp-enrichments-producer-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/health")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;

kube_setanta__setanta_enrichments_producer_get_metrics_admins__setanta_enrichments_producer_smart_product_platform_test_zalan_do____setanta_enrichments_producer: Host(/^(setanta-enrichments-producer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "dhunt")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;

kube_setanta__setanta_enrichments_producer_get_metrics_admins__spp_enrichments_producer_test_zalandoapis_com____setanta_enrichments_producer: Host(/^(spp-enrichments-producer-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/metrics") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "dhunt")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;

kube_setanta__setanta_enrichments_producer_get_metrics_all__setanta_enrichments_producer_smart_product_platform_test_zalan_do____setanta_enrichments_producer: Host(/^(setanta-enrichments-producer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;

kube_setanta__setanta_enrichments_producer_get_metrics_all__spp_enrichments_producer_test_zalandoapis_com____setanta_enrichments_producer: Host(/^(spp-enrichments-producer-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/metrics")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;

kube_setanta__setanta_enrichments_producer_post_consumers_kafka_admins__setanta_enrichments_producer_smart_product_platform_test_zalan_do____setanta_enrichments_producer: Host(/^(setanta-enrichments-producer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/consumers/kafka") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "dhunt")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;

kube_setanta__setanta_enrichments_producer_post_consumers_kafka_admins__spp_enrichments_producer_test_zalandoapis_com____setanta_enrichments_producer: Host(/^(spp-enrichments-producer-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && Path("/consumers/kafka") && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "psuchon", "https://identity.zalando.com/managed-id", "matgonzalez", "https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "dhunt")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;

kube_setanta__setanta_enrichments_producer_post_consumers_kafka_all__setanta_enrichments_producer_smart_product_platform_test_zalan_do____setanta_enrichments_producer: Host(/^(setanta-enrichments-producer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/consumers/kafka")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;

kube_setanta__setanta_enrichments_producer_post_consumers_kafka_all__spp_enrichments_producer_test_zalandoapis_com____setanta_enrichments_producer: Host(/^(spp-enrichments-producer-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3) && Path("/consumers/kafka")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;

kube_setanta__setanta_enrichments_producer_reject_http_route__0__setanta_enrichments_producer_smart_product_platform_test_zalan_do____: Host(/^(setanta-enrichments-producer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_setanta__setanta_enrichments_producer_reject_http_route__0__spp_enrichments_producer_test_zalandoapis_com____: Host(/^(spp-enrichments-producer-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_setanta__setanta_enrichments_producer_reject_http_route__setanta_enrichments_producer_smart_product_platform_test_zalan_do____setanta_enrichments_producer: Host(/^(setanta-enrichments-producer[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;

kube_setanta__setanta_enrichments_producer_reject_http_route__spp_enrichments_producer_test_zalandoapis_com____setanta_enrichments_producer: Host(/^(spp-enrichments-producer-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> <roundRobin, "http://10.2.80.6:9000", "http://10.2.88.9:9000", "http://10.2.91.193:9000">;