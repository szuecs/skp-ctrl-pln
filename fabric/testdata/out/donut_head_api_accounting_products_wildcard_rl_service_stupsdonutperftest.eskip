kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsdonutperftest__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsdonutperftest__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;