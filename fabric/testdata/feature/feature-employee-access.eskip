fg_404_default_feature_employee_access_feature_employee_access_example_org__: PathSubtree("/") && HostAny("feature-employee-access.example.org", "feature-employee-access.example.org:80", "feature-employee-access.example.org:443")
	-> oauthTokeninfoAllScope("uid")
	-> unverifiedAuditLog("sub")
	-> status(404)
	-> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
	-> <shunt>;

fg_reject_default_feature_employee_access_feature_employee_access_example_org__: PathSubtree("/") && HostAny("feature-employee-access.example.org", "feature-employee-access.example.org:443") && Header("X-Forwarded-Proto", "http")
	-> oauthTokeninfoAllScope("uid")
	-> unverifiedAuditLog("sub")
	-> status(400)
	-> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
	-> <shunt>;

fg_default_feature_employee_access_feature_employee_access_example_org__api_resource_get: Path("/api/resource") && Method("GET") && HostAny("feature-employee-access.example.org", "feature-employee-access.example.org:443") && Header("X-Forwarded-Proto", "https") && Weight(23)
	-> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
	-> oauthTokeninfoAllScope("uid", "foo.read")
	-> unverifiedAuditLog("sub")
	-> inlineContentIfStatus(429, "{\"title\":\"Rate limit exceeded\",\"detail\":\"See the retry-after header for how many seconds to wait before retrying.\",\"status\":429}", "application/problem+json")
	-> clusterClientRatelimit("feature-employee-access_api-resource_get", 5, "0s", "Authorization")
	-> flowId("reuse")
	-> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
	-> <roundRobin, "http://10.2.23.42:8080", "http://10.2.5.4:8080">;

fg_eaccess_default_feature_employee_access_feature_employee_access_example_org__api_resource_get: Path("/api/resource") && Method("GET") && HostAny("feature-employee-access.example.org", "feature-employee-access.example.org:443") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "jdoe")
	-> oauthTokeninfoAnyKV("realm", "/employees")
	-> oauthTokeninfoAllScope("uid")
	-> unverifiedAuditLog("sub")
	-> inlineContentIfStatus(429, "{\"title\":\"Rate limit exceeded\",\"detail\":\"See the retry-after header for how many seconds to wait before retrying.\",\"status\":429}", "application/problem+json")
	-> clusterClientRatelimit("feature-employee-access_api-resource_get", 5, "0s", "Authorization")
	-> flowId("reuse")
	-> forwardToken("X-TokenInfo-Forward", "uid", "realm")
	-> <roundRobin, "http://10.2.23.42:8080", "http://10.2.5.4:8080">;

fg_default_feature_employee_access_feature_employee_access_example_org__api_secondary_resource_get: Path("/api/secondary-resource") && Method("GET") && HostAny("feature-employee-access.example.org", "feature-employee-access.example.org:443") && Header("X-Forwarded-Proto", "https") && Weight(23)
	-> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
	-> oauthTokeninfoAllScope("uid", "bar.read")
	-> unverifiedAuditLog("sub")
	-> flowId("reuse")
	-> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
	-> <roundRobin, "http://10.2.23.42:8080", "http://10.2.5.4:8080">;

fg_eaccess_default_feature_employee_access_feature_employee_access_example_org__api_secondary_resource_get: Path("/api/secondary-resource") && Method("GET") && HostAny("feature-employee-access.example.org", "feature-employee-access.example.org:443") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
	-> oauthTokeninfoAnyKV("realm", "/employees")
	-> oauthTokeninfoAllScope("uid")
	-> unverifiedAuditLog("sub")
	-> flowId("reuse")
	-> forwardToken("X-TokenInfo-Forward", "uid", "realm")
	-> <roundRobin, "http://10.2.23.42:8080", "http://10.2.5.4:8080">;

fg_default_feature_employee_access_feature_employee_access_example_org__api_third_resource_get: Path("/api/third-resource") && Method("GET") && HostAny("feature-employee-access.example.org", "feature-employee-access.example.org:443") && Header("X-Forwarded-Proto", "https") && Weight(23)
	-> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
	-> oauthTokeninfoAllScope("uid", "qux.read")
	-> unverifiedAuditLog("sub")
	-> flowId("reuse")
	-> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
	-> <roundRobin, "http://10.2.23.42:8080", "http://10.2.5.4:8080">;

fg_eaccess_default_feature_employee_access_feature_employee_access_example_org__api_third_resource_get: Path("/api/third-resource") && Method("GET") && HostAny("feature-employee-access.example.org", "feature-employee-access.example.org:443") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
	-> status(403)
	-> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"deny all employees\"}")
	-> <shunt>;