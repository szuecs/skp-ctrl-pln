kube_default__sugarcane_default_404_route__0__spp_commodity_group_data_test_zalandoapis_com____: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__sugarcane_default_404_route__0__sugarcane_smart_product_platform_test_zalan_do____: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__sugarcane_default_404_route__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_default_404_route__spp_commodity_group_data_test_zalandoapis_com____sugarcane_https_redirect: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__sugarcane_default_404_route__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_default_404_route__sugarcane_smart_product_platform_test_zalan_do____sugarcane_https_redirect: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;kube_default__sugarcane_get_api_commodity_groups_admins__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/commodity-groups") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_admins__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/commodity-groups") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;kube_default__sugarcane_get_api_commodity_groups_id_admins__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_id_admins__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;kube_default__sugarcane_get_api_commodity_groups_id_rl_all__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_id_rl_all__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;kube_default__sugarcane_get_api_commodity_groups_id_rl_service_stupssugarcaneperftest__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_GET_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_id_rl_service_stupssugarcaneperftest__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_GET_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;kube_default__sugarcane_get_api_commodity_groups_id_rl_users_all__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "fpobbig", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "wtuff", "https://identity.zalando.com/managed-id", "arastogi", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "igardas", "https://identity.zalando.com/managed-id", "ssinghi", "https://identity.zalando.com/managed-id", "apostolache", "https://identity.zalando.com/managed-id", "dalee", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "padorosz", "https://identity.zalando.com/managed-id", "zulabideen", "https://identity.zalando.com/managed-id", "akraskov", "https://identity.zalando.com/managed-id", "dabbassi", "https://identity.zalando.com/managed-id", "ydyakov", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "jmcneela", "https://identity.zalando.com/managed-id", "aflanagan")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_id_rl_users_all__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "fpobbig", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "wtuff", "https://identity.zalando.com/managed-id", "arastogi", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "igardas", "https://identity.zalando.com/managed-id", "ssinghi", "https://identity.zalando.com/managed-id", "apostolache", "https://identity.zalando.com/managed-id", "dalee", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "padorosz", "https://identity.zalando.com/managed-id", "zulabideen", "https://identity.zalando.com/managed-id", "akraskov", "https://identity.zalando.com/managed-id", "dabbassi", "https://identity.zalando.com/managed-id", "ydyakov", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "jmcneela", "https://identity.zalando.com/managed-id", "aflanagan")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;kube_default__sugarcane_get_api_commodity_groups_rl_all__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/commodity-groups") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_rl_all__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/commodity-groups") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;kube_default__sugarcane_get_api_commodity_groups_rl_service_stupsmasterdata__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/commodity-groups") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_masterdata")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups_GET_stups_masterdata", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_rl_service_stupsmasterdata__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/commodity-groups") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_masterdata")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups_GET_stups_masterdata", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;kube_default__sugarcane_get_api_commodity_groups_rl_service_stupssugarcaneperftest__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/commodity-groups") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups_GET_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_rl_service_stupssugarcaneperftest__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/commodity-groups") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups_GET_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;kube_default__sugarcane_get_api_commodity_groups_rl_users_all__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/commodity-groups") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "sopletaev", "https://identity.zalando.com/managed-id", "fpobbig", "https://identity.zalando.com/managed-id", "rschmulian", "https://identity.zalando.com/managed-id", "ivarouchakis", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "wtuff", "https://identity.zalando.com/managed-id", "arastogi", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "igardas", "https://identity.zalando.com/managed-id", "ssinghi", "https://identity.zalando.com/managed-id", "apostolache", "https://identity.zalando.com/managed-id", "dstroynov", "https://identity.zalando.com/managed-id", "dalee", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "padorosz", "https://identity.zalando.com/managed-id", "zulabideen", "https://identity.zalando.com/managed-id", "akraskov", "https://identity.zalando.com/managed-id", "dabbassi", "https://identity.zalando.com/managed-id", "ydyakov", "https://identity.zalando.com/managed-id", "pabazsolt", "https://identity.zalando.com/managed-id", "mneverov", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "nkrapyvchenk", "https://identity.zalando.com/managed-id", "jmcneela", "https://identity.zalando.com/managed-id", "cyeh", "https://identity.zalando.com/managed-id", "aflanagan")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_get_api_commodity_groups_rl_users_all__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/commodity-groups") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "sopletaev", "https://identity.zalando.com/managed-id", "fpobbig", "https://identity.zalando.com/managed-id", "rschmulian", "https://identity.zalando.com/managed-id", "ivarouchakis", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "wtuff", "https://identity.zalando.com/managed-id", "arastogi", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "igardas", "https://identity.zalando.com/managed-id", "ssinghi", "https://identity.zalando.com/managed-id", "apostolache", "https://identity.zalando.com/managed-id", "dstroynov", "https://identity.zalando.com/managed-id", "dalee", "https://identity.zalando.com/managed-id", "jwawszczak", "https://identity.zalando.com/managed-id", "padorosz", "https://identity.zalando.com/managed-id", "zulabideen", "https://identity.zalando.com/managed-id", "akraskov", "https://identity.zalando.com/managed-id", "dabbassi", "https://identity.zalando.com/managed-id", "ydyakov", "https://identity.zalando.com/managed-id", "pabazsolt", "https://identity.zalando.com/managed-id", "mneverov", "https://identity.zalando.com/managed-id", "dmiaroslavsk", "https://identity.zalando.com/managed-id", "nkrapyvchenk", "https://identity.zalando.com/managed-id", "jmcneela", "https://identity.zalando.com/managed-id", "cyeh", "https://identity.zalando.com/managed-id", "aflanagan")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;kube_default__sugarcane_head_api_commodity_groups_id_admins__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_head_api_commodity_groups_id_admins__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;kube_default__sugarcane_head_api_commodity_groups_id_rl_all__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_HEAD", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_head_api_commodity_groups_id_rl_all__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_HEAD", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;kube_default__sugarcane_head_api_commodity_groups_id_rl_service_stupssppmasterattributes__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-master-attributes")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_HEAD_stups_spp-master-attributes", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_head_api_commodity_groups_id_rl_service_stupssppmasterattributes__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-master-attributes")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_HEAD_stups_spp-master-attributes", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;kube_default__sugarcane_head_api_commodity_groups_id_rl_service_stupssugarcaneperftest__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_HEAD_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_head_api_commodity_groups_id_rl_service_stupssugarcaneperftest__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "sugarcane.read")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_HEAD_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;kube_default__sugarcane_post_api_internal_events_admins__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/internal/events") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_post_api_internal_events_admins__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/internal/events") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;kube_default__sugarcane_post_api_internal_events_all__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/internal/events") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_post_api_internal_events_all__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/internal/events") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;kube_default__sugarcane_put_api_commodity_groups_id_admins__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_put_api_commodity_groups_id_admins__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;kube_default__sugarcane_put_api_commodity_groups_id_rl_all__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_PUT", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_put_api_commodity_groups_id_rl_all__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_PUT", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;kube_default__sugarcane_put_api_commodity_groups_id_rl_service_stupssugarcaneperftest__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_PUT_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_put_api_commodity_groups_id_rl_service_stupssugarcaneperftest__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_sugarcane-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_PUT_stups_sugarcane-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;kube_default__sugarcane_put_api_commodity_groups_id_rl_users_all__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "wtuff", "https://identity.zalando.com/managed-id", "igardas", "https://identity.zalando.com/managed-id", "apostolache", "https://identity.zalando.com/managed-id", "dalee", "https://identity.zalando.com/managed-id", "padorosz", "https://identity.zalando.com/managed-id", "ydyakov", "https://identity.zalando.com/managed-id", "jmcneela", "https://identity.zalando.com/managed-id", "aflanagan")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_PUT_users", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_put_api_commodity_groups_id_rl_users_all__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Path("/api/commodity-groups/:id") && Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "wtuff", "https://identity.zalando.com/managed-id", "igardas", "https://identity.zalando.com/managed-id", "apostolache", "https://identity.zalando.com/managed-id", "dalee", "https://identity.zalando.com/managed-id", "padorosz", "https://identity.zalando.com/managed-id", "ydyakov", "https://identity.zalando.com/managed-id", "jmcneela", "https://identity.zalando.com/managed-id", "aflanagan")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("sugarcane_api-commodity-groups-id_PUT_users", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;kube_default__sugarcane_reject_http_route__0__spp_commodity_group_data_test_zalandoapis_com____: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__sugarcane_reject_http_route__0__sugarcane_smart_product_platform_test_zalan_do____: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__sugarcane_reject_http_route__spp_commodity_group_data_test_zalandoapis_com____sugarcane: Host(/^(spp-commodity-group-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;

kube_default__sugarcane_reject_http_route__sugarcane_smart_product_platform_test_zalan_do____sugarcane: Host(/^(sugarcane[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"fad12556-3cf7-4e33-ae0b-e4f11adf3db6\",\"application_id\":\"sugarcane\",\"path_templates\":[\"/api/commodity-groups\",\"/api/commodity-groups/{cg_code}\"]}")
  -> <roundRobin, "http://10.2.80.37:8080", "http://10.2.88.161:8080">;