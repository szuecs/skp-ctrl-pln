kube_default__spp_brand_service_default_404_route__0__spp_brand_data_test_zalandoapis_com____: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_default_404_route__0__spp_brand_service_smart_product_platform_test_zalan_do____: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_default_404_route__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_default_404_route__spp_brand_data_test_zalandoapis_com____spp_brand_service_https_redirect: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__spp_brand_service_default_404_route__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_default_404_route__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service_https_redirect: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;kube_default__spp_brand_service_delete_api_brand_assignments_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-assignments/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brand_assignments_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-assignments/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_delete_api_brand_assignments_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-assignments/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments-id_DELETE", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brand_assignments_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-assignments/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments-id_DELETE", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_delete_api_brand_assignments_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-assignments/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments-id_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brand_assignments_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-assignments/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments-id_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_delete_api_brand_families_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brand_families_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_delete_api_brand_families_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_DELETE", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brand_families_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_DELETE", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_delete_api_brand_families_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brand_families_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_delete_api_brands_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_delete_api_brands_id_media_default_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_media_default_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_delete_api_brands_id_media_default_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_DELETE", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_media_default_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_DELETE", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_delete_api_brands_id_media_default_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_media_default_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_delete_api_brands_id_media_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_media_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_delete_api_brands_id_media_id_non_whitelisted__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_delete_api_brands_id_media_id_non_whitelisted__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_delete_api_brands_id_media_id_non_whitelisted__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_media_id_non_whitelisted__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_delete_api_brands_id_media_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_media_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_delete_api_brands_id_non_whitelisted__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_delete_api_brands_id_non_whitelisted__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_delete_api_brands_id_non_whitelisted__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_non_whitelisted__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_delete_api_brands_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_delete_api_brands_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_DELETE_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brand_assignments_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-assignments/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_assignments_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-assignments/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brand_assignments_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-assignments/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments-id_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_assignments_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-assignments/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments-id_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brand_assignments_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-assignments/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments-id_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_assignments_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-assignments/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments-id_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brand_families_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-families") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_families_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-families") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brand_families_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_families_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brand_families_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_families_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brand_families_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_families_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brand_families_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-families") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_families_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-families") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brand_families_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-families") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brand_families_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-families") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_media_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_media_default_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_default_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_media_default_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_default_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_media_default_rl_service_stupsbrandserviceui__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_brand-service-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_GET_stups_brand-service-ui", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_default_rl_service_stupsbrandserviceui__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_brand-service-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_GET_stups_brand-service-ui", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_media_default_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_default_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_media_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_media_id_content_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/:id/content") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_id_content_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/:id/content") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_media_id_content_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/:id/content") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id-content_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_id_content_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/:id/content") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id-content_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_media_id_content_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/:id/content") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id-content_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_id_content_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/:id/content") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id-content_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_media_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_media_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_media_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_media_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_media_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET", 600, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET", 600, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_rl_service_stupsbrandserviceui__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_brand-service-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_brand-service-ui", 800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_rl_service_stupsbrandserviceui__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_brand-service-ui")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_brand-service-ui", 800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_rl_service_stupsspaceballsdabo__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spaceballs-dabo")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_spaceballs-dabo", 800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_rl_service_stupsspaceballsdabo__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spaceballs-dabo")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_spaceballs-dabo", 800, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_rl_service_stupsspppdpurlkeygenerator__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-pdp-url-key-generator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_spp-pdp-url-key-generator", 6000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_rl_service_stupsspppdpurlkeygenerator__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-pdp-url-key-generator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_spp-pdp-url-key-generator", 6000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_id_rl_service_stupsuseraccountpreferences__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_user-account-preferences")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_user-account-preferences", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_id_rl_service_stupsuseraccountpreferences__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_user-account-preferences")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_GET_stups_user-account-preferences", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_brands_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_brands_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_media_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/media") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_media_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/media") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_media_categories_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/media-categories") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_media_categories_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/media-categories") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_media_categories_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/media-categories") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-media-categories_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_media_categories_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/media-categories") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-media-categories_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_media_categories_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/media-categories") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-media-categories_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_media_categories_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/media-categories") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-media-categories_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_media_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/media") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-media_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_media_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/media") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-media_GET", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_api_media_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/media") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-media_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_api_media_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/media") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-media_GET_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_health_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/health") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_health_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/health") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_health_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/health") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_health_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/health") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_metrics_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/metrics") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_metrics_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/metrics") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_get_metrics_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/metrics") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_get_metrics_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/metrics") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_head_api_brands_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_head_api_brands_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_head_api_brands_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_HEAD", 600, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_head_api_brands_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_HEAD", 600, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_head_api_brands_id_rl_service_stupsfrauddetectionbackend__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_fraud-detection-backend")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_HEAD_stups_fraud-detection-backend", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_head_api_brands_id_rl_service_stupsfrauddetectionbackend__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_fraud-detection-backend")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_HEAD_stups_fraud-detection-backend", 2000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_head_api_brands_id_rl_service_stupszalos__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_zalos")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_HEAD_stups_zalos", 24000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_head_api_brands_id_rl_service_stupszalos__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_zalos")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_HEAD_stups_zalos", 24000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_options_api_brand_assignments_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brand-assignments") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_assignments_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brand-assignments") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_assignments_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brand_assignments_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_options_api_brand_assignments_id_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brand-assignments/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "DELETE, GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_assignments_id_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brand-assignments/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "DELETE, GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_assignments_id_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brand_assignments_id_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_options_api_brand_collections_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brand-collections") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_collections_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brand-collections") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_collections_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brand_collections_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_options_api_brand_families_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brand-families") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_families_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brand-families") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_families_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brand_families_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_options_api_brand_families_id_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brand-families/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "PATCH, OPTIONS, PUT, GET, DELETE")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_families_id_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brand-families/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "PATCH, OPTIONS, PUT, GET, DELETE")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_families_id_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brand_families_id_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_options_api_brand_family_collections_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brand-family-collections") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_family_collections_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brand-family-collections") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brand_family_collections_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brand_family_collections_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_options_api_brands_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brands") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brands_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_options_api_brands_id_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "PATCH, HEAD, OPTIONS, PUT, GET, DELETE")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "PATCH, HEAD, OPTIONS, PUT, GET, DELETE")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brands_id_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_options_api_brands_id_media_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brands/:id/media") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_media_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands/:id/media") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_media_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brands_id_media_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_options_api_brands_id_media_default_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "DELETE, GET, PUT, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_media_default_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "DELETE, GET, PUT, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_media_default_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brands_id_media_default_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_options_api_brands_id_media_id_content_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brands/:id/media/:id/content") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_media_id_content_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands/:id/media/:id/content") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_media_id_content_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brands_id_media_id_content_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_options_api_brands_id_media_id_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "PATCH, OPTIONS, PUT, GET, DELETE")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_media_id_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "PATCH, OPTIONS, PUT, GET, DELETE")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_brands_id_media_id_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_brands_id_media_id_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_options_api_media_categories_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/media-categories") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_media_categories_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/media-categories") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_media_categories_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_media_categories_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_options_api_media_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/api/media") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_media_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/media") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_api_media_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_api_media_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_options_cache_refresh_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/cache-refresh") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_cache_refresh_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/cache-refresh") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "POST, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_cache_refresh_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_cache_refresh_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_options_health_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/health") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_health_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/health") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_health_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_health_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_options_metrics_cors__0__spp_brand_data_test_zalandoapis_com____: Path("/metrics") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_metrics_cors__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/metrics") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("OPTIONS") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> enableAccessLog(4, 5)
  -> status(204)
  -> flowId("reuse")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> appendResponseHeader("Access-Control-Allow-Methods", "GET, OPTIONS")
  -> appendResponseHeader("Access-Control-Allow-Headers", "authorization, ot-tracer-sampled, ot-tracer-spanid, ot-tracer-traceid")
  -> <shunt>;

kube_default__spp_brand_service_options_metrics_cors__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_options_metrics_cors__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_patch_api_brand_families_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brand_families_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_patch_api_brand_families_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_PATCH", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brand_families_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_PATCH", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_patch_api_brand_families_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_PATCH_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brand_families_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_PATCH_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_patch_api_brands_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brands_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_patch_api_brands_id_media_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brands_id_media_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_patch_api_brands_id_media_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_PATCH", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brands_id_media_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_PATCH", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_patch_api_brands_id_media_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_PATCH_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brands_id_media_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_PATCH_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_patch_api_brands_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_PATCH", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brands_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_PATCH", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_patch_api_brands_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_PATCH_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_patch_api_brands_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_PATCH_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_api_brand_assignments_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-assignments") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_assignments_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-assignments") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_api_brand_assignments_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-assignments") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_assignments_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-assignments") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_api_brand_assignments_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-assignments") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_assignments_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-assignments") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-assignments_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_api_brand_collections_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-collections") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_collections_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-collections") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_api_brand_collections_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-collections") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-collections_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_collections_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-collections") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-collections_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_api_brand_collections_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-collections") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-collections_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_collections_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-collections") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-collections_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_api_brand_families_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-families") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_families_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-families") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_api_brand_families_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-families") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_families_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-families") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_api_brand_families_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-families") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_families_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-families") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_api_brand_family_collections_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-family-collections") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_family_collections_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-family-collections") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_api_brand_family_collections_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-family-collections") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-family-collections_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_family_collections_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-family-collections") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-family-collections_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_api_brand_family_collections_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-family-collections") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-family-collections_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brand_family_collections_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-family-collections") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-family-collections_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_api_brands_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brands_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_api_brands_id_media_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brands_id_media_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_api_brands_id_media_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brands_id_media_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_api_brands_id_media_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brands_id_media_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_api_brands_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brands_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands_POST", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_api_brands_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_api_brands_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands_POST_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_cache_refresh_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/cache-refresh") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_cache_refresh_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/cache-refresh") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_post_cache_refresh_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/cache-refresh") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_post_cache_refresh_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/cache-refresh") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_put_api_brand_families_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brand_families_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_put_api_brand_families_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_PUT", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brand_families_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_PUT", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_put_api_brand_families_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_PUT_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brand_families_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brand-families/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brand-families-id_PUT_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_put_api_brands_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_put_api_brands_id_media_default_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_default_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_put_api_brands_id_media_default_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_PUT", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_default_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_PUT", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_put_api_brands_id_media_default_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_PUT_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_default_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_PUT_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_put_api_brands_id_media_default_rl_service_stupsuseraccountpreferences__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_user-account-preferences")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_PUT_stups_user-account-preferences", 90, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_default_rl_service_stupsuseraccountpreferences__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/default") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_user-account-preferences")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-default_PUT_stups_user-account-preferences", 90, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_put_api_brands_id_media_id_admins__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_id_admins__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "dgordon", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_put_api_brands_id_media_id_non_whitelisted__0__spp_brand_data_test_zalandoapis_com____: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_put_api_brands_id_media_id_non_whitelisted__0__spp_brand_service_smart_product_platform_test_zalan_do____: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_put_api_brands_id_media_id_non_whitelisted__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_id_non_whitelisted__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_put_api_brands_id_media_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_PUT_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_media_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id/media/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id-media-id_PUT_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_put_api_brands_id_rl_all__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_PUT", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_rl_all__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_PUT", 30, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_put_api_brands_id_rl_service_stupssppbrandserviceloadtest__spp_brand_data_test_zalandoapis_com____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_PUT_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_put_api_brands_id_rl_service_stupssppbrandserviceloadtest__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Path("/api/brands/:id") && Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-brand-service-loadtest")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "spp-brand-service.brands.write")
  -> clusterClientRatelimit("spp-brand-service_api-brands-id_PUT_stups_spp-brand-service-loadtest", 1000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;kube_default__spp_brand_service_reject_http_route__0__spp_brand_data_test_zalandoapis_com____: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_reject_http_route__0__spp_brand_service_smart_product_platform_test_zalan_do____: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> corsOrigin("https://dabo-master.lounge-test.zalan.do", "https://dabo.lounge-test.zalan.do", "https://mooncake-master.lounge-test.zalan.do", "https://mooncake-freeze.lounge-test.zalan.do", "https://dabo-freeze.lounge-test.zalan.do")
  -> <shunt>;

kube_default__spp_brand_service_reject_http_route__spp_brand_data_test_zalandoapis_com____spp_brand_service: Host(/^(spp-brand-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;

kube_default__spp_brand_service_reject_http_route__spp_brand_service_smart_product_platform_test_zalan_do____spp_brand_service: Host(/^(spp-brand-service[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"9643f1e1-3eb0-4a8a-ab34-f653974ddd40\",\"application_id\":\"spp-brand-service\",\"path_templates\":[\"/api/brand-assignments\",\"/api/brand-assignments/{code}\",\"/api/brand-collections\",\"/api/brand-families\",\"/api/brand-families/{code}\",\"/api/brand-family-collections\",\"/api/brands\",\"/api/brands/{code}\",\"/api/brands/{code}/media\",\"/api/brands/{code}/media/default\",\"/api/brands/{code}/media/{media_code}\",\"/api/brands/{code}/media/{media_code}/content\",\"/api/media\",\"/api/media-categories\"]}")
  -> <roundRobin, "http://10.2.14.157:9000", "http://10.2.69.70:9000">;