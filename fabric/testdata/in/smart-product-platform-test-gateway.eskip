kube_default__smart_product_platform_test_gateway_default_404_route__0__spp_product_details_smart_product_platform_test_zalan_do____: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_default_404_route__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_default_404_route__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test_https_redirect: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;kube_default__smart_product_platform_test_gateway_delete_issues_id_admins__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Path("/issues/:id") && Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "assassins")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;kube_default__smart_product_platform_test_gateway_delete_issues_id_non_whitelisted__0__spp_product_details_smart_product_platform_test_zalan_do____: Path("/issues/:id") && Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(403)
  -> unverifiedAuditLog("sub")
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":403,\"detail\":\"Illegal attempt to access whitelisted route\"}")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_delete_issues_id_non_whitelisted__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;kube_default__smart_product_platform_test_gateway_delete_issues_id_service_stupssomeservicename__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Path("/issues/:id") && Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("DELETE") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_some-service-name")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "smart-product-platform-test.write")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;kube_default__smart_product_platform_test_gateway_get_apps_id_admins__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Path("/apps/:id") && Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "assassins")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;kube_default__smart_product_platform_test_gateway_get_apps_id_all__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Path("/apps/:id") && Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "smart-product-platform-test.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;kube_default__smart_product_platform_test_gateway_get_hello_admins__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Path("/hello") && Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "assassins")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;kube_default__smart_product_platform_test_gateway_get_hello_all__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Path("/hello") && Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;kube_default__smart_product_platform_test_gateway_get_issues_id_admins__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Path("/issues/:id") && Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "assassins")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;kube_default__smart_product_platform_test_gateway_get_issues_id_all__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Path("/issues/:id") && Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "smart-product-platform-test.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;kube_default__smart_product_platform_test_gateway_get_issues_id_users_all__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Path("/issues/:id") && Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;kube_default__smart_product_platform_test_gateway_post_issues_admins__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Path("/issues") && Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "assassins")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;kube_default__smart_product_platform_test_gateway_post_issues_rl_all__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Path("/issues") && Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "smart-product-platform-test.write")
  -> clusterClientRatelimit("smart-product-platform-test-gateway_issues_POST", 10, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;kube_default__smart_product_platform_test_gateway_post_issues_rl_service_stupssomeservicename__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Path("/issues") && Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_some-service-name")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "smart-product-platform-test.write")
  -> clusterClientRatelimit("smart-product-platform-test-gateway_issues_POST_stups_some-service-name", 100, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;kube_default__smart_product_platform_test_gateway_put_issues_id_admins__0__spp_product_details_smart_product_platform_test_zalan_do____: Path("/issues/:id") && Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "assassins")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> setResponseHeader("Content-Type", "application/problem+json")
  -> status(501)
  -> inlineContent("{\"title\": \"Issues Updates Not Yet Supported\", \"status\": 501}")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_put_issues_id_admins__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;kube_default__smart_product_platform_test_gateway_put_issues_id_all__0__spp_product_details_smart_product_platform_test_zalan_do____: Path("/issues/:id") && Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> setResponseHeader("Content-Type", "application/problem+json")
  -> status(501)
  -> inlineContent("{\"title\": \"Issues Updates Not Yet Supported\", \"status\": 501}")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_put_issues_id_all__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;kube_default__smart_product_platform_test_gateway_reject_http_route__0__spp_product_details_smart_product_platform_test_zalan_do____: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__smart_product_platform_test_gateway_reject_http_route__spp_product_details_smart_product_platform_test_zalan_do____smart_product_platform_test: Host(/^(spp-product-details[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> status(502)
  -> inlineContent("no endpoints")
  -> <shunt>;