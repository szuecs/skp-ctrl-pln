kube_default__donut_default_404_route__0__donut_smart_product_platform_test_zalan_do____: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__donut_default_404_route__0__spp_accounting_data_test_zalandoapis_com____: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> oauthTokeninfoAllScope("uid")
  -> unverifiedAuditLog("sub")
  -> status(404)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":404,\"detail\":\"Gateway Route Not Matched\"}")
  -> <shunt>;

kube_default__donut_default_404_route__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_default_404_route__donut_smart_product_platform_test_zalan_do____donut_https_redirect: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;

kube_default__donut_default_404_route__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_default_404_route__spp_accounting_data_test_zalandoapis_com____donut_https_redirect: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && Weight(1000)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> redirectTo(308, "https:")
  -> <shunt>;kube_default__donut_get_api_accounting_products_wildcard_admins__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_admins__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_get_api_accounting_products_wildcard_rl_all__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_all__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsbuyingarticlesrelease__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsbuyingarticlesrelease__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsdonutperftest__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsdonutperftest__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsplanetexpresslocaltokenretriever__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsplanetexpresslocaltokenretriever__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsplatformminuetrelease__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsplatformminuetrelease__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsspporchestrator__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_spp-orchestrator", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_service_stupsspporchestrator__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_stups_spp-orchestrator", 1200, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_get_api_accounting_products_wildcard_rl_users_all__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_api_accounting_products_wildcard_rl_users_all__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_GET_users", 120, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_get_health_admins__donut_smart_product_platform_test_zalan_do____donut: Path("/health") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_health_admins__spp_accounting_data_test_zalandoapis_com____donut: Path("/health") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_get_health_all__donut_smart_product_platform_test_zalan_do____donut: Path("/health") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_get_health_all__spp_accounting_data_test_zalandoapis_com____donut: Path("/health") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("GET") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_head_api_accounting_products_wildcard_admins__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_admins__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_head_api_accounting_products_wildcard_rl_all__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD", 240, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_all__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD", 240, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsbuyingarticlesrelease__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsbuyingarticlesrelease__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsdonutperftest__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsdonutperftest__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsplanetexpresslocaltokenretriever__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsplanetexpresslocaltokenretriever__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsplatformminuetrelease__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsplatformminuetrelease__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsspporchestrator__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_spp-orchestrator", 2400, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_service_stupsspporchestrator__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_spp-orchestrator")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.read_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_stups_spp-orchestrator", 2400, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_head_api_accounting_products_wildcard_rl_users_all__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_users", 240, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_head_api_accounting_products_wildcard_rl_users_all__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("HEAD") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "jocarroll")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_HEAD_users", 240, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_patch_api_accounting_products_wildcard_admins__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_patch_api_accounting_products_wildcard_admins__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_patch_api_accounting_products_wildcard_rl_all__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PATCH", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_patch_api_accounting_products_wildcard_rl_all__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PATCH", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_patch_api_accounting_products_wildcard_rl_service_stupsdonutperftest__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PATCH_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_patch_api_accounting_products_wildcard_rl_service_stupsdonutperftest__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PATCH") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PATCH_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_post_api_accounting_products_admins__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_accounting_products_admins__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_post_api_accounting_products_rl_all__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_accounting_products_rl_all__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_post_api_accounting_products_rl_service_stupsbuyingarticlesrelease__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_accounting_products_rl_service_stupsbuyingarticlesrelease__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_post_api_accounting_products_rl_service_stupsdonutperftest__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_accounting_products_rl_service_stupsdonutperftest__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_post_api_accounting_products_rl_service_stupsplanetexpresslocaltokenretriever__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_accounting_products_rl_service_stupsplanetexpresslocaltokenretriever__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_post_api_accounting_products_rl_service_stupsplatformminuetrelease__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_accounting_products_rl_service_stupsplatformminuetrelease__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products_POST_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_post_api_internal_events_admins__donut_smart_product_platform_test_zalan_do____donut: Path("/api/internal/events") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_internal_events_admins__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/internal/events") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_post_api_internal_events_all__donut_smart_product_platform_test_zalan_do____donut: Path("/api/internal/events") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_post_api_internal_events_all__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/internal/events") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("POST") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "fabric-event-scheduler.read")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_put_api_accounting_products_wildcard_admins__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_put_api_accounting_products_wildcard_admins__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(5) && JWTPayloadAllKV("https://identity.zalando.com/realm", "users") && JWTPayloadAnyKV("https://identity.zalando.com/managed-id", "aalexandre", "https://identity.zalando.com/managed-id", "gcarta", "https://identity.zalando.com/managed-id", "kanli", "https://identity.zalando.com/managed-id", "bmooney", "https://identity.zalando.com/managed-id", "egalligan", "https://identity.zalando.com/managed-id", "dagordon", "https://identity.zalando.com/managed-id", "rlagarferrei", "https://identity.zalando.com/managed-id", "brcullen", "https://identity.zalando.com/managed-id", "msung", "https://identity.zalando.com/managed-id", "ralmeida", "https://identity.zalando.com/managed-id", "aortega")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> enableAccessLog(2, 4, 5)
  -> unverifiedAuditLog("https://identity.zalando.com/managed-id")
  -> oauthTokeninfoAllScope("uid")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_put_api_accounting_products_wildcard_rl_all__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_put_api_accounting_products_wildcard_rl_all__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(3)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT", 60, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_put_api_accounting_products_wildcard_rl_service_stupsbuyingarticlesrelease__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_put_api_accounting_products_wildcard_rl_service_stupsbuyingarticlesrelease__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_buying-articles-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT_stups_buying-articles-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_put_api_accounting_products_wildcard_rl_service_stupsdonutperftest__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_put_api_accounting_products_wildcard_rl_service_stupsdonutperftest__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_donut-perf-test")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT_stups_donut-perf-test", 2147483647, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_put_api_accounting_products_wildcard_rl_service_stupsplanetexpresslocaltokenretriever__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_put_api_accounting_products_wildcard_rl_service_stupsplanetexpresslocaltokenretriever__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_planetexpress-local-token-retriever")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT_stups_planetexpress-local-token-retriever", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_put_api_accounting_products_wildcard_rl_service_stupsplatformminuetrelease__donut_smart_product_platform_test_zalan_do____donut: Path("/api/accounting-products/**") && Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_put_api_accounting_products_wildcard_rl_service_stupsplatformminuetrelease__spp_accounting_data_test_zalandoapis_com____donut: Path("/api/accounting-products/**") && Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Method("PUT") && Header("X-Forwarded-Proto", "https") && Weight(4) && JWTPayloadAllKV("sub", "stups_platform-minuet-release")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> inlineContentIfStatus(429, "{\"title\": \"Rate limit exceeded\", \"detail\": \"See the retry-after header for how many seconds to wait before retrying.\", \"status\": 429}", "application/problem+json")
  -> oauthTokeninfoAnyKV("realm", "/services", "realm", "/employees")
  -> unverifiedAuditLog("sub")
  -> oauthTokeninfoAllScope("uid", "donut.write_all")
  -> clusterClientRatelimit("donut_api-accounting-products-wildcard_PUT_stups_platform-minuet-release", 10000, "1m", "Authorization")
  -> flowId("reuse")
  -> forwardToken("X-TokenInfo-Forward", "uid", "scope", "realm")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;kube_default__donut_reject_http_route__0__donut_smart_product_platform_test_zalan_do____: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__donut_reject_http_route__0__spp_accounting_data_test_zalandoapis_com____: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/) && Header("X-Forwarded-Proto", "http") && PathSubtree("/")
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> unverifiedAuditLog("sub")
  -> status(400)
  -> inlineContent("{\"title\":\"Gateway Rejected\",\"status\":400,\"detail\":\"TLS is required\",\"type\":\"https://cloud.docs.zalando.net/howtos/ingress/#redirect-http-to-https\"}")
  -> <shunt>;

kube_default__donut_reject_http_route__donut_smart_product_platform_test_zalan_do____donut: Host(/^(donut[.]smart-product-platform-test[.]zalan[.]do[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;

kube_default__donut_reject_http_route__spp_accounting_data_test_zalandoapis_com____donut: Host(/^(spp-accounting-data-test[.]zalandoapis[.]com[.]?(:[0-9]+)?)$/)
  -> enableAccessLog(4, 5)
  -> lifo(30000, 50000, "3s")
  -> apiUsageMonitoring("{\"api_id\":\"45290030-99b8-4a30-8837-d36fc27384f3\",\"application_id\":\"donut\",\"path_templates\":[\"/api/accounting-products\",\"/api/accounting-products/{product_id}\"]}")
  -> <roundRobin, "http://10.2.193.124:8080", "http://10.2.83.233:8080">;